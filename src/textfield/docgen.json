[
  {
    "description": "",
    "displayName": "TextFieldInput",
    "methods": [],
    "props": {
      "type": {
        "defaultValue": {
          "value": "'text'",
          "computed": false
        },
        "required": false
      }
    }
  },
  {
    "description": "",
    "displayName": "TextFieldTextarea",
    "methods": []
  },
  {
    "description": "A TextField component for accepting text input from a user.",
    "displayName": "TextField",
    "methods": [
      {
        "name": "getDefaultFoundation",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "getLabelAdapterMethods_",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "getLineRippleAdapterMethods_",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "getOutlineAdapterMethods_",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "getInputAdapterMethods_",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "getFoundationMap_",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "renderIcon",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "iconNode",
            "type": {
              "name": "any"
            }
          },
          {
            "name": "leadOrTrail",
            "type": {
              "name": "union",
              "raw": "'leadingIcon_' | 'trailingIcon_'",
              "elements": [
                {
                  "name": "literal",
                  "value": "'leadingIcon_'"
                },
                {
                  "name": "literal",
                  "value": "'trailingIcon_'"
                }
              ]
            }
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "textarea": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Makes a multiline TextField."
      },
      "value": {
        "flowType": {
          "name": "union",
          "raw": "string | number",
          "elements": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "Sets the value for controlled TextFields."
      },
      "fullwidth": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Makes the TextField fullwidth."
      },
      "inputRef": {
        "flowType": {
          "name": "ReactRef",
          "raw": "React.Ref<any>",
          "elements": [
            {
              "name": "any"
            }
          ]
        },
        "required": false,
        "description": "A ref for the native input."
      },
      "disabled": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Disables the input."
      },
      "required": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Mark the input as required."
      },
      "invalid": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Makes the TextField visually invalid. This is sometimes automatically applied in cases where required or pattern is used."
      },
      "dense": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Makes the TextField dense"
      },
      "outlined": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Outline the TextField"
      },
      "label": {
        "flowType": {
          "name": "ReactNode",
          "raw": "React.Node"
        },
        "required": false,
        "description": "A label for the input."
      },
      "withLeadingIcon": {
        "flowType": {
          "name": "ReactNode",
          "raw": "React.Node"
        },
        "required": false,
        "description": "Add a leading icon."
      },
      "withTrailingIcon": {
        "flowType": {
          "name": "ReactNode",
          "raw": "React.Node"
        },
        "required": false,
        "description": "Add a trailing icon."
      },
      "rootProps": {
        "flowType": {
          "name": "Object"
        },
        "required": false,
        "description": "By default, props spread to the input. These props are for the component's root container."
      },
      "type": {
        "flowType": {
          "name": "string"
        },
        "required": false,
        "description": "The type of input field to render"
      }
    }
  },
  {
    "description": "A help text component",
    "displayName": "TextFieldHelperText",
    "methods": [],
    "props": {
      "persistent": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Make the help text always visible"
      },
      "validationMsg": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Make the help a validation message style"
      }
    }
  },
  {
    "description": "An Icon in a TextField",
    "displayName": "TextFieldIcon",
    "methods": [
      {
        "name": "getDefaultFoundation",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ]
  }
]