{
	"id": 0,
	"name": "@rmwc/tabs",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 366,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/jamesmfriedman/Sites/rmwc/src/tabs/index.tsx",
			"sources": [
				{
					"fileName": "index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 226,
			"name": "\"tab\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/jamesmfriedman/Sites/rmwc/src/tabs/tab.tsx",
			"children": [
				{
					"id": 227,
					"name": "TabProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 229,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The label for the tab, passed as children."
							},
							"sources": [
								{
									"fileName": "tab.tsx",
									"line": 18,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "React.ReactNode"
							}
						},
						{
							"id": 230,
							"name": "icon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The icon to use for the tab."
							},
							"sources": [
								{
									"fileName": "tab.tsx",
									"line": 20,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "IconPropT"
							}
						},
						{
							"id": 228,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A label for the tab."
							},
							"sources": [
								{
									"fileName": "tab.tsx",
									"line": 16,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 233,
							"name": "onInteraction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Fires when a tab has been interacted with. This is captures both keyboard and click events."
							},
							"sources": [
								{
									"fileName": "tab.tsx",
									"line": 26,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 232,
							"name": "restrictIndicator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Restricts the indicator to the content"
							},
							"sources": [
								{
									"fileName": "tab.tsx",
									"line": 24,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 231,
							"name": "stacked",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Stacks the icon on top of the text label"
							},
							"sources": [
								{
									"fileName": "tab.tsx",
									"line": 22,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								229,
								230,
								228,
								233,
								232,
								231
							]
						}
					],
					"sources": [
						{
							"fileName": "tab.tsx",
							"line": 14,
							"character": 25
						}
					]
				},
				{
					"id": 239,
					"name": "Tab",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "A Tab component"
					},
					"sources": [
						{
							"fileName": "tab.tsx",
							"line": 51,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ComponentClass",
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"name": "TabProps",
												"id": 227
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 240,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 241,
															"name": "contextApi",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "tab-bar-context.tsx",
																	"line": 17,
																	"character": 39
																}
															],
															"type": {
																"type": "reference",
																"name": "TabBarContextT",
																"id": 2
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																241
															]
														}
													]
												}
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							{
								"type": "reference",
								"name": "FunctionComponent",
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"name": "TabProps",
												"id": 227
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 242,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 243,
															"name": "contextApi",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "tab-bar-context.tsx",
																	"line": 17,
																	"character": 39
																}
															],
															"type": {
																"type": "reference",
																"name": "TabBarContextT",
																"id": 2
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																243
															]
														}
													]
												}
											}
										]
									}
								]
							}
						]
					},
					"defaultValue": " withTabBarContext()<TabProps>(\n  class extends FoundationComponent<\n    TabProps & { contextApi?: TabBarContextT }\n  > {\n    static displayName = 'Tab';\n\n    _id = randomId('tab');\n    root = this.createElement('root');\n    tabIndicator: TabIndicator | null = null;\n    content: HTMLDivElement | null = null;\n    rippleSurfaceApi: RippleSurface | null = null;\n\n    constructor(props: TabProps & { contextApi?: TabBarContextT }) {\n      super(props);\n      this.props.contextApi && this.props.contextApi.registerTab(this);\n      this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentWillUnmount() {\n      this.props.contextApi && this.props.contextApi.unregisterTab(this);\n    }\n\n    get id() {\n      return this.props.id\n        ? this.props.id\n        : (this as any)._reactInternalFiber.key || this._id;\n    }\n\n    getDefaultFoundation() {\n      return new MDCTabFoundation(\n        /** @type {!MDCTabAdapter} */ ({\n          setAttr: (attr: string, value: any) => this.root.addProp(attr, value),\n          addClass: (className: string) => this.root.addClass(className),\n          removeClass: (className: string) => this.root.removeClass(className),\n          hasClass: (className: string) => this.root.hasClass(className),\n          activateIndicator: (previousIndicatorClientRect: ClientRect) =>\n            this.tabIndicator &&\n            this.tabIndicator.activate(previousIndicatorClientRect),\n          deactivateIndicator: () =>\n            this.tabIndicator && this.tabIndicator.deactivate(),\n          notifyInteracted: () => {\n            const evt = this.emit(\n              'onInteraction',\n              { tabId: this.id },\n              true /* bubble */\n            );\n\n            this.props.contextApi &&\n              this.props.contextApi.onTabInteraction(evt);\n          },\n          getOffsetLeft: () => this.root.ref && this.root.ref.offsetLeft,\n          getOffsetWidth: () => this.root.ref && this.root.ref.offsetWidth,\n          getContentOffsetLeft: () => this.content && this.content.offsetLeft,\n          getContentOffsetWidth: () => this.content && this.content.offsetWidth,\n          focus: () => this.root.ref && this.root.ref.focus()\n        })\n      );\n    }\n\n    handleClick(evt: React.MouseEvent) {\n      this.props.onClick && this.props.onClick(evt);\n      this.foundation.handleClick(evt);\n    }\n\n    get active() {\n      return this.foundation.isActive();\n    }\n\n    set focusOnActivate(focusOnActivate: string) {\n      this.foundation.setFocusOnActivate(focusOnActivate);\n    }\n\n    activate(computeIndicatorClientRect: ClientRect) {\n      this.foundation.activate(computeIndicatorClientRect);\n    }\n\n    deactivate() {\n      this.foundation.deactivate();\n    }\n\n    computeIndicatorClientRect() {\n      return this.tabIndicator && this.tabIndicator.computeContentClientRect();\n    }\n\n    computeDimensions() {\n      return this.foundation.computeDimensions();\n    }\n\n    focus() {\n      this.root.ref && this.root.ref.focus();\n    }\n\n    render() {\n      const {\n        children,\n        label,\n        icon,\n        stacked,\n        restrictIndicator,\n        contextApi,\n        ...rest\n      } = this.props;\n      return (\n        <TabRoot\n          {...this.root.props(rest)}\n          onClick={this.handleClick}\n          stacked={stacked}\n          ref={this.root.setRef}\n          ripple={{\n            surface: this.rippleSurfaceApi\n          }}\n        >\n          <div className=\"mdc-tab__content\" ref={el => (this.content = el)}>\n            {!!icon && <TabIcon icon={icon} />}\n            {(children !== undefined || label !== undefined) && (\n              <span className=\"mdc-tab__text-label\">\n                {label}\n                {children}\n              </span>\n            )}\n            {!!restrictIndicator && (\n              <TabIndicator\n                ref={(api: TabIndicator) => (this.tabIndicator = api)}\n              />\n            )}\n          </div>\n          {!restrictIndicator && (\n            <TabIndicator\n              ref={(api: TabIndicator) => (this.tabIndicator = api)}\n            />\n          )}\n          <RippleSurface\n            ref={(rippleSurfaceApi: RippleSurface) =>\n              (this.rippleSurfaceApi = rippleSurfaceApi)\n            }\n            className=\"mdc-tab__ripple\"\n          />\n        </TabRoot>\n      );\n    }\n  }\n)"
				},
				{
					"id": 237,
					"name": "TabIcon",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "A Tab icon. This is an instance of the Icon component."
					},
					"sources": [
						{
							"fileName": "tab.tsx",
							"line": 44,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "ForwardRefExoticComponent",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 238,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reference",
										"name": "RefAttributes",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						]
					},
					"defaultValue": " componentFactory<IconProps>({\n  displayName: 'TabIcon',\n  tag: Icon,\n  classNames: ['mdc-tab__icon']\n})"
				},
				{
					"id": 234,
					"name": "TabRoot",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "tab.tsx",
							"line": 29,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ComponentClass",
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 235,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											{
												"type": "reference",
												"name": "RefAttributes",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											},
											{
												"type": "reference",
												"name": "WithRippleProps"
											},
											{
												"type": "reference",
												"name": "DeprecatedRippleProps"
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							{
								"type": "reference",
								"name": "FunctionComponent",
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 236,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											{
												"type": "reference",
												"name": "RefAttributes",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											},
											{
												"type": "reference",
												"name": "WithRippleProps"
											},
											{
												"type": "reference",
												"name": "DeprecatedRippleProps"
											}
										]
									}
								]
							}
						]
					},
					"defaultValue": " withRipple({ surface: false })(\n  componentFactory<TabProps>({\n    displayName: 'TabRoot',\n    tag: 'button',\n    classNames: (props: TabProps) => [\n      'mdc-tab',\n      {\n        'mdc-tab--stacked': props.stacked\n      }\n    ],\n    consumeProps: ['stacked']\n  })\n)"
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						227
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						239,
						237,
						234
					]
				}
			],
			"sources": [
				{
					"fileName": "tab.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 244,
			"name": "\"tab-bar\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/jamesmfriedman/Sites/rmwc/src/tabs/tab-bar.tsx",
			"children": [
				{
					"id": 253,
					"name": "TabBar",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The TabBar component"
					},
					"typeParameter": [
						{
							"id": 297,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 328,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 276,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 277,
									"name": "new TabBar",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 278,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TabBarProps",
												"id": 245
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TabBar",
										"id": 253
									},
									"overwrites": {
										"type": "reference",
										"name": "FoundationComponent.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-bar.tsx",
									"line": 52,
									"character": 4
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FoundationComponent.__constructor"
							}
						},
						{
							"id": 304,
							"name": "canUpdate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 202,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true",
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.canUpdate"
							}
						},
						{
							"id": 300,
							"name": "elements",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 201,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 301,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 302,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 303,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "FoundationElement",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
											"line": 201,
											"character": 11
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.elements"
							}
						},
						{
							"id": 299,
							"name": "foundation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 200,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": " this.getDefaultFoundation()",
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.foundation"
							}
						},
						{
							"id": 255,
							"name": "root",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "tab-bar.tsx",
									"line": 44,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "FoundationElement",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"name": "HTMLElement"
									}
								]
							},
							"defaultValue": " this.createElement('root')"
						},
						{
							"id": 257,
							"name": "tabList",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "tab-bar.tsx",
									"line": 46,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 256,
							"name": "tabScroller",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "tab-bar.tsx",
									"line": 45,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TabScroller",
										"id": 30
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"defaultValue": " null"
						},
						{
							"id": 254,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "tab-bar.tsx",
									"line": 42,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"TabBar\""
						},
						{
							"id": 298,
							"name": "shouldDebounce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 198,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.shouldDebounce"
							}
						},
						{
							"id": 344,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 345,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 610,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 350,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 351,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 352,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "TabBarProps",
																"id": 245
															}
														]
													}
												]
											}
										},
										{
											"id": 353,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 642,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 359,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 360,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 361,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "TabBarProps",
																"id": 245
															}
														]
													}
												]
											}
										},
										{
											"id": 362,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 363,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 670,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 334,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 335,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 336,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 337,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 539,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 279,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 280,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "FoundationComponent.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-bar.tsx",
									"line": 61,
									"character": 19
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FoundationComponent.componentDidMount"
							}
						},
						{
							"id": 305,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 306,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 307,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "FoundationPropsT",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TabBarProps",
														"id": 245
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 219,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentDidUpdate"
							}
						},
						{
							"id": 342,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 343,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 596,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 346,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 347,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 348,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "TabBarProps",
																"id": 245
															}
														]
													}
												]
											}
										},
										{
											"id": 349,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 625,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 308,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 309,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 223,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentWillUnmount"
							}
						},
						{
							"id": 354,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 355,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 356,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "TabBarProps",
																"id": 245
															}
														]
													}
												]
											}
										},
										{
											"id": 357,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 358,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 655,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 310,
							"name": "createElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 311,
									"name": "createElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 312,
											"name": "ElementType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 313,
											"name": "elementName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FoundationElement",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "unknown",
												"name": "ElementType"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.createElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 229,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.createElement"
							}
						},
						{
							"id": 323,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 324,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fires a cross-browser-compatible custom event from the component root of the given type,"
									},
									"parameters": [
										{
											"id": 325,
											"name": "evtType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 326,
											"name": "evtData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										},
										{
											"id": 327,
											"name": "shouldBubble",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"name": "CustomEvent",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.emit"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 256,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.emit"
							}
						},
						{
							"id": 281,
							"name": "getDefaultFoundation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 282,
									"name": "getDefaultFoundation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "FoundationComponent.getDefaultFoundation"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-bar.tsx",
									"line": 82,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FoundationComponent.getDefaultFoundation"
							}
						},
						{
							"id": 338,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 339,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 340,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "TabBarProps",
																"id": 245
															}
														]
													}
												]
											}
										},
										{
											"id": 341,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 575,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 287,
							"name": "getTabElements",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 288,
									"name": "getTabElements",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Element"
												}
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-bar.tsx",
									"line": 147,
									"character": 16
								}
							]
						},
						{
							"id": 292,
							"name": "handleKeyDown",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 293,
									"name": "handleKeyDown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 294,
											"name": "evt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "KeyboardEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-bar.tsx",
									"line": 158,
									"character": 15
								}
							]
						},
						{
							"id": 289,
							"name": "handleTabInteraction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 290,
									"name": "handleTabInteraction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 291,
											"name": "evt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-bar.tsx",
									"line": 154,
									"character": 22
								}
							]
						},
						{
							"id": 295,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 296,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-bar.tsx",
									"line": 163,
									"character": 8
								}
							]
						},
						{
							"id": 329,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 330,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 331,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "TabBarProps",
																"id": 245
															}
														]
													}
												]
											}
										},
										{
											"id": 332,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 333,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 529,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 283,
							"name": "sync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 284,
									"name": "sync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 285,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TabBarProps",
												"id": 245
											}
										},
										{
											"id": 286,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TabBarProps",
												"id": 245
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "FoundationComponent.sync"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-bar.tsx",
									"line": 141,
									"character": 6
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FoundationComponent.sync"
							}
						},
						{
							"id": 316,
							"name": "syncProp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 317,
									"name": "syncProp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 318,
											"name": "prop",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 319,
											"name": "prevProp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 320,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 321,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 322,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
															"line": 242,
															"character": 46
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.syncProp"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 242,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.syncProp"
							}
						},
						{
							"id": 314,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 315,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.update"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 236,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.update"
							}
						},
						{
							"id": 258,
							"name": "contextApi",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 259,
									"name": "onTabInteraction",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 260,
											"name": "onTabInteraction",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 261,
													"name": "evt",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "tab-bar.tsx",
											"line": 48,
											"character": 20
										}
									]
								},
								{
									"id": 262,
									"name": "registerTab",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 263,
											"name": "registerTab",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 264,
													"name": "tab",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "ComponentClass",
																"typeArguments": [
																	{
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"name": "TabProps",
																				"id": 227
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 265,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 266,
																							"name": "contextApi",
																							"kind": 32,
																							"kindString": "Variable",
																							"flags": {
																								"isOptional": true
																							},
																							"sources": [
																								{
																									"fileName": "tab-bar-context.tsx",
																									"line": 17,
																									"character": 39
																								}
																							],
																							"type": {
																								"type": "reference",
																								"name": "TabBarContextT",
																								"id": 2
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Variables",
																							"kind": 32,
																							"children": [
																								266
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															},
															{
																"type": "reference",
																"name": "FunctionComponent",
																"typeArguments": [
																	{
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"name": "TabProps",
																				"id": 227
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 267,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 268,
																							"name": "contextApi",
																							"kind": 32,
																							"kindString": "Variable",
																							"flags": {
																								"isOptional": true
																							},
																							"sources": [
																								{
																									"fileName": "tab-bar-context.tsx",
																									"line": 17,
																									"character": 39
																								}
																							],
																							"type": {
																								"type": "reference",
																								"name": "TabBarContextT",
																								"id": 2
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Variables",
																							"kind": 32,
																							"children": [
																								268
																							]
																						}
																					]
																				}
																			}
																		]
																	}
																]
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "tab-bar.tsx",
											"line": 49,
											"character": 15
										}
									]
								},
								{
									"id": 269,
									"name": "unregisterTab",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 270,
											"name": "unregisterTab",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 271,
													"name": "tab",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "ComponentClass",
																"typeArguments": [
																	{
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"name": "TabProps",
																				"id": 227
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 272,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 273,
																							"name": "contextApi",
																							"kind": 32,
																							"kindString": "Variable",
																							"flags": {
																								"isOptional": true
																							},
																							"sources": [
																								{
																									"fileName": "tab-bar-context.tsx",
																									"line": 17,
																									"character": 39
																								}
																							],
																							"type": {
																								"type": "reference",
																								"name": "TabBarContextT",
																								"id": 2
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Variables",
																							"kind": 32,
																							"children": [
																								273
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															},
															{
																"type": "reference",
																"name": "FunctionComponent",
																"typeArguments": [
																	{
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"name": "TabProps",
																				"id": 227
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 274,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 275,
																							"name": "contextApi",
																							"kind": 32,
																							"kindString": "Variable",
																							"flags": {
																								"isOptional": true
																							},
																							"sources": [
																								{
																									"fileName": "tab-bar-context.tsx",
																									"line": 17,
																									"character": 39
																								}
																							],
																							"type": {
																								"type": "reference",
																								"name": "TabBarContextT",
																								"id": 2
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Variables",
																							"kind": 32,
																							"children": [
																								275
																							]
																						}
																					]
																				}
																			}
																		]
																	}
																]
															}
														]
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "tab-bar.tsx",
											"line": 50,
											"character": 17
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"kind": 64,
									"children": [
										259,
										262,
										269
									]
								}
							],
							"sources": [
								{
									"fileName": "tab-bar.tsx",
									"line": 47,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								276
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								304,
								300,
								299,
								255,
								257,
								256,
								254,
								298
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								344,
								350,
								359,
								334,
								279,
								305,
								342,
								346,
								308,
								354,
								310,
								323,
								281,
								338,
								287,
								292,
								289,
								295,
								329,
								283,
								316,
								314
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								258
							]
						}
					],
					"sources": [
						{
							"fileName": "tab-bar.tsx",
							"line": 41,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FoundationComponent",
							"typeArguments": [
								{
									"type": "reference",
									"name": "TabBarProps",
									"id": 245
								}
							]
						}
					]
				},
				{
					"id": 245,
					"name": "TabBarProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "TabBar"
					},
					"children": [
						{
							"id": 252,
							"name": "activeTabIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The index of the active tab."
							},
							"sources": [
								{
									"fileName": "tab-bar.tsx",
									"line": 25,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 246,
							"name": "onActivate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when the active tab changes. Receives event as an argument with event.target.value set to the activeTabIndex."
							},
							"sources": [
								{
									"fileName": "tab-bar.tsx",
									"line": 19,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 247,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 248,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 249,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "CustomEventT",
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 250,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 251,
																					"name": "index",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "tab-bar.tsx",
																							"line": 21,
																							"character": 11
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						251
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "tab-bar.tsx",
																					"line": 20,
																					"character": 22
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								252,
								246
							]
						}
					],
					"sources": [
						{
							"fileName": "tab-bar.tsx",
							"line": 17,
							"character": 28
						}
					]
				},
				{
					"id": 364,
					"name": "TabBarRoot",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "tab-bar.tsx",
							"line": 28,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "ForwardRefExoticComponent",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 365,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reference",
										"name": "RefAttributes",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						]
					},
					"defaultValue": " componentFactory<TabBarProps>({\n  displayName: 'TabBarRoot',\n  tag: 'nav',\n  classNames: (props: TabBarProps & { isTabScroller?: boolean }) => [\n    'mdc-tab-bar',\n    {\n      'mdc-tab-scroller__scroll-frame__tabs': props.isTabScroller\n    }\n  ],\n  consumeProps: ['isTabScroller']\n})"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						253
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						245
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						364
					]
				}
			],
			"sources": [
				{
					"fileName": "tab-bar.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"tab-bar-context\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/jamesmfriedman/Sites/rmwc/src/tabs/tab-bar-context.tsx",
			"children": [
				{
					"id": 2,
					"name": "TabBarContextT",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "tab-bar-context.tsx",
							"line": 3,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 4,
									"name": "onTabInteraction",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "tab-bar-context.tsx",
											"line": 4,
											"character": 18
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 6,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 7,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "tab-bar-context.tsx",
													"line": 4,
													"character": 19
												}
											]
										}
									}
								},
								{
									"id": 8,
									"name": "registerTab",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "tab-bar-context.tsx",
											"line": 5,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 10,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 11,
															"name": "tab",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "__type"
													}
												}
											],
											"sources": [
												{
													"fileName": "tab-bar-context.tsx",
													"line": 5,
													"character": 14
												}
											]
										}
									}
								},
								{
									"id": 12,
									"name": "unregisterTab",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "tab-bar-context.tsx",
											"line": 6,
											"character": 15
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 13,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 14,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 15,
															"name": "tab",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "__type"
													}
												}
											],
											"sources": [
												{
													"fileName": "tab-bar-context.tsx",
													"line": 6,
													"character": 16
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										4,
										8,
										12
									]
								}
							],
							"sources": [
								{
									"fileName": "tab-bar-context.tsx",
									"line": 3,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 16,
					"name": "TabBarContext",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "tab-bar-context.tsx",
							"line": 9,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "Context",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 17,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 18,
											"name": "onTabInteraction",
											"kind": 64,
											"kindString": "Function",
											"flags": {},
											"signatures": [
												{
													"id": 19,
													"name": "onTabInteraction",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 20,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "tab-bar-context.tsx",
													"line": 10,
													"character": 18
												}
											]
										},
										{
											"id": 21,
											"name": "registerTab",
											"kind": 64,
											"kindString": "Function",
											"flags": {},
											"signatures": [
												{
													"id": 22,
													"name": "registerTab",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 23,
															"name": "tab",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "tab-bar-context.tsx",
													"line": 11,
													"character": 13
												}
											]
										},
										{
											"id": 24,
											"name": "unregisterTab",
											"kind": 64,
											"kindString": "Function",
											"flags": {},
											"signatures": [
												{
													"id": 25,
													"name": "unregisterTab",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 26,
															"name": "tab",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "tab-bar-context.tsx",
													"line": 12,
													"character": 15
												}
											]
										}
									],
									"groups": [
										{
											"title": "Functions",
											"kind": 64,
											"children": [
												18,
												21,
												24
											]
										}
									]
								}
							}
						]
					},
					"defaultValue": " React.createContext({\n  onTabInteraction: (evt: any) => {},\n  registerTab: (tab: any) => {},\n  unregisterTab: (tab: any) => {}\n})"
				},
				{
					"id": 27,
					"name": "withTabBarContext",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 28,
							"name": "withTabBarContext",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "tab-bar-context.tsx",
							"line": 15,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						16
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						27
					]
				}
			],
			"sources": [
				{
					"fileName": "tab-bar-context.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 135,
			"name": "\"tab-indicator\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/jamesmfriedman/Sites/rmwc/src/tabs/tab-indicator.tsx",
			"children": [
				{
					"id": 136,
					"name": "TabIndicator",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 151,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 190,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 158,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 159,
									"name": "new TabIndicator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 160,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TabIndicator",
										"id": 136
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 202,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.__constructor"
							}
						},
						{
							"id": 157,
							"name": "canUpdate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 202,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true",
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.canUpdate"
							}
						},
						{
							"id": 139,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "tab-indicator.tsx",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "FoundationElement",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"name": "HTMLElement"
									}
								]
							},
							"defaultValue": " this.createElement('content')"
						},
						{
							"id": 153,
							"name": "elements",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 201,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 154,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 155,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 156,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "FoundationElement",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
											"line": 201,
											"character": 11
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.elements"
							}
						},
						{
							"id": 152,
							"name": "foundation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 200,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": " this.getDefaultFoundation()",
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.foundation"
							}
						},
						{
							"id": 138,
							"name": "root",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "tab-indicator.tsx",
									"line": 14,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "FoundationElement",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"name": "HTMLElement"
									}
								]
							},
							"defaultValue": " this.createElement('root')"
						},
						{
							"id": 137,
							"name": "shouldDebounce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "tab-indicator.tsx",
									"line": 12,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"overwrites": {
								"type": "reference",
								"name": "FoundationComponent.shouldDebounce"
							}
						},
						{
							"id": 206,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 207,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 610,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 212,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 213,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 214,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "__type"
															}
														]
													}
												]
											}
										},
										{
											"id": 215,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 642,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 221,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 222,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 223,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "__type"
															}
														]
													}
												]
											}
										},
										{
											"id": 224,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 225,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 670,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 142,
							"name": "activate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 143,
									"name": "activate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 144,
											"name": "previousIndicatorClientRect",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ClientRect"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-indicator.tsx",
									"line": 40,
									"character": 10
								}
							]
						},
						{
							"id": 196,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 197,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 198,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 199,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 539,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 161,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 162,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 214,
									"character": 19
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentDidMount"
							}
						},
						{
							"id": 163,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 164,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 165,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "FoundationPropsT",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 219,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentDidUpdate"
							}
						},
						{
							"id": 204,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 205,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 596,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 208,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 209,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 210,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "__type"
															}
														]
													}
												]
											}
										},
										{
											"id": 211,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 625,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 166,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 167,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 223,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentWillUnmount"
							}
						},
						{
							"id": 216,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 217,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 218,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "__type"
															}
														]
													}
												]
											}
										},
										{
											"id": 219,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 220,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 655,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 147,
							"name": "computeContentClientRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 148,
									"name": "computeContentClientRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-indicator.tsx",
									"line": 77,
									"character": 26
								}
							]
						},
						{
							"id": 168,
							"name": "createElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 169,
									"name": "createElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 170,
											"name": "ElementType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 171,
											"name": "elementName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FoundationElement",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "unknown",
												"name": "ElementType"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.createElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 229,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.createElement"
							}
						},
						{
							"id": 145,
							"name": "deactivate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 146,
									"name": "deactivate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-indicator.tsx",
									"line": 73,
									"character": 12
								}
							]
						},
						{
							"id": 185,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 186,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fires a cross-browser-compatible custom event from the component root of the given type,"
									},
									"parameters": [
										{
											"id": 187,
											"name": "evtType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188,
											"name": "evtData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										},
										{
											"id": 189,
											"name": "shouldBubble",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"name": "CustomEvent",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.emit"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 256,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.emit"
							}
						},
						{
							"id": 140,
							"name": "getDefaultFoundation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 141,
									"name": "getDefaultFoundation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "FoundationComponent.getDefaultFoundation"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-indicator.tsx",
									"line": 17,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FoundationComponent.getDefaultFoundation"
							}
						},
						{
							"id": 200,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 201,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 202,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "__type"
															}
														]
													}
												]
											}
										},
										{
											"id": 203,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 575,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 149,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 150,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-indicator.tsx",
									"line": 81,
									"character": 8
								}
							]
						},
						{
							"id": 191,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 192,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 193,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "__type"
															}
														]
													}
												]
											}
										},
										{
											"id": 194,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 195,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 529,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 174,
							"name": "sync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 175,
									"name": "sync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 176,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 177,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.sync"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 240,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.sync"
							}
						},
						{
							"id": 178,
							"name": "syncProp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 179,
									"name": "syncProp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 180,
											"name": "prop",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 181,
											"name": "prevProp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 182,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 183,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 184,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
															"line": 242,
															"character": 46
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.syncProp"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 242,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.syncProp"
							}
						},
						{
							"id": 172,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 173,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.update"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 236,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.update"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								158
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								157,
								139,
								153,
								152,
								138,
								137
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								206,
								212,
								221,
								142,
								196,
								161,
								163,
								204,
								208,
								166,
								216,
								147,
								168,
								145,
								185,
								140,
								200,
								149,
								191,
								174,
								178,
								172
							]
						}
					],
					"sources": [
						{
							"fileName": "tab-indicator.tsx",
							"line": 11,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FoundationComponent",
							"typeArguments": [
								{
									"type": "reference",
									"name": "__type"
								}
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						136
					]
				}
			],
			"sources": [
				{
					"fileName": "tab-indicator.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 29,
			"name": "\"tab-scroller\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/jamesmfriedman/Sites/rmwc/src/tabs/tab-scroller.tsx",
			"children": [
				{
					"id": 30,
					"name": "TabScroller",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 56,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 93,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 34,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 35,
									"name": "new TabScroller",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 36,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "__type"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TabScroller",
										"id": 30
									},
									"overwrites": {
										"type": "reference",
										"name": "FoundationComponent.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-scroller.tsx",
									"line": 29,
									"character": 42
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FoundationComponent.__constructor"
							}
						},
						{
							"id": 32,
							"name": "area",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "tab-scroller.tsx",
									"line": 28,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "FoundationElement",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"name": "HTMLElement"
									}
								]
							},
							"defaultValue": " this.createElement('area')"
						},
						{
							"id": 63,
							"name": "canUpdate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 202,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true",
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.canUpdate"
							}
						},
						{
							"id": 33,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "tab-scroller.tsx",
									"line": 29,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "FoundationElement",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"name": "HTMLElement"
									}
								]
							},
							"defaultValue": " this.createElement('content')"
						},
						{
							"id": 59,
							"name": "elements",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 201,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 61,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 62,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "FoundationElement",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
											"line": 201,
											"character": 11
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.elements"
							}
						},
						{
							"id": 58,
							"name": "foundation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 200,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": " this.getDefaultFoundation()",
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.foundation"
							}
						},
						{
							"id": 31,
							"name": "root",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "tab-scroller.tsx",
									"line": 27,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "FoundationElement",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"name": "HTMLElement"
									}
								]
							},
							"defaultValue": " this.createElement('root')"
						},
						{
							"id": 57,
							"name": "shouldDebounce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 198,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.shouldDebounce"
							}
						},
						{
							"id": 109,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 110,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 610,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 115,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 116,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 117,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "__type"
															}
														]
													}
												]
											}
										},
										{
											"id": 118,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 642,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 124,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 125,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 126,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "__type"
															}
														]
													}
												]
											}
										},
										{
											"id": 127,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 128,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 670,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 99,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 100,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 101,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 102,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 539,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 64,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 65,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 214,
									"character": 19
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentDidMount"
							}
						},
						{
							"id": 66,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 67,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 68,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "FoundationPropsT",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 219,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentDidUpdate"
							}
						},
						{
							"id": 107,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 108,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 596,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 111,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 112,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 113,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "__type"
															}
														]
													}
												]
											}
										},
										{
											"id": 114,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 625,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 69,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 70,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 223,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentWillUnmount"
							}
						},
						{
							"id": 119,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 120,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 121,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "__type"
															}
														]
													}
												]
											}
										},
										{
											"id": 122,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 123,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 655,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 71,
							"name": "createElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 72,
									"name": "createElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 73,
											"name": "ElementType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 74,
											"name": "elementName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FoundationElement",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "unknown",
												"name": "ElementType"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.createElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 229,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.createElement"
							}
						},
						{
							"id": 88,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 89,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fires a cross-browser-compatible custom event from the component root of the given type,"
									},
									"parameters": [
										{
											"id": 90,
											"name": "evtType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 91,
											"name": "evtData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										},
										{
											"id": 92,
											"name": "shouldBubble",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"name": "CustomEvent",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.emit"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 256,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.emit"
							}
						},
						{
							"id": 37,
							"name": "getDefaultFoundation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 38,
									"name": "getDefaultFoundation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "FoundationComponent.getDefaultFoundation"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-scroller.tsx",
									"line": 38,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FoundationComponent.getDefaultFoundation"
							}
						},
						{
							"id": 41,
							"name": "getScrollContentWidth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 42,
									"name": "getScrollContentWidth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "null"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-scroller.tsx",
									"line": 83,
									"character": 23
								}
							]
						},
						{
							"id": 39,
							"name": "getScrollPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 40,
									"name": "getScrollPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-scroller.tsx",
									"line": 79,
									"character": 19
								}
							]
						},
						{
							"id": 103,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 104,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 105,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "__type"
															}
														]
													}
												]
											}
										},
										{
											"id": 106,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 575,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 49,
							"name": "handleInteraction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 50,
									"name": "handleInteraction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-scroller.tsx",
									"line": 95,
									"character": 19
								}
							]
						},
						{
							"id": 51,
							"name": "handleTransitionEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 52,
									"name": "handleTransitionEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 53,
											"name": "evt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TransitionEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-scroller.tsx",
									"line": 99,
									"character": 21
								}
							]
						},
						{
							"id": 43,
							"name": "incrementScroll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 44,
									"name": "incrementScroll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 45,
											"name": "scrollXIncrement",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-scroller.tsx",
									"line": 87,
									"character": 17
								}
							]
						},
						{
							"id": 54,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 55,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-scroller.tsx",
									"line": 103,
									"character": 8
								}
							]
						},
						{
							"id": 46,
							"name": "scrollTo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 47,
									"name": "scrollTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 48,
											"name": "scrollX",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "tab-scroller.tsx",
									"line": 91,
									"character": 10
								}
							]
						},
						{
							"id": 94,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 95,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 96,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "__type"
															}
														]
													}
												]
											}
										},
										{
											"id": 97,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 98,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 529,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 77,
							"name": "sync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 78,
									"name": "sync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 79,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 80,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.sync"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 240,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.sync"
							}
						},
						{
							"id": 81,
							"name": "syncProp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 82,
									"name": "syncProp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 83,
											"name": "prop",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 84,
											"name": "prevProp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 85,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 86,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 87,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
															"line": 242,
															"character": 46
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.syncProp"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 242,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.syncProp"
							}
						},
						{
							"id": 75,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 76,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.update"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 236,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.update"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								34
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								32,
								63,
								33,
								59,
								58,
								31,
								57
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								109,
								115,
								124,
								99,
								64,
								66,
								107,
								111,
								69,
								119,
								71,
								88,
								37,
								41,
								39,
								103,
								49,
								51,
								43,
								54,
								46,
								94,
								77,
								81,
								75
							]
						}
					],
					"sources": [
						{
							"fileName": "tab-scroller.tsx",
							"line": 26,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FoundationComponent",
							"typeArguments": [
								{
									"type": "reference",
									"name": "__type"
								}
							]
						}
					]
				},
				{
					"id": 129,
					"name": "TabScrollerRoot",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "tab-scroller.tsx",
							"line": 11,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "ForwardRefExoticComponent",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 130,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reference",
										"name": "RefAttributes",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						]
					},
					"defaultValue": " componentFactory({\n  displayName: 'TabScroller',\n  classNames: ['mdc-tab-scroller']\n})"
				},
				{
					"id": 131,
					"name": "TabScrollerScrollArea",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "tab-scroller.tsx",
							"line": 16,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"name": "ForwardRefExoticComponent",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 132,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reference",
										"name": "RefAttributes",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						]
					},
					"defaultValue": " componentFactory({\n  displayName: 'TabScrollerScrollArea',\n  classNames: ['mdc-tab-scroller__scroll-area']\n})"
				},
				{
					"id": 133,
					"name": "TabScrollerScrollContent",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "tab-scroller.tsx",
							"line": 21,
							"character": 37
						}
					],
					"type": {
						"type": "reference",
						"name": "ForwardRefExoticComponent",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 134,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reference",
										"name": "RefAttributes",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						]
					},
					"defaultValue": " componentFactory({\n  displayName: 'TabScrollerScrollContent',\n  classNames: ['mdc-tab-scroller__scroll-content']\n})"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						30
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						129,
						131,
						133
					]
				}
			],
			"sources": [
				{
					"fileName": "tab-scroller.tsx",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				366,
				226,
				244,
				1,
				135,
				29
			]
		}
	]
}