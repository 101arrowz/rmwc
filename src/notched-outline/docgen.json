[
  {
    "description": "",
    "displayName": "NotchedOutlineIdle",
    "methods": []
  },
  {
    "description": "",
    "displayName": "NotchedOutline",
    "methods": [
      {
        "name": "getDefaultFoundation",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "notch",
        "docblock": "Updates outline selectors and SVG path to open notch.\n@param {number} notchWidth The notch width in the outline.\n@param {boolean=} isRtl Determines if outline is rtl. If rtl is true, notch\nwill be right justified in outline path, otherwise left justified.",
        "modifiers": [],
        "params": [
          {
            "name": "notchWidth",
            "description": "The notch width in the outline.",
            "type": {
              "name": "number"
            }
          },
          {
            "name": "isRtl",
            "description": "Determines if outline is rtl. If rtl is true, notch\nwill be right justified in outline path, otherwise left justified.",
            "type": {
              "name": "boolean"
            },
            "optional": true
          }
        ],
        "returns": null,
        "description": "Updates outline selectors and SVG path to open notch."
      },
      {
        "name": "closeNotch",
        "docblock": "Updates the outline selectors to close notch and return it to idle state.",
        "modifiers": [],
        "params": [],
        "returns": null,
        "description": "Updates the outline selectors to close notch and return it to idle state."
      }
    ]
  }
]