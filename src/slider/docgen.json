[
  {
    "description": "",
    "displayName": "SliderRoot",
    "methods": [
      {
        "name": "classNames",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "props",
            "type": {
              "name": "intersection",
              "raw": "{\n  /** A callback that fires when the Slider stops sliding which takes an event with event.detail.value set to the Slider's value. */\n  onChange?: (\n    evt: CustomEventT<{\n      value: number\n    }>\n  ) => mixed,\n  /** A callback that fires continuously while the Slider is sliding that takes an event with event.detail.value set to the Slider's value. */\n  onInput?: (\n    evt: CustomEventT<{\n      value: number\n    }>\n  ) => mixed,\n  /** The value of the Slider. */\n  value?: number | string,\n  /** The minimum value of the Slider. */\n  min?: number | string,\n  /** The maximum value of the Slider. */\n  max?: number | string,\n  /** A step to quantize values by. */\n  step?: number | string,\n  /** Displays the exact value of the Slider on the knob. */\n  discrete?: boolean,\n  /** Displays the individual step markers on the Slider track. */\n  displayMarkers?: boolean,\n  /** Disables the control. */\n  disabled?: boolean\n} & SimpleTagPropsT",
              "elements": [
                {
                  "name": "signature",
                  "type": "object",
                  "raw": "{\n  /** A callback that fires when the Slider stops sliding which takes an event with event.detail.value set to the Slider's value. */\n  onChange?: (\n    evt: CustomEventT<{\n      value: number\n    }>\n  ) => mixed,\n  /** A callback that fires continuously while the Slider is sliding that takes an event with event.detail.value set to the Slider's value. */\n  onInput?: (\n    evt: CustomEventT<{\n      value: number\n    }>\n  ) => mixed,\n  /** The value of the Slider. */\n  value?: number | string,\n  /** The minimum value of the Slider. */\n  min?: number | string,\n  /** The maximum value of the Slider. */\n  max?: number | string,\n  /** A step to quantize values by. */\n  step?: number | string,\n  /** Displays the exact value of the Slider on the knob. */\n  discrete?: boolean,\n  /** Displays the individual step markers on the Slider track. */\n  displayMarkers?: boolean,\n  /** Disables the control. */\n  disabled?: boolean\n}",
                  "signature": {
                    "properties": [
                      {
                        "key": "onChange",
                        "value": {
                          "name": "signature",
                          "type": "function",
                          "raw": "(\n  evt: CustomEventT<{\n    value: number\n  }>\n) => mixed",
                          "signature": {
                            "arguments": [
                              {
                                "name": "evt",
                                "type": {
                                  "name": "CustomEventT",
                                  "elements": [
                                    {
                                      "name": "signature",
                                      "type": "object",
                                      "raw": "{\n  value: number\n}",
                                      "signature": {
                                        "properties": [
                                          {
                                            "key": "value",
                                            "value": {
                                              "name": "number",
                                              "required": true
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "raw": "CustomEventT<{\n  value: number\n}>"
                                }
                              }
                            ],
                            "return": {
                              "name": "mixed"
                            }
                          },
                          "required": false
                        }
                      },
                      {
                        "key": "onInput",
                        "value": {
                          "name": "signature",
                          "type": "function",
                          "raw": "(\n  evt: CustomEventT<{\n    value: number\n  }>\n) => mixed",
                          "signature": {
                            "arguments": [
                              {
                                "name": "evt",
                                "type": {
                                  "name": "CustomEventT",
                                  "elements": [
                                    {
                                      "name": "signature",
                                      "type": "object",
                                      "raw": "{\n  value: number\n}",
                                      "signature": {
                                        "properties": [
                                          {
                                            "key": "value",
                                            "value": {
                                              "name": "number",
                                              "required": true
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "raw": "CustomEventT<{\n  value: number\n}>"
                                }
                              }
                            ],
                            "return": {
                              "name": "mixed"
                            }
                          },
                          "required": false
                        }
                      },
                      {
                        "key": "value",
                        "value": {
                          "name": "union",
                          "raw": "number | string",
                          "elements": [
                            {
                              "name": "number"
                            },
                            {
                              "name": "string"
                            }
                          ],
                          "required": false
                        }
                      },
                      {
                        "key": "min",
                        "value": {
                          "name": "union",
                          "raw": "number | string",
                          "elements": [
                            {
                              "name": "number"
                            },
                            {
                              "name": "string"
                            }
                          ],
                          "required": false
                        }
                      },
                      {
                        "key": "max",
                        "value": {
                          "name": "union",
                          "raw": "number | string",
                          "elements": [
                            {
                              "name": "number"
                            },
                            {
                              "name": "string"
                            }
                          ],
                          "required": false
                        }
                      },
                      {
                        "key": "step",
                        "value": {
                          "name": "union",
                          "raw": "number | string",
                          "elements": [
                            {
                              "name": "number"
                            },
                            {
                              "name": "string"
                            }
                          ],
                          "required": false
                        }
                      },
                      {
                        "key": "discrete",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      },
                      {
                        "key": "displayMarkers",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      },
                      {
                        "key": "disabled",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "SimpleTagPropsT"
                }
              ],
              "alias": "SliderPropsT"
            }
          }
        ],
        "returns": null
      }
    ]
  },
  {
    "description": "",
    "displayName": "SliderTrackContainer",
    "methods": []
  },
  {
    "description": "",
    "displayName": "SliderTrack",
    "methods": []
  },
  {
    "description": "",
    "displayName": "SliderTrackMarkerContainer",
    "methods": []
  },
  {
    "description": "",
    "displayName": "SliderThumbContainer",
    "methods": []
  },
  {
    "description": "",
    "displayName": "SliderPin",
    "methods": []
  },
  {
    "description": "",
    "displayName": "SliderPinValueMarker",
    "methods": []
  },
  {
    "description": "",
    "displayName": "SliderThumb",
    "methods": []
  },
  {
    "description": "",
    "displayName": "SliderFocusRing",
    "methods": []
  },
  {
    "description": "",
    "displayName": "Slider",
    "methods": [
      {
        "name": "discrete",
        "docblock": null,
        "modifiers": [
          "get"
        ],
        "params": [],
        "returns": {
          "type": {
            "name": "boolean"
          }
        }
      },
      {
        "name": "discrete",
        "docblock": null,
        "modifiers": [
          "set"
        ],
        "params": [
          {
            "name": "isDiscrete",
            "optional": false,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "returns": null
      },
      {
        "name": "displayMarkers",
        "docblock": null,
        "modifiers": [
          "get"
        ],
        "params": [],
        "returns": {
          "type": {
            "name": "boolean"
          }
        }
      },
      {
        "name": "displayMarkers",
        "docblock": null,
        "modifiers": [
          "set"
        ],
        "params": [
          {
            "name": "isDisplayMarkers",
            "optional": false,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "returns": null
      },
      {
        "name": "syncWithProps",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "nextProps",
            "optional": false,
            "type": {
              "name": "intersection",
              "raw": "{\n  /** A callback that fires when the Slider stops sliding which takes an event with event.detail.value set to the Slider's value. */\n  onChange?: (\n    evt: CustomEventT<{\n      value: number\n    }>\n  ) => mixed,\n  /** A callback that fires continuously while the Slider is sliding that takes an event with event.detail.value set to the Slider's value. */\n  onInput?: (\n    evt: CustomEventT<{\n      value: number\n    }>\n  ) => mixed,\n  /** The value of the Slider. */\n  value?: number | string,\n  /** The minimum value of the Slider. */\n  min?: number | string,\n  /** The maximum value of the Slider. */\n  max?: number | string,\n  /** A step to quantize values by. */\n  step?: number | string,\n  /** Displays the exact value of the Slider on the knob. */\n  discrete?: boolean,\n  /** Displays the individual step markers on the Slider track. */\n  displayMarkers?: boolean,\n  /** Disables the control. */\n  disabled?: boolean\n} & SimpleTagPropsT",
              "elements": [
                {
                  "name": "signature",
                  "type": "object",
                  "raw": "{\n  /** A callback that fires when the Slider stops sliding which takes an event with event.detail.value set to the Slider's value. */\n  onChange?: (\n    evt: CustomEventT<{\n      value: number\n    }>\n  ) => mixed,\n  /** A callback that fires continuously while the Slider is sliding that takes an event with event.detail.value set to the Slider's value. */\n  onInput?: (\n    evt: CustomEventT<{\n      value: number\n    }>\n  ) => mixed,\n  /** The value of the Slider. */\n  value?: number | string,\n  /** The minimum value of the Slider. */\n  min?: number | string,\n  /** The maximum value of the Slider. */\n  max?: number | string,\n  /** A step to quantize values by. */\n  step?: number | string,\n  /** Displays the exact value of the Slider on the knob. */\n  discrete?: boolean,\n  /** Displays the individual step markers on the Slider track. */\n  displayMarkers?: boolean,\n  /** Disables the control. */\n  disabled?: boolean\n}",
                  "signature": {
                    "properties": [
                      {
                        "key": "onChange",
                        "value": {
                          "name": "signature",
                          "type": "function",
                          "raw": "(\n  evt: CustomEventT<{\n    value: number\n  }>\n) => mixed",
                          "signature": {
                            "arguments": [
                              {
                                "name": "evt",
                                "type": {
                                  "name": "CustomEventT",
                                  "elements": [
                                    {
                                      "name": "signature",
                                      "type": "object",
                                      "raw": "{\n  value: number\n}",
                                      "signature": {
                                        "properties": [
                                          {
                                            "key": "value",
                                            "value": {
                                              "name": "number",
                                              "required": true
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "raw": "CustomEventT<{\n  value: number\n}>"
                                }
                              }
                            ],
                            "return": {
                              "name": "mixed"
                            }
                          },
                          "required": false
                        }
                      },
                      {
                        "key": "onInput",
                        "value": {
                          "name": "signature",
                          "type": "function",
                          "raw": "(\n  evt: CustomEventT<{\n    value: number\n  }>\n) => mixed",
                          "signature": {
                            "arguments": [
                              {
                                "name": "evt",
                                "type": {
                                  "name": "CustomEventT",
                                  "elements": [
                                    {
                                      "name": "signature",
                                      "type": "object",
                                      "raw": "{\n  value: number\n}",
                                      "signature": {
                                        "properties": [
                                          {
                                            "key": "value",
                                            "value": {
                                              "name": "number",
                                              "required": true
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "raw": "CustomEventT<{\n  value: number\n}>"
                                }
                              }
                            ],
                            "return": {
                              "name": "mixed"
                            }
                          },
                          "required": false
                        }
                      },
                      {
                        "key": "value",
                        "value": {
                          "name": "union",
                          "raw": "number | string",
                          "elements": [
                            {
                              "name": "number"
                            },
                            {
                              "name": "string"
                            }
                          ],
                          "required": false
                        }
                      },
                      {
                        "key": "min",
                        "value": {
                          "name": "union",
                          "raw": "number | string",
                          "elements": [
                            {
                              "name": "number"
                            },
                            {
                              "name": "string"
                            }
                          ],
                          "required": false
                        }
                      },
                      {
                        "key": "max",
                        "value": {
                          "name": "union",
                          "raw": "number | string",
                          "elements": [
                            {
                              "name": "number"
                            },
                            {
                              "name": "string"
                            }
                          ],
                          "required": false
                        }
                      },
                      {
                        "key": "step",
                        "value": {
                          "name": "union",
                          "raw": "number | string",
                          "elements": [
                            {
                              "name": "number"
                            },
                            {
                              "name": "string"
                            }
                          ],
                          "required": false
                        }
                      },
                      {
                        "key": "discrete",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      },
                      {
                        "key": "displayMarkers",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      },
                      {
                        "key": "disabled",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "SimpleTagPropsT"
                }
              ],
              "alias": "SliderPropsT"
            }
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "onChange": {
        "required": false,
        "flowType": {
          "name": "signature",
          "type": "function",
          "raw": "(\n  evt: CustomEventT<{\n    value: number\n  }>\n) => mixed",
          "signature": {
            "arguments": [
              {
                "name": "evt",
                "type": {
                  "name": "CustomEventT",
                  "elements": [
                    {
                      "name": "signature",
                      "type": "object",
                      "raw": "{\n  value: number\n}",
                      "signature": {
                        "properties": [
                          {
                            "key": "value",
                            "value": {
                              "name": "number",
                              "required": true
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "raw": "CustomEventT<{\n  value: number\n}>"
                }
              }
            ],
            "return": {
              "name": "mixed"
            }
          }
        },
        "description": "A callback that fires when the Slider stops sliding which takes an event with event.detail.value set to the Slider's value."
      },
      "onInput": {
        "required": false,
        "flowType": {
          "name": "signature",
          "type": "function",
          "raw": "(\n  evt: CustomEventT<{\n    value: number\n  }>\n) => mixed",
          "signature": {
            "arguments": [
              {
                "name": "evt",
                "type": {
                  "name": "CustomEventT",
                  "elements": [
                    {
                      "name": "signature",
                      "type": "object",
                      "raw": "{\n  value: number\n}",
                      "signature": {
                        "properties": [
                          {
                            "key": "value",
                            "value": {
                              "name": "number",
                              "required": true
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "raw": "CustomEventT<{\n  value: number\n}>"
                }
              }
            ],
            "return": {
              "name": "mixed"
            }
          }
        },
        "description": "A callback that fires continuously while the Slider is sliding that takes an event with event.detail.value set to the Slider's value."
      },
      "value": {
        "required": false,
        "flowType": {
          "name": "union",
          "raw": "number | string",
          "elements": [
            {
              "name": "number"
            },
            {
              "name": "string"
            }
          ]
        },
        "description": "The value of the Slider."
      },
      "min": {
        "required": false,
        "flowType": {
          "name": "union",
          "raw": "number | string",
          "elements": [
            {
              "name": "number"
            },
            {
              "name": "string"
            }
          ]
        },
        "description": "The minimum value of the Slider."
      },
      "max": {
        "required": false,
        "flowType": {
          "name": "union",
          "raw": "number | string",
          "elements": [
            {
              "name": "number"
            },
            {
              "name": "string"
            }
          ]
        },
        "description": "The maximum value of the Slider."
      },
      "step": {
        "required": false,
        "flowType": {
          "name": "union",
          "raw": "number | string",
          "elements": [
            {
              "name": "number"
            },
            {
              "name": "string"
            }
          ]
        },
        "description": "A step to quantize values by."
      },
      "discrete": {
        "required": false,
        "flowType": {
          "name": "boolean"
        },
        "description": "Displays the exact value of the Slider on the knob."
      },
      "displayMarkers": {
        "required": false,
        "flowType": {
          "name": "boolean"
        },
        "description": "Displays the individual step markers on the Slider track."
      },
      "disabled": {
        "required": false,
        "flowType": {
          "name": "boolean"
        },
        "description": "Disables the control."
      }
    }
  }
]