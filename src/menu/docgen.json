{
	"id": 0,
	"name": "@rmwc/menu",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 375,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/jamesmfriedman/Sites/rmwc/src/menu/index.tsx",
			"sources": [
				{
					"fileName": "index.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 196,
			"name": "\"menu\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/jamesmfriedman/Sites/rmwc/src/menu/menu.tsx",
			"children": [
				{
					"id": 225,
					"name": "Menu",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A menu component for displaying lists items."
					},
					"typeParameter": [
						{
							"id": 255,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 291,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 229,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 230,
									"name": "new Menu",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 231,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MenuProps",
												"id": 197
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Menu",
										"id": 225
									},
									"overwrites": {
										"type": "reference",
										"name": "FoundationComponent.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 74,
									"character": 41
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FoundationComponent.__constructor"
							}
						},
						{
							"id": 258,
							"name": "elements",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 204,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 260,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 261,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "FoundationElement",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
											"line": 204,
											"character": 11
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.elements"
							}
						},
						{
							"id": 257,
							"name": "foundation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 203,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": " this.getDefaultFoundation()",
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.foundation"
							}
						},
						{
							"id": 227,
							"name": "list",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 73,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "List"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"defaultValue": " null"
						},
						{
							"id": 228,
							"name": "menuSurface",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 74,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "MenuSurface",
										"id": 15
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"defaultValue": " null"
						},
						{
							"id": 226,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 71,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Menu\""
						},
						{
							"id": 256,
							"name": "shouldDebounce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 201,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.shouldDebounce"
							}
						},
						{
							"id": 232,
							"name": "items",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 233,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "HTMLLIElement"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 83,
									"character": 11
								}
							]
						},
						{
							"id": 307,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 308,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 610,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 313,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 314,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 315,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "MenuProps",
																"id": 197
															}
														]
													}
												]
											}
										},
										{
											"id": 316,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 642,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 322,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 323,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 324,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "MenuProps",
																"id": 197
															}
														]
													}
												]
											}
										},
										{
											"id": 325,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 326,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 670,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 297,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 298,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 299,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 300,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 539,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 262,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 263,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 216,
									"character": 19
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentDidMount"
							}
						},
						{
							"id": 264,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 265,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 266,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "FoundationPropsT",
												"typeArguments": [
													{
														"type": "reference",
														"name": "MenuProps",
														"id": 197
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 221,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentDidUpdate"
							}
						},
						{
							"id": 305,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 306,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 596,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 309,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 310,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 311,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "MenuProps",
																"id": 197
															}
														]
													}
												]
											}
										},
										{
											"id": 312,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 625,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 267,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 268,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 225,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentWillUnmount"
							}
						},
						{
							"id": 317,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 318,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 319,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "MenuProps",
																"id": 197
															}
														]
													}
												]
											}
										},
										{
											"id": 320,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 321,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 655,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 269,
							"name": "createElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 270,
									"name": "createElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 271,
											"name": "ElementType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 272,
											"name": "elementName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FoundationElement",
										"typeArguments": [
											{
												"type": "unknown",
												"name": "ExtractProps<ElementType>"
											},
											{
												"type": "unknown",
												"name": "ElementType"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.createElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 231,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.createElement"
							}
						},
						{
							"id": 286,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 287,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fires a cross-browser-compatible custom event from the component root of the given type,"
									},
									"parameters": [
										{
											"id": 288,
											"name": "evtType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 289,
											"name": "evtData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										},
										{
											"id": 290,
											"name": "shouldBubble",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"name": "CustomEvent",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.emit"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 260,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.emit"
							}
						},
						{
							"id": 242,
							"name": "getDefaultFoundation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 243,
									"name": "getDefaultFoundation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "FoundationComponent.getDefaultFoundation"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 99,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FoundationComponent.getDefaultFoundation"
							}
						},
						{
							"id": 301,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 302,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 303,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "MenuProps",
																"id": 197
															}
														]
													}
												]
											}
										},
										{
											"id": 304,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 575,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 244,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 245,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 246,
											"name": "evt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 142,
									"character": 13
								}
							]
						},
						{
							"id": 247,
							"name": "handleKeydown",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 248,
									"name": "handleKeydown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 249,
											"name": "evt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "KeyboardEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 147,
									"character": 15
								}
							]
						},
						{
							"id": 250,
							"name": "handleOpen",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 251,
									"name": "handleOpen",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 252,
											"name": "evt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CustomEventT",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 152,
									"character": 12
								}
							]
						},
						{
							"id": 234,
							"name": "hoistMenuToBody",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 235,
									"name": "hoistMenuToBody",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 87,
									"character": 17
								}
							]
						},
						{
							"id": 253,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 254,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 160,
									"character": 8
								}
							]
						},
						{
							"id": 236,
							"name": "setAnchorCorner",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 237,
									"name": "setAnchorCorner",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 238,
											"name": "corner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 91,
									"character": 17
								}
							]
						},
						{
							"id": 239,
							"name": "setAnchorElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 240,
									"name": "setAnchorElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 241,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 95,
									"character": 18
								}
							]
						},
						{
							"id": 292,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 293,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 294,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "MenuProps",
																"id": 197
															}
														]
													}
												]
											}
										},
										{
											"id": 295,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 296,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 529,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 275,
							"name": "sync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 276,
									"name": "sync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 277,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 278,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.sync"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 244,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.sync"
							}
						},
						{
							"id": 279,
							"name": "syncProp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 280,
									"name": "syncProp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 281,
											"name": "prop",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 282,
											"name": "prevProp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 283,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 284,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 285,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
															"line": 246,
															"character": 46
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.syncProp"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 246,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.syncProp"
							}
						},
						{
							"id": 273,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 274,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.update"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 240,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.update"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								229
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258,
								257,
								227,
								228,
								226,
								256
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								232
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								307,
								313,
								322,
								297,
								262,
								264,
								305,
								309,
								267,
								317,
								269,
								286,
								242,
								301,
								244,
								247,
								250,
								234,
								253,
								236,
								239,
								292,
								275,
								279,
								273
							]
						}
					],
					"sources": [
						{
							"fileName": "menu.tsx",
							"line": 70,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FoundationComponent",
							"typeArguments": [
								{
									"type": "reference",
									"name": "MenuProps",
									"id": 197
								}
							]
						}
					]
				},
				{
					"id": 217,
					"name": "MenuItemProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 222,
							"name": "accent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "DEPRECATED: pass an options object to the ripple prop `ripple={{accent: true}}`"
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/types/index.tsx",
									"line": 52,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedRippleProps.accent"
							}
						},
						{
							"id": 219,
							"name": "activated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A modifier for an active state."
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/list/list-item.tsx",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ListItemProps.activated"
							}
						},
						{
							"id": 220,
							"name": "disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A modifier for a disabled state."
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/list/list-item.tsx",
									"line": 14,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ListItemProps.disabled"
							}
						},
						{
							"id": 221,
							"name": "ripple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Adds a ripple effect to the component"
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/types/index.tsx",
									"line": 61,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "RipplePropT"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "WithRippleProps.ripple"
							}
						},
						{
							"id": 218,
							"name": "selected",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A modifier for a selected state."
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/list/list-item.tsx",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ListItemProps.selected"
							}
						},
						{
							"id": 223,
							"name": "surface",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "DEPRECATED: pass an options object to the ripple prop `ripple={{surface: true}}`"
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/types/index.tsx",
									"line": 54,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedRippleProps.surface"
							}
						},
						{
							"id": 224,
							"name": "unbounded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "DEPRECATED: pass an options object to the ripple prop `ripple={{unbounded: true}}`"
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/types/index.tsx",
									"line": 56,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedRippleProps.unbounded"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								222,
								219,
								220,
								221,
								218,
								223,
								224
							]
						}
					],
					"sources": [
						{
							"fileName": "menu.tsx",
							"line": 57,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ListItemProps"
						}
					]
				},
				{
					"id": 197,
					"name": "MenuProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Menu"
					},
					"children": [
						{
							"id": 207,
							"name": "anchorCorner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Manually position the menu to one of the corners."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "AnchorT",
								"id": 193
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.anchorCorner",
								"id": 5
							}
						},
						{
							"id": 216,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Children to render."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 46,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.children",
								"id": 14
							}
						},
						{
							"id": 206,
							"name": "fixed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Make the menu position fixed."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 38,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.fixed",
								"id": 4
							}
						},
						{
							"id": 212,
							"name": "onClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback for when the menu is closed."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 44,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 213,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 214,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 215,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "CustomEventT",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "__type"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.onClose",
								"id": 10
							}
						},
						{
							"id": 208,
							"name": "onOpen",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback for when the menu is opened."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 42,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 209,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 210,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 211,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "CustomEventT",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "__type"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.onOpen",
								"id": 6
							}
						},
						{
							"id": 198,
							"name": "onSelect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback that fires when a Menu item is selected."
							},
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 25,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 199,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 200,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 201,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "CustomEventT",
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 202,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 203,
																					"name": "index",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "menu.tsx",
																							"line": 27,
																							"character": 11
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				},
																				{
																					"id": 204,
																					"name": "item",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "menu.tsx",
																							"line": 28,
																							"character": 10
																						}
																					],
																					"type": {
																						"type": "reference",
																						"name": "HTMLElement"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						203,
																						204
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "menu.tsx",
																					"line": 26,
																					"character": 22
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 205,
							"name": "open",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Opens the menu."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 36,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.open",
								"id": 3
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								207,
								216,
								206,
								212,
								208,
								198,
								205
							]
						}
					],
					"sources": [
						{
							"fileName": "menu.tsx",
							"line": 23,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "MenuSurfaceProps",
							"id": 2
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "SimpleMenuProps",
							"id": 327
						}
					]
				},
				{
					"id": 327,
					"name": "SimpleMenuProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Simple Menu"
					},
					"children": [
						{
							"id": 340,
							"name": "anchorCorner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Manually position the menu to one of the corners."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "AnchorT",
								"id": 193
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.anchorCorner",
								"id": 5
							}
						},
						{
							"id": 330,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Children to render"
							},
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 192,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "React.ReactNode"
							},
							"overwrites": {
								"type": "reference",
								"name": "MenuSurfaceProps.children",
								"id": 14
							}
						},
						{
							"id": 339,
							"name": "fixed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Make the menu position fixed."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 38,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.fixed",
								"id": 4
							}
						},
						{
							"id": 328,
							"name": "handle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An element that will open the menu when clicked"
							},
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 188,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactElement",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 345,
							"name": "onClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback for when the menu is closed."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 44,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 346,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 347,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 348,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "CustomEventT",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "__type"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.onClose",
								"id": 10
							}
						},
						{
							"id": 341,
							"name": "onOpen",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback for when the menu is opened."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 42,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 342,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 343,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 344,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "CustomEventT",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "__type"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.onOpen",
								"id": 6
							}
						},
						{
							"id": 331,
							"name": "onSelect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback that fires when a Menu item is selected."
							},
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 25,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 332,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 333,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 334,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "CustomEventT",
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 335,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 336,
																					"name": "index",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "menu.tsx",
																							"line": 27,
																							"character": 11
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				},
																				{
																					"id": 337,
																					"name": "item",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "menu.tsx",
																							"line": 28,
																							"character": 10
																						}
																					],
																					"type": {
																						"type": "reference",
																						"name": "HTMLElement"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						336,
																						337
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "menu.tsx",
																					"line": 26,
																					"character": 22
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuProps.onSelect",
								"id": 198
							}
						},
						{
							"id": 338,
							"name": "open",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Opens the menu."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 36,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.open",
								"id": 3
							}
						},
						{
							"id": 329,
							"name": "rootProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "By default, props spread to the Menu component. These will spread to the MenuSurfaceAnchor which is useful for things like overall positioning of the anchor."
							},
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 190,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								340,
								330,
								339,
								328,
								345,
								341,
								331,
								338,
								329
							]
						}
					],
					"sources": [
						{
							"fileName": "menu.tsx",
							"line": 186,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "MenuProps",
							"id": 197
						}
					]
				},
				{
					"id": 364,
					"name": "SimpleMenuState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 365,
							"name": "open",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 205,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								365
							]
						}
					],
					"sources": [
						{
							"fileName": "menu.tsx",
							"line": 204,
							"character": 32
						}
					]
				},
				{
					"id": 349,
					"name": "SimpleMenuSurfaceProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 355,
							"name": "anchorCorner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Manually position the menu to one of the corners."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "AnchorT",
								"id": 193
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.anchorCorner",
								"id": 5
							}
						},
						{
							"id": 352,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Children to render"
							},
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 201,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "React.ReactNode"
							},
							"overwrites": {
								"type": "reference",
								"name": "MenuSurfaceProps.children",
								"id": 14
							}
						},
						{
							"id": 354,
							"name": "fixed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Make the menu position fixed."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 38,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.fixed",
								"id": 4
							}
						},
						{
							"id": 350,
							"name": "handle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An element that will open the menu when clicked"
							},
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 197,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactElement",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 360,
							"name": "onClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback for when the menu is closed."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 44,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 361,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 362,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 363,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "CustomEventT",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "__type"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.onClose",
								"id": 10
							}
						},
						{
							"id": 356,
							"name": "onOpen",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback for when the menu is opened."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 42,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 357,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 358,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 359,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "CustomEventT",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "__type"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.onOpen",
								"id": 6
							}
						},
						{
							"id": 353,
							"name": "open",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Opens the menu."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 36,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "MenuSurfaceProps.open",
								"id": 3
							}
						},
						{
							"id": 351,
							"name": "rootProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "By default, props spread to the Menu component. These will spread to the MenuSurfaceAnchor which is useful for things like overall positioning of the anchor."
							},
							"sources": [
								{
									"fileName": "menu.tsx",
									"line": 199,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								355,
								352,
								354,
								350,
								360,
								356,
								353,
								351
							]
						}
					],
					"sources": [
						{
							"fileName": "menu.tsx",
							"line": 195,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "MenuSurfaceProps",
							"id": 2
						}
					]
				},
				{
					"id": 368,
					"name": "MenuItem",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "This is just the ListItem component exported from the Menu module for convenience. You can use `ListItem` or `SimpleListItem` components from the List section as long as you add `role=\"menuitem\"` and `tabIndex=\"0\"` to the components for accessibility."
					},
					"sources": [
						{
							"fileName": "menu.tsx",
							"line": 60,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ComponentClass",
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"name": "MenuItemProps",
												"id": 217
											},
											{
												"type": "reference",
												"name": "ComponentProps",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							{
								"type": "reference",
								"name": "FunctionComponent",
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"name": "MenuItemProps",
												"id": 217
											},
											{
												"type": "reference",
												"name": "ComponentProps",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									}
								]
							}
						]
					},
					"defaultValue": " componentFactory<MenuItemProps>({\n  displayName: 'MenuItem',\n  tag: ListItem,\n  defaultProps: {\n    role: 'menuitem',\n    tabIndex: 0\n  }\n})"
				},
				{
					"id": 367,
					"name": "MenuItems",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "menu.tsx",
							"line": 48,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ComponentClass",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ComponentProps",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							{
								"type": "reference",
								"name": "FunctionComponent",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ComponentProps",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						]
					},
					"defaultValue": " componentFactory<{}>({\n  displayName: 'MenuItems',\n  tag: List,\n  classNames: ['mdc-list mdc-menu__items'],\n  defaultProps: {\n    role: 'menu'\n  }\n})"
				},
				{
					"id": 366,
					"name": "MenuRoot",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "menu.tsx",
							"line": 33,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ComponentClass",
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"name": "MenuProps",
												"id": 197
											},
											{
												"type": "reference",
												"name": "ComponentProps",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							{
								"type": "reference",
								"name": "FunctionComponent",
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"name": "MenuProps",
												"id": 197
											},
											{
												"type": "reference",
												"name": "ComponentProps",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									}
								]
							}
						]
					},
					"defaultValue": " componentFactory<MenuProps>({\n  displayName: 'MenuRoot',\n  classNames: (props: MenuProps) => [\n    'mdc-menu',\n    'mdc-menu-surface',\n    {\n      'mdc-menu-surface--fixed': props.fixed\n    }\n  ],\n  consumeProps: ['fixed'],\n  defaultProps: {\n    tabIndex: -1\n  }\n})"
				},
				{
					"id": 373,
					"name": "SimpleMenu",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "A Simplified menu component that allows you to pass a handle element and will automatically control the open state and add a MenuSurfaceAnchor"
					},
					"sources": [
						{
							"fileName": "menu.tsx",
							"line": 276,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ComponentClass",
								"typeArguments": [
									{
										"type": "reference",
										"name": "SimpleMenuProps",
										"id": 327
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							{
								"type": "reference",
								"name": "FunctionComponent",
								"typeArguments": [
									{
										"type": "reference",
										"name": "SimpleMenuProps",
										"id": 327
									}
								]
							}
						]
					},
					"defaultValue": " simpleMenuFactory<SimpleMenuProps>(Menu)"
				},
				{
					"id": 374,
					"name": "SimpleMenuSurface",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "The same as SimpleMenu, but a generic surface."
					},
					"sources": [
						{
							"fileName": "menu.tsx",
							"line": 281,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ComponentClass",
								"typeArguments": [
									{
										"type": "reference",
										"name": "SimpleMenuSurfaceProps",
										"id": 349
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							{
								"type": "reference",
								"name": "FunctionComponent",
								"typeArguments": [
									{
										"type": "reference",
										"name": "SimpleMenuSurfaceProps",
										"id": 349
									}
								]
							}
						]
					},
					"defaultValue": " simpleMenuFactory<SimpleMenuSurfaceProps>(\n  MenuSurface\n)"
				},
				{
					"id": 369,
					"name": "simpleMenuFactory",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 370,
							"name": "simpleMenuFactory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 371,
									"name": "Props",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SimpleMenuProps",
										"id": 327
									}
								}
							],
							"parameters": [
								{
									"id": 372,
									"name": "MenuComponent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "React.ComponentType",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "MenuProps",
														"id": 197
													},
													{
														"type": "reference",
														"name": "MenuSurfaceProps",
														"id": 2
													}
												]
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "React.ComponentType",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Props",
										"constraint": {
											"type": "reference",
											"name": "SimpleMenuProps",
											"id": 327
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "menu.tsx",
							"line": 208,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						225
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						217,
						197,
						327,
						364,
						349
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						368,
						367,
						366,
						373,
						374
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						369
					]
				}
			],
			"sources": [
				{
					"fileName": "menu.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"menu-surface\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/jamesmfriedman/Sites/rmwc/src/menu/menu-surface.tsx",
			"children": [
				{
					"id": 15,
					"name": "MenuSurface",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A generic menu component for displaying any type of content."
					},
					"typeParameter": [
						{
							"id": 106,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 136,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 21,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 22,
									"name": "new MenuSurface",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 23,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MenuSurfaceProps",
												"id": 2
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "MenuSurface",
										"id": 15
									},
									"overwrites": {
										"type": "reference",
										"name": "FoundationComponent.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 70,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FoundationComponent.__constructor"
							}
						},
						{
							"id": 16,
							"name": "anchorElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 66,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"defaultValue": " null"
						},
						{
							"id": 109,
							"name": "elements",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 204,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 110,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 111,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 112,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "FoundationElement",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
											"line": 204,
											"character": 11
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.elements"
							}
						},
						{
							"id": 18,
							"name": "firstFocusableElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 68,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"defaultValue": " null"
						},
						{
							"id": 108,
							"name": "foundation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 203,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": " this.getDefaultFoundation()",
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.foundation"
							}
						},
						{
							"id": 20,
							"name": "hoisted",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 70,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 19,
							"name": "lastFocusableElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 69,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"defaultValue": " null"
						},
						{
							"id": 17,
							"name": "previousFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 67,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"defaultValue": " null"
						},
						{
							"id": 107,
							"name": "shouldDebounce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 201,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.shouldDebounce"
							}
						},
						{
							"id": 26,
							"name": "open",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"getSignature": [
								{
									"id": 27,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"setSignature": [
								{
									"id": 28,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 29,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 91,
									"character": 10
								},
								{
									"fileName": "menu-surface.tsx",
									"line": 96,
									"character": 10
								}
							]
						},
						{
							"id": 152,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 153,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 610,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 158,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 159,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 160,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "MenuSurfaceProps",
																"id": 2
															}
														]
													}
												]
											}
										},
										{
											"id": 161,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 642,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 167,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 168,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 169,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "MenuSurfaceProps",
																"id": 2
															}
														]
													}
												]
											}
										},
										{
											"id": 170,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 171,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 670,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 142,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 143,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 144,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 145,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 539,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 24,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 25,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "FoundationComponent.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 78,
									"character": 19
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FoundationComponent.componentDidMount"
							}
						},
						{
							"id": 113,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 114,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 115,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "FoundationPropsT",
												"typeArguments": [
													{
														"type": "reference",
														"name": "MenuSurfaceProps",
														"id": 2
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 221,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentDidUpdate"
							}
						},
						{
							"id": 150,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 151,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 596,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 154,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 155,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 156,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "MenuSurfaceProps",
																"id": 2
															}
														]
													}
												]
											}
										},
										{
											"id": 157,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 625,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 116,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 117,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 225,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentWillUnmount"
							}
						},
						{
							"id": 162,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 163,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 164,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "MenuSurfaceProps",
																"id": 2
															}
														]
													}
												]
											}
										},
										{
											"id": 165,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 166,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 655,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 118,
							"name": "createElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 119,
									"name": "createElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 120,
											"name": "ElementType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 121,
											"name": "elementName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FoundationElement",
										"typeArguments": [
											{
												"type": "unknown",
												"name": "ExtractProps<ElementType>"
											},
											{
												"type": "unknown",
												"name": "ElementType"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.createElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 231,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.createElement"
							}
						},
						{
							"id": 96,
							"name": "deregisterBodyClickListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 97,
									"name": "deregisterBodyClickListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 260,
									"character": 29
								}
							]
						},
						{
							"id": 131,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 132,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fires a cross-browser-compatible custom event from the component root of the given type,"
									},
									"parameters": [
										{
											"id": 133,
											"name": "evtType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 134,
											"name": "evtData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										},
										{
											"id": 135,
											"name": "shouldBubble",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"name": "CustomEvent",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.emit"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 260,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.emit"
							}
						},
						{
							"id": 30,
							"name": "getDefaultFoundation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 31,
									"name": "getDefaultFoundation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "FoundationComponent.getDefaultFoundation"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 117,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FoundationComponent.getDefaultFoundation"
							}
						},
						{
							"id": 49,
							"name": "getDimensionAdapterMethods",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 50,
									"name": "getDimensionAdapterMethods",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 51,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 57,
													"name": "getAnchorDimensions",
													"kind": 64,
													"kindString": "Function",
													"flags": {},
													"signatures": [
														{
															"id": 58,
															"name": "getAnchorDimensions",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "null"
																	},
																	{
																		"type": "reference",
																		"name": "ClientRect"
																	},
																	{
																		"type": "reference",
																		"name": "DOMRect"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "menu-surface.tsx",
															"line": 184,
															"character": 25
														}
													]
												},
												{
													"id": 64,
													"name": "getBodyDimensions",
													"kind": 64,
													"kindString": "Function",
													"flags": {},
													"signatures": [
														{
															"id": 65,
															"name": "getBodyDimensions",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 66,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 68,
																			"name": "height",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "menu-surface.tsx",
																					"line": 192,
																					"character": 16
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"defaultValue": " document.body.clientHeight"
																		},
																		{
																			"id": 67,
																			"name": "width",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "menu-surface.tsx",
																					"line": 191,
																					"character": 15
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"defaultValue": " document.body.clientWidth"
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				68,
																				67
																			]
																		}
																	]
																}
															}
														}
													],
													"sources": [
														{
															"fileName": "menu-surface.tsx",
															"line": 189,
															"character": 23
														}
													]
												},
												{
													"id": 52,
													"name": "getInnerDimensions",
													"kind": 64,
													"kindString": "Function",
													"flags": {},
													"signatures": [
														{
															"id": 53,
															"name": "getInnerDimensions",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 54,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 56,
																			"name": "height",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "menu-surface.tsx",
																					"line": 181,
																					"character": 16
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "null"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			},
																			"defaultValue": " this.root.ref && this.root.ref.offsetHeight"
																		},
																		{
																			"id": 55,
																			"name": "width",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "menu-surface.tsx",
																					"line": 180,
																					"character": 15
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "null"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			},
																			"defaultValue": " this.root.ref && this.root.ref.offsetWidth"
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				56,
																				55
																			]
																		}
																	]
																}
															}
														}
													],
													"sources": [
														{
															"fileName": "menu-surface.tsx",
															"line": 178,
															"character": 24
														}
													]
												},
												{
													"id": 59,
													"name": "getWindowDimensions",
													"kind": 64,
													"kindString": "Function",
													"flags": {},
													"signatures": [
														{
															"id": 60,
															"name": "getWindowDimensions",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 61,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 63,
																			"name": "height",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "menu-surface.tsx",
																					"line": 187,
																					"character": 49
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"defaultValue": " window.innerHeight"
																		},
																		{
																			"id": 62,
																			"name": "width",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "menu-surface.tsx",
																					"line": 187,
																					"character": 22
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"defaultValue": " window.innerWidth"
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				63,
																				62
																			]
																		}
																	]
																}
															}
														}
													],
													"sources": [
														{
															"fileName": "menu-surface.tsx",
															"line": 186,
															"character": 25
														}
													]
												},
												{
													"id": 69,
													"name": "getWindowScroll",
													"kind": 64,
													"kindString": "Function",
													"flags": {},
													"signatures": [
														{
															"id": 70,
															"name": "getWindowScroll",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 71,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 72,
																			"name": "x",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "menu-surface.tsx",
																					"line": 196,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"defaultValue": " window.pageXOffset"
																		},
																		{
																			"id": 73,
																			"name": "y",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "menu-surface.tsx",
																					"line": 196,
																					"character": 41
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"defaultValue": " window.pageYOffset"
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				72,
																				73
																			]
																		}
																	]
																}
															}
														}
													],
													"sources": [
														{
															"fileName": "menu-surface.tsx",
															"line": 195,
															"character": 21
														}
													]
												},
												{
													"id": 82,
													"name": "setMaxHeight",
													"kind": 64,
													"kindString": "Function",
													"flags": {},
													"signatures": [
														{
															"id": 83,
															"name": "setMaxHeight",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 84,
																	"name": "height",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "menu-surface.tsx",
															"line": 215,
															"character": 18
														}
													]
												},
												{
													"id": 74,
													"name": "setPosition",
													"kind": 64,
													"kindString": "Function",
													"flags": {},
													"signatures": [
														{
															"id": 75,
															"name": "setPosition",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 76,
																	"name": "position",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 77,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 80,
																					"name": "bottom",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "menu-surface.tsx",
																							"line": 201,
																							"character": 14
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 81,
																					"name": "left",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "menu-surface.tsx",
																							"line": 202,
																							"character": 12
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 79,
																					"name": "right",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "menu-surface.tsx",
																							"line": 200,
																							"character": 13
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 78,
																					"name": "top",
																					"kind": 32,
																					"kindString": "Variable",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "menu-surface.tsx",
																							"line": 199,
																							"character": 11
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Variables",
																					"kind": 32,
																					"children": [
																						80,
																						81,
																						79,
																						78
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "menu-surface.tsx",
																					"line": 198,
																					"character": 29
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "menu-surface.tsx",
															"line": 198,
															"character": 17
														}
													]
												}
											],
											"groups": [
												{
													"title": "Functions",
													"kind": 64,
													"children": [
														57,
														64,
														52,
														59,
														69,
														82,
														74
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 176,
									"character": 28
								}
							]
						},
						{
							"id": 32,
							"name": "getFocusAdapterMethods",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 33,
									"name": "getFocusAdapterMethods",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 34,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 45,
													"name": "focusFirstElement",
													"kind": 64,
													"kindString": "Function",
													"flags": {},
													"signatures": [
														{
															"id": 46,
															"name": "focusFirstElement",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "null"
																	},
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "menu-surface.tsx",
															"line": 165,
															"character": 23
														}
													]
												},
												{
													"id": 47,
													"name": "focusLastElement",
													"kind": 64,
													"kindString": "Function",
													"flags": {},
													"signatures": [
														{
															"id": 48,
															"name": "focusLastElement",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "null"
																	},
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "menu-surface.tsx",
															"line": 169,
															"character": 22
														}
													]
												},
												{
													"id": 41,
													"name": "isFirstElementFocused",
													"kind": 64,
													"kindString": "Function",
													"flags": {},
													"signatures": [
														{
															"id": 42,
															"name": "isFirstElementFocused",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "null"
																	},
																	{
																		"type": "intrinsic",
																		"name": "false"
																	},
																	{
																		"type": "intrinsic",
																		"name": "true"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "menu-surface.tsx",
															"line": 159,
															"character": 27
														}
													]
												},
												{
													"id": 35,
													"name": "isFocused",
													"kind": 64,
													"kindString": "Function",
													"flags": {},
													"signatures": [
														{
															"id": 36,
															"name": "isFocused",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"sources": [
														{
															"fileName": "menu-surface.tsx",
															"line": 148,
															"character": 15
														}
													]
												},
												{
													"id": 43,
													"name": "isLastElementFocused",
													"kind": 64,
													"kindString": "Function",
													"flags": {},
													"signatures": [
														{
															"id": 44,
															"name": "isLastElementFocused",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "null"
																	},
																	{
																		"type": "intrinsic",
																		"name": "false"
																	},
																	{
																		"type": "intrinsic",
																		"name": "true"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "menu-surface.tsx",
															"line": 162,
															"character": 26
														}
													]
												},
												{
													"id": 39,
													"name": "restoreFocus",
													"kind": 64,
													"kindString": "Function",
													"flags": {},
													"signatures": [
														{
															"id": 40,
															"name": "restoreFocus",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "menu-surface.tsx",
															"line": 152,
															"character": 18
														}
													]
												},
												{
													"id": 37,
													"name": "saveFocus",
													"kind": 64,
													"kindString": "Function",
													"flags": {},
													"signatures": [
														{
															"id": 38,
															"name": "saveFocus",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "menu-surface.tsx",
															"line": 149,
															"character": 15
														}
													]
												}
											],
											"groups": [
												{
													"title": "Functions",
													"kind": 64,
													"children": [
														45,
														47,
														41,
														35,
														43,
														39,
														37
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 146,
									"character": 24
								}
							]
						},
						{
							"id": 146,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 147,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 148,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "MenuSurfaceProps",
																"id": 2
															}
														]
													}
												]
											}
										},
										{
											"id": 149,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 575,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 98,
							"name": "handleBodyClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 99,
									"name": "handleBodyClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 100,
											"name": "evt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 264,
									"character": 17
								}
							]
						},
						{
							"id": 101,
							"name": "handleKeydown",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 102,
									"name": "handleKeydown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 103,
											"name": "evt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "KeyboardEvent"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 268,
									"character": 15
								}
							]
						},
						{
							"id": 89,
							"name": "hoistMenuToBody",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 90,
									"name": "hoistMenuToBody",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 243,
									"character": 17
								}
							]
						},
						{
							"id": 94,
							"name": "registerBodyClickListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 95,
									"name": "registerBodyClickListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 257,
									"character": 27
								}
							]
						},
						{
							"id": 104,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 105,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 272,
									"character": 8
								}
							]
						},
						{
							"id": 91,
							"name": "setAnchorCorner",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 92,
									"name": "setAnchorCorner",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 93,
											"name": "corner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 253,
									"character": 17
								}
							]
						},
						{
							"id": 137,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 138,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 139,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "reference",
																"name": "MenuSurfaceProps",
																"id": 2
															}
														]
													}
												]
											}
										},
										{
											"id": 140,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 141,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 529,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 85,
							"name": "sync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 86,
									"name": "sync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 87,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MenuSurfaceProps",
												"id": 2
											}
										},
										{
											"id": 88,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MenuSurfaceProps",
												"id": 2
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "FoundationComponent.sync"
									}
								}
							],
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 221,
									"character": 6
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FoundationComponent.sync"
							}
						},
						{
							"id": 124,
							"name": "syncProp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 125,
									"name": "syncProp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 126,
											"name": "prop",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 127,
											"name": "prevProp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 128,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 129,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 130,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
															"line": 246,
															"character": 46
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.syncProp"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 246,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.syncProp"
							}
						},
						{
							"id": 122,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 123,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.update"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/foundation-component.tsx",
									"line": 240,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.update"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								21
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								16,
								109,
								18,
								108,
								20,
								19,
								17,
								107
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								26
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								152,
								158,
								167,
								142,
								24,
								113,
								150,
								154,
								116,
								162,
								118,
								96,
								131,
								30,
								49,
								32,
								146,
								98,
								101,
								89,
								94,
								104,
								91,
								137,
								85,
								124,
								122
							]
						}
					],
					"sources": [
						{
							"fileName": "menu-surface.tsx",
							"line": 64,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FoundationComponent",
							"typeArguments": [
								{
									"type": "reference",
									"name": "MenuSurfaceProps",
									"id": 2
								}
							]
						}
					]
				},
				{
					"id": 2,
					"name": "MenuSurfaceProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 5,
							"name": "anchorCorner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Manually position the menu to one of the corners."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "AnchorT",
								"id": 193
							}
						},
						{
							"id": 14,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Children to render."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 46,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "React.ReactNode"
							}
						},
						{
							"id": 4,
							"name": "fixed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Make the menu position fixed."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 38,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 10,
							"name": "onClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback for when the menu is closed."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 44,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 11,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 12,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 13,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "CustomEventT",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "__type"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 6,
							"name": "onOpen",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback for when the menu is opened."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 42,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 7,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 8,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 9,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "CustomEventT",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "__type"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 3,
							"name": "open",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Opens the menu."
							},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 36,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5,
								14,
								4,
								10,
								6,
								3
							]
						}
					],
					"sources": [
						{
							"fileName": "menu-surface.tsx",
							"line": 34,
							"character": 33
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "MenuProps",
							"id": 197
						},
						{
							"type": "reference",
							"name": "SimpleMenuSurfaceProps",
							"id": 349
						}
					]
				},
				{
					"id": 193,
					"name": "AnchorT",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "menu-surface.tsx",
							"line": 32,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "bottomEnd"
							},
							{
								"type": "stringLiteral",
								"value": "bottomLeft"
							},
							{
								"type": "stringLiteral",
								"value": "bottomRight"
							},
							{
								"type": "stringLiteral",
								"value": "bottomStart"
							},
							{
								"type": "stringLiteral",
								"value": "topEnd"
							},
							{
								"type": "stringLiteral",
								"value": "topLeft"
							},
							{
								"type": "stringLiteral",
								"value": "topRight"
							},
							{
								"type": "stringLiteral",
								"value": "topStart"
							}
						]
					}
				},
				{
					"id": 195,
					"name": "MenuSurfaceAnchor",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "A Menu Anchor. When using the anchorCorner prop of Menu, you must set MenuSurfaceAnchors css style position to absolute."
					},
					"sources": [
						{
							"fileName": "menu-surface.tsx",
							"line": 299,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ComponentClass",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ComponentProps",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							{
								"type": "reference",
								"name": "FunctionComponent",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ComponentProps",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						]
					},
					"defaultValue": " componentFactory({\n  displayName: 'MenuSurfaceAnchor',\n  classNames: ['mdc-menu-surface--anchor']\n})"
				},
				{
					"id": 194,
					"name": "MenuSurfaceRoot",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "MenuSurface"
					},
					"sources": [
						{
							"fileName": "menu-surface.tsx",
							"line": 52,
							"character": 28
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ComponentClass",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ComponentProps",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							{
								"type": "reference",
								"name": "FunctionComponent",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ComponentProps",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						]
					},
					"defaultValue": " componentFactory<{}>({\n  displayName: 'MenuSurfaceRoot',\n  classNames: (props: MenuSurfaceProps) => [\n    'mdc-menu-surface',\n    {\n      'mdc-menu-surface--fixed': props.fixed\n    }\n  ],\n  consumeProps: ['fixed']\n})"
				},
				{
					"id": 181,
					"name": "getAnchorCornerFromProp",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 182,
							"name": "getAnchorCornerFromProp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 183,
									"name": "anchorCorner",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reflection",
											"declaration": {
												"id": 184,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 185,
														"name": "bottomEnd",
														"kind": 32,
														"kindString": "Variable",
														"flags": {},
														"sources": [
															{
																"fileName": "menu-surface.tsx",
																"line": 17,
																"character": 11
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"BOTTOM_END\""
													},
													{
														"id": 186,
														"name": "bottomLeft",
														"kind": 32,
														"kindString": "Variable",
														"flags": {},
														"sources": [
															{
																"fileName": "menu-surface.tsx",
																"line": 18,
																"character": 12
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"BOTTOM_LEFT\""
													},
													{
														"id": 187,
														"name": "bottomRight",
														"kind": 32,
														"kindString": "Variable",
														"flags": {},
														"sources": [
															{
																"fileName": "menu-surface.tsx",
																"line": 19,
																"character": 13
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"BOTTOM_RIGHT\""
													},
													{
														"id": 188,
														"name": "bottomStart",
														"kind": 32,
														"kindString": "Variable",
														"flags": {},
														"sources": [
															{
																"fileName": "menu-surface.tsx",
																"line": 20,
																"character": 13
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"BOTTOM_START\""
													},
													{
														"id": 189,
														"name": "topEnd",
														"kind": 32,
														"kindString": "Variable",
														"flags": {},
														"sources": [
															{
																"fileName": "menu-surface.tsx",
																"line": 21,
																"character": 8
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"TOP_END\""
													},
													{
														"id": 190,
														"name": "topLeft",
														"kind": 32,
														"kindString": "Variable",
														"flags": {},
														"sources": [
															{
																"fileName": "menu-surface.tsx",
																"line": 22,
																"character": 9
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"TOP_LEFT\""
													},
													{
														"id": 191,
														"name": "topRight",
														"kind": 32,
														"kindString": "Variable",
														"flags": {},
														"sources": [
															{
																"fileName": "menu-surface.tsx",
																"line": 23,
																"character": 10
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"TOP_RIGHT\""
													},
													{
														"id": 192,
														"name": "topStart",
														"kind": 32,
														"kindString": "Variable",
														"flags": {},
														"sources": [
															{
																"fileName": "menu-surface.tsx",
																"line": 24,
																"character": 10
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														},
														"defaultValue": "\"TOP_START\""
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															185,
															186,
															187,
															188,
															189,
															190,
															191,
															192
														]
													}
												],
												"sources": [
													{
														"fileName": "menu-surface.tsx",
														"line": 28,
														"character": 21
													}
												]
											}
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "menu-surface.tsx",
							"line": 27,
							"character": 29
						}
					]
				},
				{
					"id": 172,
					"name": "ANCHOR_CORNER_MAP",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 173,
							"name": "bottomEnd",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"BOTTOM_END\""
						},
						{
							"id": 174,
							"name": "bottomLeft",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 18,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"BOTTOM_LEFT\""
						},
						{
							"id": 175,
							"name": "bottomRight",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 19,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"BOTTOM_RIGHT\""
						},
						{
							"id": 176,
							"name": "bottomStart",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 20,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"BOTTOM_START\""
						},
						{
							"id": 177,
							"name": "topEnd",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 21,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"TOP_END\""
						},
						{
							"id": 178,
							"name": "topLeft",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 22,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"TOP_LEFT\""
						},
						{
							"id": 179,
							"name": "topRight",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 23,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"TOP_RIGHT\""
						},
						{
							"id": 180,
							"name": "topStart",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "menu-surface.tsx",
									"line": 24,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"TOP_START\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								173,
								174,
								175,
								176,
								177,
								178,
								179,
								180
							]
						}
					],
					"sources": [
						{
							"fileName": "menu-surface.tsx",
							"line": 16,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						15
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						193
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						195,
						194
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						181
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						172
					]
				}
			],
			"sources": [
				{
					"fileName": "menu-surface.tsx",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				375,
				196,
				1
			]
		}
	]
}