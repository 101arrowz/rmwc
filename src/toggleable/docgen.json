{
	"id": 0,
	"name": "@rmwc/toggleable",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/jamesmfriedman/Sites/rmwc/src/toggleable/index.tsx",
			"children": [
				{
					"id": 9,
					"name": "ToggleableFoundationComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 10,
							"name": "P",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ToggleableFoundationProps",
								"id": 2
							}
						},
						{
							"id": 11,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 62,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 28,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 29,
									"name": "new ToggleableFoundationComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 30,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ToggleableFoundationComponent",
										"id": 9
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/dist/foundation-component.d.ts",
									"line": 57,
									"character": 6
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.__constructor"
							}
						},
						{
							"id": 24,
							"name": "elements",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/dist/foundation-component.d.ts",
									"line": 55,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 25,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 26,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 27,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "FoundationElement",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/dist/foundation-component.d.ts",
											"line": 55,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.elements"
							}
						},
						{
							"id": 23,
							"name": "foundation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/dist/foundation-component.d.ts",
									"line": 54,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.foundation"
							}
						},
						{
							"id": 12,
							"name": "generatedId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "index.tsx",
									"line": 26,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " randomId(this.constructor.displayName)"
						},
						{
							"id": 22,
							"name": "shouldDebounce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/dist/foundation-component.d.ts",
									"line": 53,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.shouldDebounce"
							}
						},
						{
							"id": 13,
							"name": "hasLabel",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 14,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "unknown",
												"name": "MergeInterfacesT<P & FoundationProps, FoundationProps>[\"label\"]"
											},
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"name": "__type"
													},
													{
														"type": "unknown",
														"name": "MergeInterfacesT<P & FoundationProps, FoundationProps>[\"children\"]"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index.tsx",
									"line": 28,
									"character": 14
								}
							]
						},
						{
							"id": 15,
							"name": "id",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 16,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "unknown",
										"name": "MergeInterfacesT<P & FoundationProps, FoundationProps>[\"id\"]"
									}
								}
							],
							"sources": [
								{
									"fileName": "index.tsx",
									"line": 32,
									"character": 8
								}
							]
						},
						{
							"id": 17,
							"name": "toggleRootProps",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 18,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "index.tsx",
									"line": 36,
									"character": 21
								}
							]
						},
						{
							"id": 78,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 79,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 610,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 84,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 85,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 86,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "P",
																		"constraint": {
																			"type": "reference",
																			"name": "ToggleableFoundationProps",
																			"id": 2
																		}
																	},
																	{
																		"type": "reference",
																		"name": "FoundationProps"
																	}
																]
															}
														]
													}
												]
											}
										},
										{
											"id": 87,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 642,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 93,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 94,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 95,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "P",
																		"constraint": {
																			"type": "reference",
																			"name": "ToggleableFoundationProps",
																			"id": 2
																		}
																	},
																	{
																		"type": "reference",
																		"name": "FoundationProps"
																	}
																]
															}
														]
													}
												]
											}
										},
										{
											"id": 96,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 97,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 670,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 68,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 69,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 70,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 71,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 539,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 31,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 32,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/dist/foundation-component.d.ts",
									"line": 59,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentDidMount"
							}
						},
						{
							"id": 33,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 34,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 35,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "FoundationPropsT",
												"typeArguments": [
													{
														"type": "intersection",
														"types": [
															{
																"type": "typeParameter",
																"name": "P",
																"constraint": {
																	"type": "reference",
																	"name": "ToggleableFoundationProps",
																	"id": 2
																}
															},
															{
																"type": "reference",
																"name": "FoundationProps"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/dist/foundation-component.d.ts",
									"line": 60,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentDidUpdate"
							}
						},
						{
							"id": 76,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 77,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 596,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 80,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 81,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 82,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "P",
																		"constraint": {
																			"type": "reference",
																			"name": "ToggleableFoundationProps",
																			"id": 2
																		}
																	},
																	{
																		"type": "reference",
																		"name": "FoundationProps"
																	}
																]
															}
														]
													}
												]
											}
										},
										{
											"id": 83,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 625,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 36,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 37,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/dist/foundation-component.d.ts",
									"line": 61,
									"character": 24
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.componentWillUnmount"
							}
						},
						{
							"id": 88,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 89,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 90,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "P",
																		"constraint": {
																			"type": "reference",
																			"name": "ToggleableFoundationProps",
																			"id": 2
																		}
																	},
																	{
																		"type": "reference",
																		"name": "FoundationProps"
																	}
																]
															}
														]
													}
												]
											}
										},
										{
											"id": 91,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 92,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 655,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 38,
							"name": "createElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 39,
									"name": "createElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 40,
											"name": "ElementType",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 41,
											"name": "elementName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FoundationElement",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ExtractProps",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "ElementType",
														"constraint": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												]
											},
											{
												"type": "typeParameter",
												"name": "ElementType",
												"constraint": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.createElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/dist/foundation-component.d.ts",
									"line": 62,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.createElement"
							}
						},
						{
							"id": 57,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 58,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fires a cross-browser-compatible custom event from the component root of the given type,"
									},
									"parameters": [
										{
											"id": 59,
											"name": "evtType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 60,
											"name": "evtData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Object"
											}
										},
										{
											"id": 61,
											"name": "shouldBubble",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "false"
													},
													{
														"type": "intrinsic",
														"name": "true"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CustomEvent",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.emit"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/dist/foundation-component.d.ts",
									"line": 70,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.emit"
							}
						},
						{
							"id": 55,
							"name": "getDefaultFoundation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 56,
									"name": "getDefaultFoundation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.getDefaultFoundation"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/dist/foundation-component.d.ts",
									"line": 66,
									"character": 24
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.getDefaultFoundation"
							}
						},
						{
							"id": 72,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 73,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 74,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "P",
																		"constraint": {
																			"type": "reference",
																			"name": "ToggleableFoundationProps",
																			"id": 2
																		}
																	},
																	{
																		"type": "reference",
																		"name": "FoundationProps"
																	}
																]
															}
														]
													}
												]
											}
										},
										{
											"id": 75,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 575,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 19,
							"name": "renderToggle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 20,
									"name": "renderToggle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 21,
											"name": "toggle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "React.ReactNode"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "null"
											},
											{
												"type": "reference",
												"name": "__type"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "index.tsx",
									"line": 55,
									"character": 14
								}
							]
						},
						{
							"id": 63,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 64,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 65,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationPropsT",
														"typeArguments": [
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "typeParameter",
																		"name": "P",
																		"constraint": {
																			"type": "reference",
																			"name": "ToggleableFoundationProps",
																			"id": 2
																		}
																	},
																	{
																		"type": "reference",
																		"name": "FoundationProps"
																	}
																]
															}
														]
													}
												]
											}
										},
										{
											"id": 66,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "FoundationStateT",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "S",
																"constraint": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 67,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/node_modules/@types/react/index.d.ts",
									"line": 529,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 44,
							"name": "sync",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 45,
									"name": "sync",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 46,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 47,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.sync"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/dist/foundation-component.d.ts",
									"line": 64,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.sync"
							}
						},
						{
							"id": 48,
							"name": "syncProp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 49,
									"name": "syncProp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 50,
											"name": "prop",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 51,
											"name": "prevProp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 52,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 53,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 54,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/dist/foundation-component.d.ts",
															"line": 65,
															"character": 48
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.syncProp"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/dist/foundation-component.d.ts",
									"line": 65,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.syncProp"
							}
						},
						{
							"id": 42,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 43,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FoundationComponent.update"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/jamesmfriedman/Sites/rmwc/src/base/dist/foundation-component.d.ts",
									"line": 63,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FoundationComponent.update"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								28
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								24,
								23,
								12,
								22
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								13,
								15,
								17
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								78,
								84,
								93,
								68,
								31,
								33,
								76,
								80,
								36,
								88,
								38,
								57,
								55,
								72,
								19,
								63,
								44,
								48,
								42
							]
						}
					],
					"sources": [
						{
							"fileName": "index.tsx",
							"line": 21,
							"character": 42
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FoundationComponent",
							"typeArguments": [
								{
									"type": "intersection",
									"types": [
										{
											"type": "typeParameter",
											"name": "P",
											"constraint": {
												"type": "reference",
												"name": "ToggleableFoundationProps",
												"id": 2
											}
										},
										{
											"type": "reference",
											"name": "FoundationProps"
										}
									]
								},
								{
									"type": "typeParameter",
									"name": "S",
									"constraint": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					]
				},
				{
					"id": 2,
					"name": "ToggleableFoundationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 5,
							"name": "checked",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Toggle the control on and off."
							},
							"sources": [
								{
									"fileName": "index.tsx",
									"line": 12,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 4,
							"name": "disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Disables the control."
							},
							"sources": [
								{
									"fileName": "index.tsx",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 3,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A DOM ID for the toggle."
							},
							"sources": [
								{
									"fileName": "index.tsx",
									"line": 8,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 7,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A label for the control."
							},
							"sources": [
								{
									"fileName": "index.tsx",
									"line": 16,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "React.ReactNode"
							}
						},
						{
							"id": 8,
							"name": "rootProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "By default, all props except className and style spread to the input. These are additional props for the root of the checkbox."
							},
							"sources": [
								{
									"fileName": "index.tsx",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "React.HTMLProps",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 6,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The value of the control."
							},
							"sources": [
								{
									"fileName": "index.tsx",
									"line": 14,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5,
								4,
								3,
								7,
								8,
								6
							]
						}
					],
					"sources": [
						{
							"fileName": "index.tsx",
							"line": 6,
							"character": 42
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						9
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "index.tsx",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1
			]
		}
	]
}