{
  "npm": {},
  "typescript": {
    "IconButtonProps": {
      "documentation": {
        "contents": [
          "<p>An IconButton component that can also be used as a toggle.</p>\n"
        ],
        "contentsRaw": "An IconButton component that can also be used as a toggle.",
        "metadata": {}
      },
      "fileName": "src/icon-button/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "IconButtonProps",
      "sourceUrl": "https://github.com/jamesmfriedman/rmwc/blob/master/src/icon-button/index.tsx#L19",
      "extends": [
        "WithRippleProps"
      ],
      "methods": [],
      "properties": [
        {
          "documentation": {
            "contents": [
              "<p>Controls the on / off state of the a toggleable button.</p>\n"
            ],
            "contentsRaw": "Controls the on / off state of the a toggleable button.",
            "metadata": {}
          },
          "fileName": "src/icon-button/index.tsx",
          "flags": {
            "isExported": true,
            "isExternal": false,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "checked",
          "sourceUrl": "https://github.com/jamesmfriedman/rmwc/blob/master/src/icon-button/index.tsx#L21",
          "type": "undefined | false | true"
        },
        {
          "documentation": {
            "contents": [
              "<p>Makes the button disabled</p>\n"
            ],
            "contentsRaw": "Makes the button disabled",
            "metadata": {}
          },
          "fileName": "src/icon-button/index.tsx",
          "flags": {
            "isExported": true,
            "isExternal": false,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "disabled",
          "sourceUrl": "https://github.com/jamesmfriedman/rmwc/blob/master/src/icon-button/index.tsx#L27",
          "type": "undefined | false | true"
        },
        {
          "documentation": {
            "contents": [
              "<p>Icon for the button</p>\n"
            ],
            "contentsRaw": "Icon for the button",
            "metadata": {}
          },
          "fileName": "src/icon-button/index.tsx",
          "flags": {
            "isExported": true,
            "isExternal": false,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "icon",
          "sourceUrl": "https://github.com/jamesmfriedman/rmwc/blob/master/src/icon-button/index.tsx#L29",
          "type": "RMWC.IconPropT"
        },
        {
          "documentation": {
            "contents": [
              "<p>Apply an aria label.</p>\n"
            ],
            "contentsRaw": "Apply an aria label.",
            "metadata": {}
          },
          "fileName": "src/icon-button/index.tsx",
          "flags": {
            "isExported": true,
            "isExternal": false,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "label",
          "sourceUrl": "https://github.com/jamesmfriedman/rmwc/blob/master/src/icon-button/index.tsx#L23",
          "type": "undefined | string"
        },
        {
          "documentation": {
            "contents": [
              "<p>An onChange callback that receives a custom event. evt.detail = { isOn: boolean }</p>\n"
            ],
            "contentsRaw": "An onChange callback that receives a custom event. evt.detail = { isOn: boolean }",
            "metadata": {}
          },
          "fileName": "src/icon-button/index.tsx",
          "flags": {
            "isExported": true,
            "isExternal": false,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onChange",
          "sourceUrl": "https://github.com/jamesmfriedman/rmwc/blob/master/src/icon-button/index.tsx#L25",
          "type": "undefined | (evt: IconButtonOnChangeEventT) => void"
        },
        {
          "documentation": {
            "contents": [
              "<p>If specified, renders a toggle with this icon as the on state.</p>\n"
            ],
            "contentsRaw": "If specified, renders a toggle with this icon as the on state.",
            "metadata": {}
          },
          "fileName": "src/icon-button/index.tsx",
          "flags": {
            "isExported": true,
            "isExternal": false,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onIcon",
          "sourceUrl": "https://github.com/jamesmfriedman/rmwc/blob/master/src/icon-button/index.tsx#L31",
          "type": "RMWC.IconPropT"
        },
        {
          "documentation": {
            "contents": [
              "<p>Adds a ripple effect to the component</p>\n"
            ],
            "contentsRaw": "Adds a ripple effect to the component",
            "metadata": {}
          },
          "fileName": "src/icon-button/node_modules/@rmwc/types/index.tsx",
          "flags": {
            "isExported": true,
            "isExternal": false,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "ripple",
          "inheritedFrom": "WithRippleProps.ripple",
          "type": "RipplePropT"
        }
      ]
    },
    "IconButtonOnChangeEventT": {
      "documentation": {
        "contents": [
          "<p>Events</p>\n"
        ],
        "contentsRaw": "Events",
        "metadata": {}
      },
      "fileName": "src/icon-button/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "type alias",
      "name": "IconButtonOnChangeEventT",
      "sourceUrl": "https://github.com/jamesmfriedman/rmwc/blob/master/src/icon-button/index.tsx#L12",
      "type": "RMWC.CustomEventT<>"
    },
    "IconButtonHTMLProps": {
      "fileName": "src/icon-button/index.tsx",
      "flags": {
        "isExported": true,
        "isExternal": false,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "type alias",
      "name": "IconButtonHTMLProps",
      "sourceUrl": "https://github.com/jamesmfriedman/rmwc/blob/master/src/icon-button/index.tsx#L34",
      "type": "RMWC.HTMLProps<HTMLInputElement, Omit<AllHTMLAttributes<HTMLButtonElement>, \"onChange\">>"
    }
  }
}
