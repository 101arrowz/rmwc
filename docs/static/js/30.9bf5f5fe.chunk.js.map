{"version":3,"sources":["switch/readme.tsx"],"names":["__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_doc_utils__WEBPACK_IMPORTED_MODULE_2__","title","lead","module","styles","docsLink","examples","label","___WEBPACK_IMPORTED_MODULE_5__","defaultChecked","_React$useState","React","useState","_React$useState2","Object","_Users_jamesmfriedman_Sites_rmwc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","checked","setChecked","onChange","evt","currentTarget","Fragment","disabled","src","propsSrc","components","Switch"],"mappings":"68hCAQeA,EAAA,mBACb,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAM,WACNC,KAAK,mQACLC,OAAO,eACPC,OAAQ,CACN,uCACA,gDAEFC,SAAS,sEACTC,SAAUA,GAEVT,EAAAC,EAAAC,cAACC,EAAA,EAAD,sHAKAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaO,MAAM,gBACjBV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQC,gBAAc,EAACF,MAAM,WAE/BV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaO,MAAM,cAChB,WAAmB,IAAAG,EACYC,IAAMC,UAAS,GAD3BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACXM,EADWH,EAAA,GACFI,EADEJ,EAAA,GAGlB,OACEhB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEQ,QAASA,EACTE,SAAU,SAAAC,GAAG,OAAIF,EAAWE,EAAIC,cAAcJ,UAC9CT,MAAM,cAMdV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaO,MAAM,kBACjBV,EAAAC,EAAAC,cAACS,EAAA,EAAD,kBAGFX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaO,MAAM,YACjBV,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuB,SAAA,KACExB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQc,UAAQ,EAACf,MAAM,aACvBV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQc,UAAQ,EAACb,gBAAc,EAACF,MAAM,eAI1CV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUuB,IAAKC,EAAUC,WAAY,CAACC","file":"static/js/30.9bf5f5fe.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Docs, DocsExample, DocProps, DocsP } from '@doc-utils';\nimport propsSrc from './generated-props.json';\nimport examples from './generated-examples.json';\n\nimport { Switch } from '.';\n\nexport default function() {\n  return (\n    <Docs\n      title=\"Switches\"\n      lead=\"On/off switches toggle the state of a single settings option. The option that the switch controls, as well as the state itâ€™s in, should be made clear from the corresponding inline label. Switches take on the same visual properties of the radio button.\"\n      module=\"@rmwc/switch\"\n      styles={[\n        '@material/switch/dist/mdc.switch.css',\n        '@material/form-field/dist/mdc.form-field.css'\n      ]}\n      docsLink=\"https://material.io/develop/web/components/input-controls/switches/\"\n      examples={examples}\n    >\n      <DocsP>\n        Switches are identical in function to the Checkbox component, they just\n        present a different UI / UX paradigm.\n      </DocsP>\n\n      <DocsExample label=\"Uncontrolled\">\n        <Switch defaultChecked label=\"Pizza\" />\n      </DocsExample>\n      <DocsExample label=\"Controlled\">\n        {function Example() {\n          const [checked, setChecked] = React.useState(false);\n\n          return (\n            <Switch\n              checked={checked}\n              onChange={evt => setChecked(evt.currentTarget.checked)}\n              label=\"Cookies\"\n            />\n          );\n        }}\n      </DocsExample>\n\n      <DocsExample label=\"Label as Child\">\n        <Switch>Icecream</Switch>\n      </DocsExample>\n\n      <DocsExample label=\"Disabled\">\n        <>\n          <Switch disabled label=\"Disabled\" />\n          <Switch disabled defaultChecked label=\"Disabled\" />\n        </>\n      </DocsExample>\n\n      <DocProps src={propsSrc} components={[Switch]} />\n    </Docs>\n  );\n}\n"],"sourceRoot":""}