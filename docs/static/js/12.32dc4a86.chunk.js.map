{"version":3,"sources":["drawer/readme.tsx"],"names":["__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_doc_utils__WEBPACK_IMPORTED_MODULE_2__","title","lead","module","styles","docsLink","examples","___WEBPACK_IMPORTED_MODULE_5__","_list__WEBPACK_IMPORTED_MODULE_6__","_list__WEBPACK_IMPORTED_MODULE_7__","_React$useState","React","useState","_React$useState2","Object","_Users_jamesmfriedman_Sites_rmwc_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","open","setOpen","Fragment","style","overflow","position","dismissible","minHeight","padding","textAlign","_button__WEBPACK_IMPORTED_MODULE_8__","onClick","raised","_React$useState3","_React$useState4","modal","onClose","_React$useState5","_React$useState6","dir","src","propsSrc","components","Drawer","DrawerHeader","DrawerTitle","DrawerSubtitle","DrawerContent","DrawerAppContent"],"mappings":"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","file":"static/js/12.32dc4a86.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Docs, DocsExample, DocProps, DocsSubtitle, DocsP } from '@doc-utils';\nimport propsSrc from './generated-props.json';\nimport examples from './generated-examples.json';\n\nimport {\n  Drawer,\n  DrawerHeader,\n  DrawerContent,\n  DrawerTitle,\n  DrawerSubtitle,\n  DrawerAppContent\n} from '.';\n\nimport { List, ListItem } from '../list';\n\nimport { Button } from '../button';\n\nexport default function() {\n  return (\n    <Docs\n      title=\"Drawers\"\n      lead=\"A navigation drawer slides in from the left and contains the navigation destinations for your app.\"\n      module=\"@rmwc/drawer\"\n      styles={['@material/drawer/dist/mdc.drawer.css']}\n      docsLink=\"https://material.io/develop/web/components/drawers/\"\n      examples={examples}\n    >\n      <DocsSubtitle>Permanent</DocsSubtitle>\n      <DocsP>\n        These are drawers that are permanently fixed inside of a view.\n      </DocsP>\n\n      <DocsExample>\n        <Drawer>\n          <DrawerHeader>\n            <DrawerTitle>DrawerHeader</DrawerTitle>\n            <DrawerSubtitle>Subtitle</DrawerSubtitle>\n          </DrawerHeader>\n          <DrawerContent>\n            <List>\n              <ListItem>Cookies</ListItem>\n              <ListItem>Pizza</ListItem>\n              <ListItem>Icecream</ListItem>\n            </List>\n          </DrawerContent>\n        </Drawer>\n      </DocsExample>\n\n      <DocsSubtitle>Dismissible</DocsSubtitle>\n      <DocsP>\n        These are drawers that can be toggled to an open or closed state inside\n        of a view, but still takes up viewable space when closed.\n      </DocsP>\n\n      <DocsExample>\n        {function Example() {\n          const [open, setOpen] = React.useState(false);\n\n          return (\n            <>\n              <div style={{ overflow: 'hidden', position: 'relative' }}>\n                <Drawer dismissible open={open}>\n                  <DrawerHeader>\n                    <DrawerTitle>DrawerHeader</DrawerTitle>\n                    <DrawerSubtitle>Subtitle</DrawerSubtitle>\n                  </DrawerHeader>\n                  <DrawerContent>\n                    <List>\n                      <ListItem>Cookies</ListItem>\n                      <ListItem>Pizza</ListItem>\n                      <ListItem>Icecream</ListItem>\n                    </List>\n                  </DrawerContent>\n                </Drawer>\n\n                {/* Optional DrawerAppContent */}\n                <DrawerAppContent\n                  style={{ minHeight: '15rem', padding: '1rem' }}\n                >\n                  DrawerAppContent is an optional component that will resize\n                  content when the dismissible drawer is open and closed. It\n                  must be placed directly after the Drawer component.\n                </DrawerAppContent>\n              </div>\n\n              <div style={{ textAlign: 'center' }}>\n                <Button onClick={() => setOpen(!open)} raised>\n                  Toggle Dismissible\n                </Button>\n              </div>\n            </>\n          );\n        }}\n      </DocsExample>\n\n      <DocsSubtitle>Modal</DocsSubtitle>\n      <DocsP>\n        These are drawers that can be temporarily displayed fixed on the side of\n        the entire viewport.\n      </DocsP>\n\n      <DocsExample>\n        {function Example() {\n          const [open, setOpen] = React.useState(false);\n\n          return (\n            <>\n              <Drawer modal open={open} onClose={() => setOpen(false)}>\n                <DrawerHeader>\n                  <DrawerTitle>DrawerHeader</DrawerTitle>\n                  <DrawerSubtitle>Subtitle</DrawerSubtitle>\n                </DrawerHeader>\n                <DrawerContent>\n                  <List>\n                    <ListItem>Cookies</ListItem>\n                    <ListItem>Pizza</ListItem>\n                    <ListItem>Icecream</ListItem>\n                  </List>\n                </DrawerContent>\n              </Drawer>\n\n              <Button onClick={() => setOpen(!open)} raised>\n                Toggle Modal\n              </Button>\n            </>\n          );\n        }}\n      </DocsExample>\n\n      <DocsSubtitle>Right Side Drawers</DocsSubtitle>\n      <DocsP>\n        `material-components-web` doesn't directly support right hand drawers,\n        but it respects the `dir` attribute on DOM elements. This simple hack\n        will allow you to get drawers that appear from the right hand side of\n        your app. As an aside, the `dir` attribute can be used to invert many\n        other behaviors where the element is anchored on the left.\n      </DocsP>\n\n      <DocsExample>\n        {function Example() {\n          const [open, setOpen] = React.useState(false);\n\n          return (\n            <>\n              {/** Make the drawer appear right-to-left */}\n              <Drawer\n                dir=\"rtl\"\n                modal\n                open={open}\n                onClose={() => setOpen(false)}\n              >\n                {/** Set the content back to left-to-right */}\n                <DrawerHeader dir=\"ltr\">\n                  <DrawerTitle>Right Drawer</DrawerTitle>\n                  <DrawerSubtitle>Subtitle</DrawerSubtitle>\n                </DrawerHeader>\n\n                <DrawerContent dir=\"ltr\">\n                  <List>\n                    <ListItem>Cookies</ListItem>\n                    <ListItem>Pizza</ListItem>\n                    <ListItem>Icecream</ListItem>\n                  </List>\n                </DrawerContent>\n              </Drawer>\n\n              <Button onClick={() => setOpen(!open)} raised>\n                Toggle Right Drawer\n              </Button>\n            </>\n          );\n        }}\n      </DocsExample>\n\n      <DocProps\n        src={propsSrc}\n        components={[\n          Drawer,\n          DrawerHeader,\n          DrawerTitle,\n          DrawerSubtitle,\n          DrawerContent,\n          DrawerAppContent\n        ]}\n      />\n    </Docs>\n  );\n}\n"],"sourceRoot":""}