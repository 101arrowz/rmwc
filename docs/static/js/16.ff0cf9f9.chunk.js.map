{"version":3,"sources":["grid-list/readme.tsx"],"names":["__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_doc_utils__WEBPACK_IMPORTED_MODULE_4__","title","lead","module","styles","docsLink","examples","_React$useState","React","useState","tileGutter1","headerCaption","twolineCaption","withIconAlignStart","tileAspect","_React$useState2","Object","_Users_jamesmfriedman_Sites_rmwc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","state","setState","Fragment","___WEBPACK_IMPORTED_MODULE_7__","Array","fill","undefined","map","val","i","key","src","alt","icon","_checkbox__WEBPACK_IMPORTED_MODULE_8__","label","onChange","evt","_Users_jamesmfriedman_Sites_rmwc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_jamesmfriedman_Sites_rmwc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","currentTarget","checked","_select__WEBPACK_IMPORTED_MODULE_9__","value","options","propsSrc","components","GridList","GridTile","GridTileIcon","GridTilePrimary","GridTileSecondary","GridTileTitleSupportText","GridTileTitle"],"mappings":"yyRAoBeA,EAAA,mBACb,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAM,aACNC,KAAK,wDACLC,OAAO,kBACPC,OAAQ,CAAC,8CACTC,SAAS,yDACTC,SAAUA,GAEVT,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACG,WAAmB,IAAAO,EACQC,IAAMC,SAAS,CACvCC,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBC,oBAAoB,EACpBC,WAAY,QANIC,EAAAC,OAAAC,EAAA,EAAAD,CAAAT,EAAA,GACXW,EADWH,EAAA,GACJI,EADIJ,EAAA,GASlB,OACElB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsB,SAAA,KACEvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACEX,YAAaQ,EAAMR,YACnBC,cAAeO,EAAMP,cACrBC,eAAgBM,EAAMN,eACtBC,mBAAoBK,EAAML,mBAE1BC,WAAYI,EAAMJ,YAEjBQ,MAAM,GACJC,UAAKC,GACLC,IAAI,SAACC,EAAKC,GAAN,OACH9B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAUO,IAAKD,GACb9B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACEQ,IAAI,qCACJC,IAAI,UAGRjC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAcU,KAAK,SACnBlC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,aAAqBM,EAAI,QAMlC,CACC,cACA,gBACA,iBACA,sBACAF,IAAI,SAAAG,GAAG,OACP/B,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACEJ,IAAKA,EACLK,MAAOL,EACPM,SAAU,SAAAC,GAAG,OACXhB,EAASH,OAAAoB,EAAA,EAAApB,CAAA,GAAKE,EAANF,OAAAqB,EAAA,EAAArB,CAAA,GAAcY,EAAMO,EAAIG,cAAcC,gBAKpD1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACEC,MAAOvB,EAAMJ,WACboB,SAAU,SAAAC,GAAG,OACXhB,EAASH,OAAAoB,EAAA,EAAApB,CAAA,GAAKE,EAAN,CAAaJ,WAAYqB,EAAIG,cAAcG,UAErDR,MAAM,aACNS,QAAS,CAAC,MAAO,OAAQ,MAAO,MAAO,MAAO,YAOxD7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6B,IAAKc,EACLC,WAAY,CACVC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC","file":"static/js/16.ff0cf9f9.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Docs, DocsExample, DocProps } from '@doc-utils';\nimport propsSrc from './generated-props.json';\nimport examples from './generated-examples.json';\n\nimport {\n  GridList,\n  GridTile,\n  GridTileIcon,\n  GridTilePrimary,\n  GridTilePrimaryContent,\n  GridTileSecondary,\n  GridTileTitle,\n  GridTileTitleSupportText\n} from '.';\n\nimport { Checkbox } from '../checkbox';\nimport { Select } from '../select';\n\nexport default function() {\n  return (\n    <Docs\n      title=\"Grid Lists\"\n      lead=\"Grid lists are an alternative to standard list views.\"\n      module=\"@rmwc/grid-list\"\n      styles={['@material/grid-list/dist/mdc.grid-list.css']}\n      docsLink=\"https://material.io/components/web/catalog/grid-lists/\"\n      examples={examples}\n    >\n      <DocsExample>\n        {function Example() {\n          const [state, setState] = React.useState({\n            tileGutter1: false,\n            headerCaption: false,\n            twolineCaption: false,\n            withIconAlignStart: false,\n            tileAspect: '1x1'\n          });\n\n          return (\n            <>\n              <GridList\n                tileGutter1={state.tileGutter1}\n                headerCaption={state.headerCaption}\n                twolineCaption={state.twolineCaption}\n                withIconAlignStart={state.withIconAlignStart}\n                // @ts-ignore\n                tileAspect={state.tileAspect}\n              >\n                {Array(8)\n                  .fill(undefined)\n                  .map((val, i) => (\n                    <GridTile key={i}>\n                      <GridTilePrimary>\n                        <GridTilePrimaryContent\n                          src=\"images/backgrounds/mb-bg-fb-06.png\"\n                          alt=\"test\"\n                        />\n                      </GridTilePrimary>\n                      <GridTileSecondary>\n                        <GridTileIcon icon=\"info\" />\n                        <GridTileTitle>Tile {i + 1}</GridTileTitle>\n                      </GridTileSecondary>\n                    </GridTile>\n                  ))}\n              </GridList>\n\n              {[\n                'tileGutter1',\n                'headerCaption',\n                'twoLineCaption',\n                'withIconAlignStart'\n              ].map(key => (\n                <Checkbox\n                  key={key}\n                  label={key}\n                  onChange={evt =>\n                    setState({ ...state, [key]: evt.currentTarget.checked })\n                  }\n                />\n              ))}\n\n              <Select\n                value={state.tileAspect}\n                onChange={evt =>\n                  setState({ ...state, tileAspect: evt.currentTarget.value })\n                }\n                label=\"tileAspect\"\n                options={['1x1', '16x9', '2x3', '3x2', '4x3', '3x4']}\n              />\n            </>\n          );\n        }}\n      </DocsExample>\n\n      <DocProps\n        src={propsSrc}\n        components={[\n          GridList,\n          GridTile,\n          GridTileIcon,\n          GridTilePrimary,\n          GridTileSecondary,\n          GridTileTitleSupportText,\n          GridTileTitle\n        ]}\n      />\n    </Docs>\n  );\n}\n"],"sourceRoot":""}