(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{812:function(e){e.exports=["<ImageList>\n  {[\n    'images/photos/3x2-1.jpg',\n    'images/photos/2x3-1.jpg',\n    'images/photos/3x2-4.jpg',\n    'images/photos/3x2-5.jpg',\n    'images/photos/3x2-6.jpg',\n    'images/photos/2x3-2.jpg',\n    'images/photos/3x2-8.jpg',\n    'images/photos/3x2-11.jpg',\n    'images/photos/2x3-5.jpg',\n    'images/photos/3x2-13.jpg',\n    'images/photos/3x2-14.jpg',\n    'images/photos/2x3-6.jpg',\n    'images/photos/3x2-15.jpg',\n    'images/photos/3x2-16.jpg',\n    'images/photos/2x3-7.jpg'\n  ].map(src => (\n    <ImageListItem\n      key={src}\n      style={{ margin: '2px', width: 'calc(100% / 5 - 4.2px)' }}\n    >\n      <ImageListImageAspectContainer\n        style={{ paddingBottom: 'calc(100% / 1.5)' }}\n      >\n        <ImageListImage src={src} />\n      </ImageListImageAspectContainer>\n      <ImageListSupporting>\n        <ImageListLabel>Text label</ImageListLabel>\n      </ImageListSupporting>\n    </ImageListItem>\n  ))}\n</ImageList>","<ImageList\n  masonry\n  withTextProtection\n  style={{\n    columnCount: 5,\n    columnGap: '16px',\n    maxWidth: '1000px'\n  }}\n>\n  {[\n    'images/photos/3x2-1.jpg',\n    'images/photos/2x3-1.jpg',\n    'images/photos/3x2-4.jpg',\n    'images/photos/3x2-5.jpg',\n    'images/photos/2x3-5.jpg',\n    'images/photos/3x2-6.jpg',\n    'images/photos/2x3-2.jpg',\n    'images/photos/3x2-8.jpg',\n    'images/photos/3x2-11.jpg',\n    'images/photos/3x2-13.jpg',\n    'images/photos/3x2-14.jpg',\n    'images/photos/2x3-6.jpg',\n    'images/photos/3x2-15.jpg',\n    'images/photos/2x3-7.jpg',\n    'images/photos/3x2-16.jpg'\n  ].map(src => (\n    <ImageListItem key={src} style={{ marginBottom: '16px' }}>\n      <ImageListImage src={src} />\n      <ImageListSupporting>\n        <ImageListLabel>Text label</ImageListLabel>\n      </ImageListSupporting>\n    </ImageListItem>\n  ))}\n</ImageList>"]},813:function(e){e.exports={npm:{},typescript:{ImageListProps:{documentation:{contents:["<p>The root of the Image List.</p>\n"],contentsRaw:"The root of the Image List.",metadata:{}},fileName:"src/image-list/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"ImageListProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/image-list/index.tsx#L6",methods:[],properties:[{documentation:{contents:["<p>Indicates that this Image List should use the Masonry variant.</p>\n"],contentsRaw:"Indicates that this Image List should use the Masonry variant.",metadata:{}},fileName:"src/image-list/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"masonry",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/image-list/index.tsx#L8",type:"undefined | false | true"},{documentation:{contents:["<p>Indicates that supporting content should be positioned in a scrim overlaying each image (instead of positioned separately under each image).</p>\n"],contentsRaw:"Indicates that supporting content should be positioned in a scrim overlaying each image (instead of positioned separately under each image).",metadata:{}},fileName:"src/image-list/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"withTextProtection",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/image-list/index.tsx#L10",type:"undefined | false | true"}]},ImageListItemProps:{documentation:{contents:["<p>Indicates each item in an Image List.</p>\n"],contentsRaw:"Indicates each item in an Image List.",metadata:{}},fileName:"src/image-list/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"ImageListItemProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/image-list/index.tsx#L28",methods:[],properties:[]},ImageListImageAspectContainerProps:{documentation:{contents:["<p>Optional. Parent of each item\u2019s image element, responsible for constraining aspect ratio. This element may be omitted entirely if images are already sized to the correct aspect ratio.</p>\n"],contentsRaw:"Optional. Parent of each item\u2019s image element, responsible for constraining aspect ratio. This element may be omitted entirely if images are already sized to the correct aspect ratio.",metadata:{}},fileName:"src/image-list/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"ImageListImageAspectContainerProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/image-list/index.tsx#L38",methods:[],properties:[]},ImageListImageProps:{documentation:{contents:["<p>Indicates the image element in each item.</p>\n"],contentsRaw:"Indicates the image element in each item.",metadata:{}},fileName:"src/image-list/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"ImageListImageProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/image-list/index.tsx#L49",methods:[],properties:[]},ImageListSupportingProps:{documentation:{contents:["<p>Optional. Indicates the area within each item containing the supporting text label, if the Image List contains text labels.</p>\n"],contentsRaw:"Optional. Indicates the area within each item containing the supporting text label, if the Image List contains text labels.",metadata:{}},fileName:"src/image-list/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"ImageListSupportingProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/image-list/index.tsx#L59",methods:[],properties:[]},ImageListLabelProps:{documentation:{contents:["<p>Optional. Indicates the text label in each item, if the Image List contains text labels.</p>\n"],contentsRaw:"Optional. Indicates the text label in each item, if the Image List contains text labels.",metadata:{}},fileName:"src/image-list/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"ImageListLabelProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/image-list/index.tsx#L68",methods:[],properties:[]}}}},869:function(e,t,s){"use strict";s.r(t);var i=s(0),a=s.n(i),n=s(40),o=s(813),m=s(812),p=s(119);t.default=function(){return a.a.createElement(n.b,{title:"Image Lists",lead:"MDC Image List provides a RTL-aware Material Design image list component, representing an evolution of the Material Design Grid List spec. An Image List consists of several items, each containing an image and optionally supporting content (i.e. a text label).",module:"@rmwc/image-list",styles:["@material/image-list/dist/mdc.image-list.css"],docsLink:"https://material.io/develop/web/components/image-lists/",examples:m},a.a.createElement(n.f,null,"Standard Layout"),a.a.createElement(n.e,null,"Image Lists will give you basic layout, but you will have to use inline styling or CSS to achieve things like spacing, aspect ratio, and column count. Check out the inline styles below as examples."),a.a.createElement(n.c,{label:"Default"},a.a.createElement(p.a,null,["images/photos/3x2-1.jpg","images/photos/2x3-1.jpg","images/photos/3x2-4.jpg","images/photos/3x2-5.jpg","images/photos/3x2-6.jpg","images/photos/2x3-2.jpg","images/photos/3x2-8.jpg","images/photos/3x2-11.jpg","images/photos/2x3-5.jpg","images/photos/3x2-13.jpg","images/photos/3x2-14.jpg","images/photos/2x3-6.jpg","images/photos/3x2-15.jpg","images/photos/3x2-16.jpg","images/photos/2x3-7.jpg"].map(function(e){return a.a.createElement(p.d,{key:e,style:{margin:"2px",width:"calc(100% / 5 - 4.2px)"}},a.a.createElement(p.c,{style:{paddingBottom:"calc(100% / 1.5)"}},a.a.createElement(p.b,{src:e})),a.a.createElement(p.f,null,a.a.createElement(p.e,null,"Text label")))}))),a.a.createElement(n.f,null,"Masonry Layout"),a.a.createElement(n.c,null,a.a.createElement(p.a,{masonry:!0,withTextProtection:!0,style:{columnCount:5,columnGap:"16px",maxWidth:"1000px"}},["images/photos/3x2-1.jpg","images/photos/2x3-1.jpg","images/photos/3x2-4.jpg","images/photos/3x2-5.jpg","images/photos/2x3-5.jpg","images/photos/3x2-6.jpg","images/photos/2x3-2.jpg","images/photos/3x2-8.jpg","images/photos/3x2-11.jpg","images/photos/3x2-13.jpg","images/photos/3x2-14.jpg","images/photos/2x3-6.jpg","images/photos/3x2-15.jpg","images/photos/2x3-7.jpg","images/photos/3x2-16.jpg"].map(function(e){return a.a.createElement(p.d,{key:e,style:{marginBottom:"16px"}},a.a.createElement(p.b,{src:e}),a.a.createElement(p.f,null,a.a.createElement(p.e,null,"Text label")))}))),a.a.createElement(n.a,{src:o,components:[p.a,p.d,p.c,p.b,p.f,p.e]}))}}}]);
//# sourceMappingURL=20.e6695128.chunk.js.map