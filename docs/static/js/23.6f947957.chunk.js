(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{855:function(e){e.exports=["\n  import * as React from 'react';\n  import * as ReactDOM from 'react-dom';\n  import App from './App'; // your main app component\n  import { RMWCProvider } from '@rmwc/provider';\n\n  // This example disables ripples globally by default\n  ReactDOM.render(\n    <RMWCProvider\n      // Globally disable ripples\n      ripple={false}\n      // Global options for icons\n      // Takes the same options as the icon component\n      icon={{\n        basename: 'material-icons'\n      }}\n    >\n      <App />\n    </RMWCProvider>,\n    document.getElementById('root'),\n  );\n"]},856:function(e){e.exports={npm:{},typescript:{RMWCProviderProps:{documentation:{contents:["<p>A provider for setting global options in RMWC.</p>\n"],contentsRaw:"A provider for setting global options in RMWC.",metadata:{}},fileName:"src/provider/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"RMWCProviderProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/provider/index.tsx#L10",methods:[],properties:[{documentation:{contents:["<p>Children to render</p>\n"],contentsRaw:"Children to render",metadata:{}},fileName:"src/provider/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"children",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/provider/index.tsx#L16",type:"React.ReactNode"},{documentation:{contents:["<p>Global options for icons</p>\n"],contentsRaw:"Global options for icons",metadata:{}},fileName:"src/provider/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"icon",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/provider/index.tsx#L14",type:"Partial<IconOptions>"},{documentation:{contents:["<p>Set the buttons ripple effect globally</p>\n"],contentsRaw:"Set the buttons ripple effect globally",metadata:{}},fileName:"src/provider/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"ripple",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/provider/index.tsx#L12",type:"undefined | false | true"}]},DeprecatedRMWCProviderPropsT:{fileName:"src/provider/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"DeprecatedRMWCProviderPropsT",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/provider/index.tsx#L19",methods:[],properties:[{documentation:{contents:["<p>DEPRECATED: Ripples for all components are now controlled by the providers ripple prop</p>\n"],contentsRaw:"DEPRECATED: Ripples for all components are now controlled by the providers ripple prop",metadata:{}},fileName:"src/provider/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"buttonDefaultRipple",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/provider/index.tsx#L21",type:"undefined | false | true"},{documentation:{contents:["<p>DEPRECATED: Use the &#39;icon&#39; prop. icon={{basename: &#39;material-icons&#39;}}</p>\n"],contentsRaw:"DEPRECATED: Use the 'icon' prop. icon={{basename: 'material-icons'}}",metadata:{}},fileName:"src/provider/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"iconClassNameBase",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/provider/index.tsx#L25",type:"undefined | string"},{documentation:{contents:["<p>DEPRECATED: Use the &#39;icon&#39; prop. icon={{prefix: &#39;glyphicons-&#39;}}</p>\n"],contentsRaw:"DEPRECATED: Use the 'icon' prop. icon={{prefix: 'glyphicons-'}}",metadata:{}},fileName:"src/provider/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"iconClassNamePrefix",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/provider/index.tsx#L27",type:"undefined | string"},{documentation:{contents:["<p>DEPRECATED: Use the &#39;icon&#39; prop. icon={{render: () =&gt; <div />}}</p>\n"],contentsRaw:"DEPRECATED: Use the 'icon' prop. icon={{render: () => <div />}}",metadata:{}},fileName:"src/provider/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"iconRender",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/provider/index.tsx#L31",type:"undefined | (props: ) => React.ReactNode"},{documentation:{contents:["<p>DEPRECATED: Use the &#39;icon&#39; prop. icon={{strategy: &#39;className&#39;}}</p>\n"],contentsRaw:"DEPRECATED: Use the 'icon' prop. icon={{strategy: 'className'}}",metadata:{}},fileName:"src/provider/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"iconStrategy",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/provider/index.tsx#L29",type:"IconStrategyT"},{documentation:{contents:["<p>DEPRECATED: Ripples for all components are now controlled by the providers ripple prop</p>\n"],contentsRaw:"DEPRECATED: Ripples for all components are now controlled by the providers ripple prop",metadata:{}},fileName:"src/provider/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"listItemDefaultRipple",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/provider/index.tsx#L23",type:"undefined | false | true"}]},WithProviderContext:{fileName:"src/provider/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"WithProviderContext",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/provider/index.tsx#L49",methods:[],properties:[{fileName:"src/provider/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"providerContext",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/provider/index.tsx#L50",type:"RMWCProviderProps"}]}}}},892:function(e,t,i){"use strict";i.r(t);var r=i(0),o=i.n(r),s=i(40),n=i(856),a=i(855),p=i(37);t.default=function(){return o.a.createElement(s.b,{title:"Provider",lead:"A component that provides global configuration for RMWC.",module:"@rmwc/provider",styles:[],examples:a},o.a.createElement(s.e,null,"You can wrap your top level App component with RMWC provider to set global configuration options. Just pass the options in as props."),o.a.createElement(s.c,{codeOnly:!0},"\n          import * as React from 'react';\n          import * as ReactDOM from 'react-dom';\n          import App from './App'; // your main app component\n          import { RMWCProvider } from '@rmwc/provider';\n\n          // This example disables ripples globally by default\n          ReactDOM.render(\n            <RMWCProvider\n              // Globally disable ripples\n              ripple={false}\n              // Global options for icons\n              // Takes the same options as the icon component\n              icon={{\n                basename: 'material-icons'\n              }}\n            >\n              <App />\n            </RMWCProvider>,\n            document.getElementById('root'),\n          );\n        "),o.a.createElement(s.a,{src:n,components:[p.b]}))}}}]);
//# sourceMappingURL=23.6f947957.chunk.js.map