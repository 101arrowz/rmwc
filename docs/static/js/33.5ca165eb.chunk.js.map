{"version":3,"sources":["theme/readme.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_doc_utils__WEBPACK_IMPORTED_MODULE_1__","_generated_props_json__WEBPACK_IMPORTED_MODULE_2__","_generated_examples_json__WEBPACK_IMPORTED_MODULE_3__","___WEBPACK_IMPORTED_MODULE_4__","_button__WEBPACK_IMPORTED_MODULE_5__","_radio__WEBPACK_IMPORTED_MODULE_6__","_checkbox__WEBPACK_IMPORTED_MODULE_7__","_toolbar__WEBPACK_IMPORTED_MODULE_8__","_tabs__WEBPACK_IMPORTED_MODULE_9__","_tabs__WEBPACK_IMPORTED_MODULE_10__","a","createElement","title","lead","module","styles","docsLink","examples","Fragment","style","backgroundColor","map","theme","i","use","key","label","raised","defaultChecked","options","primary","secondary","onPrimary","textPrimaryOnBackground","onSurface","wrap","width","height","padding","src","propsSrc","components","ThemeProvider","Theme"],"mappings":"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","file":"static/js/33.5ca165eb.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Docs, DocsExample, DocProps, DocsP, DocsSubtitle } from '@doc-utils';\nimport propsSrc from './generated-props.json';\nimport examples from './generated-examples.json';\n\nimport { Theme, ThemeProvider } from '.';\nimport { Button } from '../button';\nimport { Radio } from '../radio';\nimport { Checkbox } from '../checkbox';\nimport { Toolbar, ToolbarRow } from '../toolbar';\nimport { Tab, TabBar } from '../tabs';\n\nexport default function() {\n  return (\n    <Docs\n      title=\"Theming\"\n      lead=\"MDC Theme is a foundational module that themes MDC Web components.\"\n      module=\"@rmwc/theme\"\n      styles={['@material/theme/dist/mdc.theme.css']}\n      docsLink=\"https://material.io/develop/web/components/theme/\"\n      examples={examples}\n    >\n      <DocsSubtitle>Theme Options</DocsSubtitle>\n      <DocsP>\n        **Important** You should include the theme style sheet BEFORE any of\n        your other styles.\n      </DocsP>\n\n      <DocsExample>\n        <>\n          <div style={{ backgroundColor: '#ddd' }}>\n            {[\n              'primary',\n              'secondary',\n              'error',\n              'background',\n              'surface',\n              'primaryBg',\n              'secondaryBg',\n              'textPrimaryOnBackground',\n              'textSecondaryOnBackground',\n              'textHintOnBackground',\n              'textDisabledOnBackground',\n              'textIconOnBackground',\n              'textPrimaryOnLight',\n              'textSecondaryOnLight',\n              'textHintOnLight',\n              'textDisabledOnLight',\n              'textIconOnLight'\n            ].map((theme, i) => (\n              // @ts-ignore\n              <Theme use={theme} key={i}>\n                {theme}\n              </Theme>\n            ))}\n          </div>\n          <div style={{ backgroundColor: '#333' }}>\n            {[\n              'onPrimary',\n              'onSecondary',\n              'onError',\n              'textPrimaryOnDark',\n              'textSecondaryOnDark',\n              'textHintOnDark',\n              'textDisabledOnDark',\n              'textIconOnDark'\n            ].map((theme, i) => (\n              // @ts-ignore\n              <Theme use={theme} key={i}>\n                {theme}\n              </Theme>\n            ))}\n          </div>\n        </>\n      </DocsExample>\n\n      <DocsSubtitle>ThemeProvider</DocsSubtitle>\n      <DocsP>\n        The `ThemeProvider` is an optional component that allows you to specify\n        theme colors and settings for all of its subtree. This is useful to use\n        once at the top of your app, or in parts of your app where the styles or\n        color scheme differ.\n      </DocsP>\n      <DocsP>\n        You don't have to pass in all options. The `ThemeProvider` will\n        automatically adjust some of the values like `onSurface` white or black\n        text depending on colors contrast ratio.\n      </DocsP>\n      <DocsP>\n        Theming in `material-components-web` isn't perfect, but a few basic\n        options will get you most of the way. Try using the ThemePicker at the\n        top and selecting \"Shrine\". You'll see that most things are colored\n        appropriately, but the defaults provided for things like Buttons and\n        tabs still have to have their colors overridden.\n      </DocsP>\n\n      <DocsExample label=\"Defaults\">\n        <>\n          <Button raised>Cookies</Button>\n          <Checkbox label=\"Pizza\" defaultChecked />\n          <Radio label=\"Icecream\" defaultChecked />\n        </>\n      </DocsExample>\n\n      <DocsExample label=\"With Provider\">\n        <ThemeProvider\n          options={{\n            primary: 'red',\n            secondary: 'blue'\n          }}\n        >\n          <Button raised>Cookies</Button>\n          <Checkbox label=\"Pizza\" defaultChecked />\n          <Radio label=\"Icecream\" defaultChecked />\n        </ThemeProvider>\n      </DocsExample>\n\n      <DocsExample label=\"More Options\">\n        <ThemeProvider\n          options={{\n            primary: 'lightpink',\n            secondary: 'black',\n            onPrimary: '#000',\n            textPrimaryOnBackground: 'black'\n          }}\n        >\n          <Button raised>Cookies</Button>\n          <Checkbox label=\"Pizza\" defaultChecked />\n          <Radio label=\"Icecream\" defaultChecked />\n        </ThemeProvider>\n      </DocsExample>\n\n      <DocsSubtitle>Using the ThemeProvider to fix broken styles</DocsSubtitle>\n      <DocsP>\n        As stated above, theming in `material-components-web` isn't perfect, but\n        the ThemeProvider can be used to conveniently fix some of the built in\n        style issues. For instance, the Tab bar doesn't respond correctly when\n        used in the TopAppBar or on any other dark color surface.\n      </DocsP>\n      <DocsExample label=\"Broken Styles\">\n        <Toolbar>\n          {/* Broken Tab Bar styles when used in Toolbar / TopAppBar */}\n          <ToolbarRow>\n            <TabBar>\n              <Tab>Cookies</Tab>\n              <Tab>Pizza</Tab>\n              <Tab>Icecream</Tab>\n            </TabBar>\n          </ToolbarRow>\n        </Toolbar>\n      </DocsExample>\n\n      <DocsExample label=\"Fixed Styles\">\n        <Toolbar>\n          {/* Fixed using ThemeProvider. Use \"wrap\" to not screw up layout with an extra div. */}\n          <ToolbarRow>\n            <ThemeProvider\n              options={{ primary: 'white', onSurface: 'white' }}\n              wrap\n            >\n              <TabBar>\n                <Tab>Cookies</Tab>\n                <Tab>Pizza</Tab>\n                <Tab>Icecream</Tab>\n              </TabBar>\n            </ThemeProvider>\n          </ToolbarRow>\n        </Toolbar>\n      </DocsExample>\n\n      <DocsSubtitle>Theme Component</DocsSubtitle>\n      <DocsP>\n        The Theme component allows you to apply theme colors to RMWC components,\n        or components of your own. Almost every component in RMWC has a `theme`\n        prop that you can use that takes the same options as the `Theme`\n        component's `use` prop.\n      </DocsP>\n      <DocsExample label=\"Custom\">\n        <Theme use={['primaryBg', 'onPrimary']} wrap>\n          {/* Add Theme colors to your own components. */}\n          <div style={{ width: '4rem', height: '4rem', padding: '1rem' }}>\n            Cookies\n          </div>\n        </Theme>\n      </DocsExample>\n      <DocsExample label=\"Theme Prop\">\n        <>\n          {/* These two examples are roughly equivalent. */}\n          <Theme use={['secondaryBg', 'onSecondary']} wrap>\n            <Button>Pizza</Button>\n          </Theme>\n\n          <Button theme={['secondaryBg', 'onSecondary']}>Pizza</Button>\n        </>\n      </DocsExample>\n      <DocsExample label=\"Typography\">\n        <>\n          {/* Text is one of the cases where `wrap` is not required. By default `Theme` will insert `span` tags. */}\n          <h3>\n            I <Theme use=\"primary\">Want</Theme>{' '}\n            <Theme use=\"secondary\">Icecream</Theme>\n          </h3>\n        </>\n      </DocsExample>\n\n      <DocProps src={propsSrc} components={[ThemeProvider, Theme]} />\n    </Docs>\n  );\n}\n"],"sourceRoot":""}