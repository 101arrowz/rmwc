(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{845:function(e){e.exports=["<>\n  <div style={{ backgroundColor: '#ddd' }}>\n    {[\n      'primary',\n      'secondary',\n      'error',\n      'background',\n      'surface',\n      'primaryBg',\n      'secondaryBg',\n      'textPrimaryOnBackground',\n      'textSecondaryOnBackground',\n      'textHintOnBackground',\n      'textDisabledOnBackground',\n      'textIconOnBackground',\n      'textPrimaryOnLight',\n      'textSecondaryOnLight',\n      'textHintOnLight',\n      'textDisabledOnLight',\n      'textIconOnLight'\n    ].map((theme, i) => (\n      <Theme use={theme} key={i}>\n        {theme}\n      </Theme>\n    ))}\n  </div>\n  <div style={{ backgroundColor: '#333' }}>\n    {[\n      'onPrimary',\n      'onSecondary',\n      'onError',\n      'textPrimaryOnDark',\n      'textSecondaryOnDark',\n      'textHintOnDark',\n      'textDisabledOnDark',\n      'textIconOnDark'\n    ].map((theme, i) => (\n      <Theme use={theme} key={i}>\n        {theme}\n      </Theme>\n    ))}\n  </div>\n</>",'<>\n  <Button raised>Cookies</Button>\n  <Checkbox label="Pizza" defaultChecked />\n  <Radio label="Icecream" defaultChecked />\n</>',"<ThemeProvider\n  options={{\n    primary: 'red',\n    secondary: 'blue'\n  }}\n>\n  <Button raised>Cookies</Button>\n  <Checkbox label=\"Pizza\" defaultChecked />\n  <Radio label=\"Icecream\" defaultChecked />\n</ThemeProvider>","<ThemeProvider\n  options={{\n    primary: 'lightpink',\n    secondary: 'black',\n    onPrimary: '#000',\n    textPrimaryOnBackground: 'black'\n  }}\n>\n  <Button raised>Cookies</Button>\n  <Checkbox label=\"Pizza\" defaultChecked />\n  <Radio label=\"Icecream\" defaultChecked />\n</ThemeProvider>","<Toolbar>\n  {/* Broken Tab Bar styles when used in Toolbar / TopAppBar */}\n  <ToolbarRow>\n    <TabBar>\n      <Tab>Cookies</Tab>\n      <Tab>Pizza</Tab>\n      <Tab>Icecream</Tab>\n    </TabBar>\n  </ToolbarRow>\n</Toolbar>","<Toolbar>\n  {/* Fixed using ThemeProvider. Use \"wrap\" to not screw up layout with an extra div. */}\n  <ToolbarRow>\n    <ThemeProvider\n      options={{ primary: 'white', onSurface: 'white' }}\n      wrap\n    >\n      <TabBar>\n        <Tab>Cookies</Tab>\n        <Tab>Pizza</Tab>\n        <Tab>Icecream</Tab>\n      </TabBar>\n    </ThemeProvider>\n  </ToolbarRow>\n</Toolbar>","<Theme use={['primaryBg', 'onPrimary']} wrap>\n  {/* Add Theme colors to your own components. */}\n  <div style={{ width: '4rem', height: '4rem', padding: '1rem' }}>\n    Cookies\n  </div>\n</Theme>","<>\n  {/* These two examples are roughly equivalent. */}\n  <Theme use={['secondaryBg', 'onSecondary']} wrap>\n    <Button>Pizza</Button>\n  </Theme>\n\n  <Button theme={['secondaryBg', 'onSecondary']}>Pizza</Button>\n</>",'<>\n  {/* Text is one of the cases where `wrap` is not required. By default `Theme` will insert `span` tags. */}\n  <h3>\n    I <Theme use="primary">Want</Theme>{\' \'}\n    <Theme use="secondary">Icecream</Theme>\n  </h3>\n</>']},846:function(e){e.exports={npm:{},typescript:{ThemeProvider:{documentation:{contents:["<p>A ThemeProvider. This sets theme colors for its child tree.</p>\n"],contentsRaw:"A ThemeProvider. This sets theme colors for its child tree.",metadata:{}},fileName:"src/theme/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"class",name:"ThemeProvider",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/99bf40822/src/theme/index.tsx#L56",extends:["Component<ThemeProviderProps>"],methods:[{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"UNSAFE_componentWillMount",inheritedFrom:"DeprecatedLifecycle.UNSAFE_componentWillMount",signatures:[{documentation:{contents:["<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"UNSAFE_componentWillMount",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"UNSAFE_componentWillReceiveProps",inheritedFrom:"DeprecatedLifecycle.UNSAFE_componentWillReceiveProps",signatures:[{documentation:{contents:["<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.</p>\n<p>Calling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"UNSAFE_componentWillReceiveProps",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<ThemeProviderProps>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<ThemeProviderProps>, nextContext: any) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"UNSAFE_componentWillUpdate",inheritedFrom:"DeprecatedLifecycle.UNSAFE_componentWillUpdate",signatures:[{documentation:{contents:["<p>Called immediately before rendering when new props or state is received. Not called for the initial render.</p>\n<p>Note: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"UNSAFE_componentWillUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<ThemeProviderProps>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextState",type:"Readonly<S>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<ThemeProviderProps>, nextState: Readonly<S>, nextContext: any) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentDidCatch",inheritedFrom:"ComponentLifecycle.componentDidCatch",signatures:[{documentation:{contents:["<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n"],contentsRaw:"Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentDidCatch",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"error",type:"Error"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"errorInfo",type:"ErrorInfo"}],returnType:"void",type:"(error: Error, errorInfo: ErrorInfo) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentDidMount",inheritedFrom:"ComponentLifecycle.componentDidMount",signatures:[{documentation:{contents:["<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n"],contentsRaw:"Called immediately after a component is mounted. Setting state here will trigger re-rendering.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentDidMount",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentDidUpdate",inheritedFrom:"NewLifecycle.componentDidUpdate",signatures:[{documentation:{contents:["<p>Called immediately after updating occurs. Not called for the initial render.</p>\n<p>The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n"],contentsRaw:"Called immediately after updating occurs. Not called for the initial render.\n\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentDidUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevProps",type:"Readonly<ThemeProviderProps>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevState",type:"Readonly<S>"},{flags:{isExported:!1,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"snapshot",type:"SS"}],returnType:"void",type:"(prevProps: Readonly<ThemeProviderProps>, prevState: Readonly<S>, snapshot?: SS) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillMount",inheritedFrom:"DeprecatedLifecycle.componentWillMount",signatures:[{documentation:{contents:["<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentWillMount",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillReceiveProps",inheritedFrom:"DeprecatedLifecycle.componentWillReceiveProps",signatures:[{documentation:{contents:["<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.</p>\n<p>Calling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentWillReceiveProps",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<ThemeProviderProps>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<ThemeProviderProps>, nextContext: any) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillUnmount",inheritedFrom:"ComponentLifecycle.componentWillUnmount",signatures:[{documentation:{contents:["<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n"],contentsRaw:"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentWillUnmount",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillUpdate",inheritedFrom:"DeprecatedLifecycle.componentWillUpdate",signatures:[{documentation:{contents:["<p>Called immediately before rendering when new props or state is received. Not called for the initial render.</p>\n<p>Note: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentWillUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<ThemeProviderProps>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextState",type:"Readonly<S>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<ThemeProviderProps>, nextState: Readonly<S>, nextContext: any) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"forceUpdate",inheritedFrom:"Component.forceUpdate",signatures:[{fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"forceUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"callBack",type:"undefined | () => void"}],returnType:"void",type:"(callBack?: undefined | () => void) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"getSnapshotBeforeUpdate",inheritedFrom:"NewLifecycle.getSnapshotBeforeUpdate",signatures:[{documentation:{contents:["<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n"],contentsRaw:"Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"getSnapshotBeforeUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevProps",type:"Readonly<ThemeProviderProps>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevState",type:"Readonly<S>"}],returnType:"SS | null",type:"(prevProps: Readonly<ThemeProviderProps>, prevState: Readonly<S>) => SS | null"}]},{fileName:"src/theme/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"render",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/99bf40822/src/theme/index.tsx#L85",signatures:[{fileName:"src/theme/index.tsx",kind:"signature",name:"render",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/99bf40822/src/theme/index.tsx#L85",parameters:[],returnType:"undefined | Element",type:"() => undefined | Element"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"setState",inheritedFrom:"Component.setState",signatures:[{fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"setState",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"state",type:"(prevState: Readonly<S>, props: Readonly<ThemeProviderProps>) => null | S |  | null | S | "},{flags:{isExported:!1,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"callback",type:"undefined | () => void"}],returnType:"void",type:"(state: (prevState: Readonly<S>, props: Readonly<ThemeProviderProps>) => null | S |  | null | S | , callback?: undefined | () => void) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"shouldComponentUpdate",inheritedFrom:"ComponentLifecycle.shouldComponentUpdate",signatures:[{documentation:{contents:["<p>Called to determine whether the change in props and state should trigger a re-render.</p>\n<p><code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n"],contentsRaw:"Called to determine whether the change in props and state should trigger a re-render.\n\n`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"shouldComponentUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<ThemeProviderProps>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextState",type:"Readonly<S>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"boolean",type:"(nextProps: Readonly<ThemeProviderProps>, nextState: Readonly<S>, nextContext: any) => boolean"}]}],properties:[{documentation:{contents:['<p>If set, <code>this.context</code> will be set at runtime to the current value of the given Context.</p>\n<p>Usage:</p>\n<pre><code class="lang-ts">type MyContext = number\nconst Ctx = React.createContext&lt;MyContext&gt;(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType&lt;typeof Ctx&gt;\n  render () {\n    return &lt;&gt;My context&#39;s value: {this.context}&lt;/&gt;;\n  }\n}\n</code></pre>\n',{tag:"see",value:"https://reactjs.org/docs/context.html#classcontexttype"}],contentsRaw:"If set, `this.context` will be set at runtime to the current value of the given Context.\n\nUsage:\n\n```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```\n\n\n@see https://reactjs.org/docs/context.html#classcontexttype",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!0},kind:"property",name:"contextType",inheritedFrom:"Component.contextType",type:"Context<any>"},{fileName:"src/theme/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!0},kind:"property",name:"displayName",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/99bf40822/src/theme/index.tsx#L57",defaultValue:'"ThemeProvider"',type:"string"},{fileName:"src/theme/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"colors_",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/99bf40822/src/theme/index.tsx#L60",type:""},{documentation:{contents:['<p>If using the new style context, re-declare this in your class to be the\n<code>React.ContextType</code> of your <code>static contextType</code>.</p>\n<pre><code class="lang-ts">static contextType = MyContext\ncontext!: React.ContextType&lt;typeof MyContext&gt;\n</code></pre>\n',{tag:"see",value:"https://reactjs.org/docs/legacy-context.html"}],contentsRaw:"If using the new style context, re-declare this in your class to be the\n`React.ContextType` of your `static contextType`.\n\n```ts\nstatic contextType = MyContext\ncontext!: React.ContextType<typeof MyContext>\n```\n\n\n@see https://reactjs.org/docs/legacy-context.html",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",flags:{isDeprecated:"if used without a type annotation, or without static contextType",isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"context",inheritedFrom:"Component.context",type:"any"},{fileName:"src/theme/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"prevOpts_",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/99bf40822/src/theme/index.tsx#L59",defaultValue:'""',type:"string"},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"props",inheritedFrom:"Component.props",type:"Readonly<ThemeProviderProps> & Readonly<>"},{documentation:{contents:[],contentsRaw:"",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",flags:{isDeprecated:"https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs",isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"refs",inheritedFrom:"Component.refs",type:"{ [key: string]: ReactInstance }"},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"state",inheritedFrom:"Component.state",type:"Readonly<S>"}],constructorType:{documentation:{contents:[{tag:"see",value:"https://reactjs.org/docs/legacy-context.html"}],contentsRaw:"@see https://reactjs.org/docs/legacy-context.html",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",flags:{isDeprecated:!0,isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"constructor",name:"constructor",inheritedFrom:"Component.__constructor",signatures:[{documentation:{contents:[],contentsRaw:"",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"new ThemeProvider",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"props",type:"Readonly<ThemeProviderProps>"}],returnType:"ThemeProvider",type:"(props: Readonly<ThemeProviderProps>) => ThemeProvider"},{documentation:{contents:[{tag:"see",value:"https://reactjs.org/docs/legacy-context.html"}],contentsRaw:"@see https://reactjs.org/docs/legacy-context.html",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"new ThemeProvider",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"props",type:"ThemeProviderProps"},{flags:{isExported:!1,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"context",type:"any"}],returnType:"ThemeProvider",type:"(props: ThemeProviderProps, context?: any) => ThemeProvider"}]}},ThemeProps:{documentation:{contents:["<p>A Theme Component.</p>\n"],contentsRaw:"A Theme Component.",metadata:{}},fileName:"src/theme/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"ThemeProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/99bf40822/src/theme/index.tsx#L18",methods:[],properties:[{documentation:{contents:["<p>A theme option as a string, a space separated string for multiple values, or an array of valid theme options.</p>\n"],contentsRaw:"A theme option as a string, a space separated string for multiple values, or an array of valid theme options.",metadata:{}},fileName:"src/theme/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"use",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/99bf40822/src/theme/index.tsx#L20",type:"RMWC.ThemePropT"},{documentation:{contents:["<p>Collapse the styles directly onto the child component. This eliminates the need for a wrapping <code>span</code> element and may be required for applying things like background-colors.</p>\n"],contentsRaw:"Collapse the styles directly onto the child component. This eliminates the need for a wrapping `span` element and may be required for applying things like background-colors.",metadata:{}},fileName:"src/theme/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"wrap",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/99bf40822/src/theme/index.tsx#L22",type:"undefined | false | true"}]},ThemeProviderProps:{documentation:{contents:["<p>A ThemeProvider. This sets theme colors for its child tree.</p>\n"],contentsRaw:"A ThemeProvider. This sets theme colors for its child tree.",metadata:{}},fileName:"src/theme/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"ThemeProviderProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/99bf40822/src/theme/index.tsx#L40",extends:[""],methods:[],properties:[{documentation:{contents:["<p>Children to render</p>\n"],contentsRaw:"Children to render",metadata:{}},fileName:"src/theme/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"children",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/99bf40822/src/theme/index.tsx#L52",type:"React.ReactNode"},{documentation:{contents:["<p>Any theme option pointing to a valid CSS value.</p>\n"],contentsRaw:"Any theme option pointing to a valid CSS value.",metadata:{}},fileName:"src/theme/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"options",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/99bf40822/src/theme/index.tsx#L46",type:"{ [key: string]: string }"},{documentation:{contents:["<p>Additional standard inline styles that will be merged into the style tag.</p>\n"],contentsRaw:"Additional standard inline styles that will be merged into the style tag.",metadata:{}},fileName:"src/theme/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"style",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/99bf40822/src/theme/index.tsx#L48",type:"Object"},{documentation:{contents:["<p>Instead of injecting a div tag, wrap a child component by merging the theme styles directly onto it. Useful when you don&#39;t want to mess with layout.</p>\n"],contentsRaw:"Instead of injecting a div tag, wrap a child component by merging the theme styles directly onto it. Useful when you don't want to mess with layout.",metadata:{}},fileName:"src/theme/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"wrap",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/99bf40822/src/theme/index.tsx#L50",type:"undefined | false | true"}]}}}},887:function(e,t,n){"use strict";n.r(t);var a=n(0),i=n.n(a),o=n(41),s=n(846),r=n(845),d=n(51),l=n(27),c=n(109),p=n(106),m=n(113),h=n(127),u=n(128);t.default=function(){return i.a.createElement(o.b,{title:"Theming",lead:"MDC Theme is a foundational module that themes MDC Web components.",module:"@rmwc/theme",styles:["@material/theme/dist/mdc.theme.css"],docsLink:"https://material.io/develop/web/components/theme/",examples:r},i.a.createElement(o.f,null,"Theme Options"),i.a.createElement(o.e,null,"**Important** You should include the theme style sheet BEFORE any of your other styles."),i.a.createElement(o.c,null,i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{style:{backgroundColor:"#ddd"}},["primary","secondary","error","background","surface","primaryBg","secondaryBg","textPrimaryOnBackground","textSecondaryOnBackground","textHintOnBackground","textDisabledOnBackground","textIconOnBackground","textPrimaryOnLight","textSecondaryOnLight","textHintOnLight","textDisabledOnLight","textIconOnLight"].map(function(e,t){return i.a.createElement(d.a,{use:e,key:t},e)})),i.a.createElement("div",{style:{backgroundColor:"#333"}},["onPrimary","onSecondary","onError","textPrimaryOnDark","textSecondaryOnDark","textHintOnDark","textDisabledOnDark","textIconOnDark"].map(function(e,t){return i.a.createElement(d.a,{use:e,key:t},e)})))),i.a.createElement(o.f,null,"ThemeProvider"),i.a.createElement(o.e,null,"The `ThemeProvider` is an optional component that allows you to specify theme colors and settings for all of its subtree. This is useful to use once at the top of your app, or in parts of your app where the styles or color scheme differ."),i.a.createElement(o.e,null,"You don't have to pass in all options. The `ThemeProvider` will automatically adjust some of the values like `onSurface` white or black text depending on colors contrast ratio."),i.a.createElement(o.e,null,"Theming in `material-components-web` isn't perfect, but a few basic options will get you most of the way. Try using the ThemePicker at the top and selecting \"Shrine\". You'll see that most things are colored appropriately, but the defaults provided for things like Buttons and tabs still have to have their colors overridden."),i.a.createElement(o.c,{label:"Defaults"},i.a.createElement(i.a.Fragment,null,i.a.createElement(l.a,{raised:!0},"Cookies"),i.a.createElement(p.a,{label:"Pizza",defaultChecked:!0}),i.a.createElement(c.a,{label:"Icecream",defaultChecked:!0}))),i.a.createElement(o.c,{label:"With Provider"},i.a.createElement(d.b,{options:{primary:"red",secondary:"blue"}},i.a.createElement(l.a,{raised:!0},"Cookies"),i.a.createElement(p.a,{label:"Pizza",defaultChecked:!0}),i.a.createElement(c.a,{label:"Icecream",defaultChecked:!0}))),i.a.createElement(o.c,{label:"More Options"},i.a.createElement(d.b,{options:{primary:"lightpink",secondary:"black",onPrimary:"#000",textPrimaryOnBackground:"black"}},i.a.createElement(l.a,{raised:!0},"Cookies"),i.a.createElement(p.a,{label:"Pizza",defaultChecked:!0}),i.a.createElement(c.a,{label:"Icecream",defaultChecked:!0}))),i.a.createElement(o.f,null,"Using the ThemeProvider to fix broken styles"),i.a.createElement(o.e,null,"As stated above, theming in `material-components-web` isn't perfect, but the ThemeProvider can be used to conveniently fix some of the built in style issues. For instance, the Tab bar doesn't respond correctly when used in the TopAppBar or on any other dark color surface."),i.a.createElement(o.c,{label:"Broken Styles"},i.a.createElement(m.a,null,i.a.createElement(m.e,null,i.a.createElement(h.a,null,i.a.createElement(u.a,null,"Cookies"),i.a.createElement(u.a,null,"Pizza"),i.a.createElement(u.a,null,"Icecream"))))),i.a.createElement(o.c,{label:"Fixed Styles"},i.a.createElement(m.a,null,i.a.createElement(m.e,null,i.a.createElement(d.b,{options:{primary:"white",onSurface:"white"},wrap:!0},i.a.createElement(h.a,null,i.a.createElement(u.a,null,"Cookies"),i.a.createElement(u.a,null,"Pizza"),i.a.createElement(u.a,null,"Icecream")))))),i.a.createElement(o.f,null,"Theme Component"),i.a.createElement(o.e,null,"The Theme component allows you to apply theme colors to RMWC components, or components of your own. Almost every component in RMWC has a `theme` prop that you can use that takes the same options as the `Theme` component's `use` prop."),i.a.createElement(o.c,{label:"Custom"},i.a.createElement(d.a,{use:["primaryBg","onPrimary"],wrap:!0},i.a.createElement("div",{style:{width:"4rem",height:"4rem",padding:"1rem"}},"Cookies"))),i.a.createElement(o.c,{label:"Theme Prop"},i.a.createElement(i.a.Fragment,null,i.a.createElement(d.a,{use:["secondaryBg","onSecondary"],wrap:!0},i.a.createElement(l.a,null,"Pizza")),i.a.createElement(l.a,{theme:["secondaryBg","onSecondary"]},"Pizza"))),i.a.createElement(o.c,{label:"Typography"},i.a.createElement(i.a.Fragment,null,i.a.createElement("h3",null,"I ",i.a.createElement(d.a,{use:"primary"},"Want")," ",i.a.createElement(d.a,{use:"secondary"},"Icecream")))),i.a.createElement(o.a,{src:s,components:[d.b,d.a]}))}}}]);
//# sourceMappingURL=33.9ca1e59d.chunk.js.map