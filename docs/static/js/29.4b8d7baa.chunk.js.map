{"version":3,"sources":["snackbar/readme.tsx"],"names":["__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_doc_utils__WEBPACK_IMPORTED_MODULE_2__","title","lead","module","styles","docsLink","examples","label","_React$useState","React","useState","_React$useState2","Object","_Users_jamesmfriedman_Sites_rmwc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","open","setOpen","Fragment","___WEBPACK_IMPORTED_MODULE_5__","onClose","evt","message","action","onClick","console","log","_rmwc_button__WEBPACK_IMPORTED_MODULE_6__","raised","_React$useState3","_React$useState4","stacked","leading","timeout","src","propsSrc","components","Snackbar","SnackbarAction"],"mappings":"ox5CASeA,EAAA,mBACb,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAM,YACNC,KAAK,qGACLC,OAAO,iBACPC,OAAQ,CACN,2CACA,wCAEFC,SAAS,wDACTC,SAAUA,GAEVT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaO,MAAM,WAChB,WAAmB,IAAAC,EACMC,IAAMC,UAAS,GADrBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACXM,EADWH,EAAA,GACLI,EADKJ,EAAA,GAGlB,OACEd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkB,SAAA,KACEnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEH,KAAMA,EACNI,QAAS,SAAAC,GAAG,OAAIJ,GAAQ,IACxBK,QAAQ,wBACRC,OACExB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEV,MAAM,UACNe,QAAS,kBAAMC,QAAQC,IAAI,iBAKjC3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACEC,QAAM,EACNnB,MAAM,gBACNe,QAAS,SAAAH,GAAG,OAAIJ,GAASD,SAOnCjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaO,MAAM,iBAChB,WAAmB,IAAAoB,EACMlB,IAAMC,UAAS,GADrBkB,EAAAhB,OAAAC,EAAA,EAAAD,CAAAe,EAAA,GACXb,EADWc,EAAA,GACLb,EADKa,EAAA,GAGlB,OACE/B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkB,SAAA,KACEnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEH,KAAMA,EACNI,QAAS,SAAAC,GAAG,OAAIJ,GAAQ,IACxBK,QAAQ,gBACRS,SAAO,EACPR,OAAQ,CACNxB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAgBV,MAAM,UACtBV,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAgBV,MAAM,WAExBuB,SAAO,EACPC,QAAS,MAGXlC,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACEC,QAAM,EACNnB,MAAM,qBACNe,QAAS,SAAAH,GAAG,OAAIJ,GAASD,SAOnCjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUgC,IAAKC,EAAUC,WAAY,CAACC,IAAUC","file":"static/js/29.4b8d7baa.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Docs, DocsExample, DocProps } from '@doc-utils';\nimport propsSrc from './generated-props.json';\nimport examples from './generated-examples.json';\n\nimport { Snackbar, SnackbarAction } from '.';\nimport { Button } from '@rmwc/button';\n\nexport default function() {\n  return (\n    <Docs\n      title=\"Snackbars\"\n      lead=\"Snackbars provide brief feedback about an operation through a message at the bottom of the screen.\"\n      module=\"@rmwc/snackbar\"\n      styles={[\n        '@material/snackbar/dist/mdc.snackbar.css',\n        '@material/button/dist/mdc.button.css'\n      ]}\n      docsLink=\"https://material.io/develop/web/components/snackbars/\"\n      examples={examples}\n    >\n      <DocsExample label=\"Default\">\n        {function Example() {\n          const [open, setOpen] = React.useState(false);\n\n          return (\n            <>\n              <Snackbar\n                open={open}\n                onClose={evt => setOpen(false)}\n                message=\"This is a new message\"\n                action={\n                  <SnackbarAction\n                    label=\"Dismiss\"\n                    onClick={() => console.log('Click Me')}\n                  />\n                }\n              />\n\n              <Button\n                raised\n                label=\"Show snackbar\"\n                onClick={evt => setOpen(!open)}\n              />\n            </>\n          );\n        }}\n      </DocsExample>\n\n      <DocsExample label=\"Start Aligned\">\n        {function Example() {\n          const [open, setOpen] = React.useState(false);\n\n          return (\n            <>\n              <Snackbar\n                open={open}\n                onClose={evt => setOpen(false)}\n                message=\"Start aligned\"\n                stacked\n                action={[\n                  <SnackbarAction label=\"Yeah!\" />,\n                  <SnackbarAction label=\"No...\" />\n                ]}\n                leading\n                timeout={10000}\n              />\n\n              <Button\n                raised\n                label=\"Show start-aligned\"\n                onClick={evt => setOpen(!open)}\n              />\n            </>\n          );\n        }}\n      </DocsExample>\n\n      <DocProps src={propsSrc} components={[Snackbar, SnackbarAction]} />\n    </Docs>\n  );\n}\n"],"sourceRoot":""}