(this["webpackJsonprmwc-main"]=this["webpackJsonprmwc-main"]||[]).push([[7],{1002:function(e,t,n){"use strict";n.r(t);var a=n(21),i=n(5),c=n(8),l=n(0),r=n.n(l),s=n(1),m=n(166),o=n(996),L=n(61),u=n(13),d=n(22),I=n(37),k=n(59),E=n(49);t.default=function(){return r.a.createElement(s.b,{title:"Lists",lead:"Lists are continuous, vertical indexes of text or images.",module:"@rmwc/list",styles:["@material/list/dist/mdc.list.css"],docsLink:"https://material.io/develop/web/components/lists/",examples:o},r.a.createElement(s.f,null,"Two Line"),r.a.createElement(s.e,null,"When using the `twoLine` prop, you have to wrap the contents of the `ListItem` in `ListItemText`."),r.a.createElement(s.c,null,r.a.createElement(L.a,{twoLine:!0},r.a.createElement(u.d,null,r.a.createElement(u.i,null,r.a.createElement(u.g,null,"Cookies"),r.a.createElement(u.h,null,"$4.99 a dozen"))),r.a.createElement(u.d,null,r.a.createElement(u.i,null,r.a.createElement(u.g,null,"Pizza"),r.a.createElement(u.h,null,"$1.99 a slice"))),r.a.createElement(u.d,null,r.a.createElement(u.i,null,r.a.createElement(u.g,null,"Icecream"),r.a.createElement(u.h,null,"$0.99 a scoop"))))),r.a.createElement(s.f,null,"Leading and Trailing Icons"),r.a.createElement(s.c,null,r.a.createElement(L.a,null,r.a.createElement(u.d,null,r.a.createElement(u.e,{icon:"favorite"}),"Leading"),r.a.createElement(u.d,null,"Trailing",r.a.createElement(u.f,{icon:"star"})),r.a.createElement(u.d,null,r.a.createElement(u.e,{icon:"wifi"}),"Leading and Trailing",r.a.createElement(u.f,{icon:"info"})),r.a.createElement(u.d,null,r.a.createElement(u.e,{icon:"wifi"}),"Leading with Trailing Text",r.a.createElement(u.f,null,"HELLO!")))),r.a.createElement(s.f,null,"Avatar List with Dividers"),r.a.createElement(s.c,null,r.a.createElement(L.a,{twoLine:!0,avatarList:!0},r.a.createElement(u.b,null,r.a.createElement(u.d,null,r.a.createElement(u.e,{icon:r.a.createElement(d.a,{src:"images/avatars/blackwidow.png",size:"xsmall",name:"Natalia Alianovna Romanova"})}),"Natalia Alianovna Romanova",r.a.createElement(u.f,{icon:"info"})),r.a.createElement(u.d,null,r.a.createElement(u.e,{icon:r.a.createElement(d.a,{src:"images/avatars/hulk.png",size:"small",name:"Bruce Banner"})}),"Bruce Banner",r.a.createElement(u.f,{icon:"info"}))),r.a.createElement(u.a,null),r.a.createElement(u.b,null,r.a.createElement(u.d,null,r.a.createElement(u.e,{icon:r.a.createElement(d.a,{src:"images/avatars/thor.png",size:"medium",name:"Thor Odinson"})}),"Thor Odinson",r.a.createElement(u.f,{icon:"info"}))))),r.a.createElement(s.f,null,"Selectable"),r.a.createElement(s.e,null,"Checkboxes and Radios can be included as part of `ListItemMeta`. It is recommended when using these that you are using controlled components, and that you put your interaction handler on the `ListItem` itself. Notice the `readOnly` prop is also set on the individual form elements."),r.a.createElement(s.c,{label:"Checkboxes"},(function(){var e=r.a.useState({Cookies:!1,Pizza:!1,Icecream:!1}),t=Object(c.a)(e,2),n=t[0],l=t[1];return r.a.createElement(L.a,null,["Cookies","Pizza","Icecream"].map((function(e){return r.a.createElement(u.d,{key:e,onClick:function(){return l(Object(i.a)({},n,Object(a.a)({},e,!n[e])))}},e,r.a.createElement(u.f,null,r.a.createElement(I.a,{checked:n[e],readOnly:!0})))})))})),r.a.createElement(s.c,{label:"Switches"},(function(){var e=r.a.useState({Cookies:!1,Pizza:!1,Icecream:!1}),t=Object(c.a)(e,2),n=t[0],l=t[1];return r.a.createElement(L.a,null,["Cookies","Pizza","Icecream"].map((function(e){return r.a.createElement(u.d,{key:e,onClick:function(){return l(Object(i.a)({},n,Object(a.a)({},e,!n[e])))}},e,r.a.createElement(u.f,null,r.a.createElement(k.a,{checked:n[e],readOnly:!0})))})))})),r.a.createElement(s.c,{label:"Radios"},(function(){var e=r.a.useState("Cookies"),t=Object(c.a)(e,2),n=t[0],a=t[1];return r.a.createElement(L.a,null,["Cookies","Pizza","Icecream"].map((function(e){return r.a.createElement(u.d,{key:e,onClick:function(){return a(e)}},e,r.a.createElement(u.f,null,r.a.createElement(E.a,{checked:n===e,readOnly:!0})))})))})),r.a.createElement(s.a,{src:m,components:[L.a,u.d,u.g,u.h,u.e,u.f,u.a,u.b,u.c,u.j]}))}},996:function(e){e.exports=JSON.parse('["<List twoLine>\\n  <ListItem>\\n    <ListItemText>\\n      <ListItemPrimaryText>Cookies</ListItemPrimaryText>\\n      <ListItemSecondaryText>$4.99 a dozen</ListItemSecondaryText>\\n    </ListItemText>\\n  </ListItem>\\n  <ListItem>\\n    <ListItemText>\\n      <ListItemPrimaryText>Pizza</ListItemPrimaryText>\\n      <ListItemSecondaryText>$1.99 a slice</ListItemSecondaryText>\\n    </ListItemText>\\n  </ListItem>\\n  <ListItem>\\n    <ListItemText>\\n      <ListItemPrimaryText>Icecream</ListItemPrimaryText>\\n      <ListItemSecondaryText>$0.99 a scoop</ListItemSecondaryText>\\n    </ListItemText>\\n  </ListItem>\\n</List>","<List>\\n  <ListItem>\\n    <ListItemGraphic icon=\\"favorite\\" />\\n    Leading\\n  </ListItem>\\n  <ListItem>\\n    Trailing\\n    <ListItemMeta icon=\\"star\\" />\\n  </ListItem>\\n  <ListItem>\\n    <ListItemGraphic icon=\\"wifi\\" />\\n    Leading and Trailing\\n    <ListItemMeta icon=\\"info\\" />\\n  </ListItem>\\n  <ListItem>\\n    <ListItemGraphic icon=\\"wifi\\" />\\n    Leading with Trailing Text\\n    <ListItemMeta>HELLO!</ListItemMeta>\\n  </ListItem>\\n</List>","<List twoLine avatarList>\\n  <ListGroup>\\n    <ListItem>\\n      <ListItemGraphic\\n        icon={\\n          <Avatar\\n            src=\\"images/avatars/blackwidow.png\\"\\n            size=\\"xsmall\\"\\n            name=\\"Natalia Alianovna Romanova\\"\\n          />\\n        }\\n      />\\n      Natalia Alianovna Romanova\\n      <ListItemMeta icon=\\"info\\" />\\n    </ListItem>\\n    <ListItem>\\n      <ListItemGraphic\\n        icon={\\n          <Avatar\\n            src=\\"images/avatars/hulk.png\\"\\n            size=\\"small\\"\\n            name=\\"Bruce Banner\\"\\n          />\\n        }\\n      />\\n      Bruce Banner\\n      <ListItemMeta icon=\\"info\\" />\\n    </ListItem>\\n  </ListGroup>\\n  <ListDivider />\\n  <ListGroup>\\n    <ListItem>\\n      <ListItemGraphic\\n        icon={\\n          <Avatar\\n            src=\\"images/avatars/thor.png\\"\\n            size=\\"medium\\"\\n            name=\\"Thor Odinson\\"\\n          />\\n        }\\n      />\\n      Thor Odinson\\n      <ListItemMeta icon=\\"info\\" />\\n    </ListItem>\\n  </ListGroup>\\n</List>","function Example() {\\n  const [checked, setChecked] = React.useState({\\n    Cookies: false,\\n    Pizza: false,\\n    Icecream: false\\n  });\\n\\n  return (\\n    <List>\\n      {[\'Cookies\', \'Pizza\', \'Icecream\'].map(key => (\\n        <ListItem\\n          key={key}\\n          onClick={() =>\\n            setChecked({ ...checked, [key]: !checked[key] })\\n          }\\n        >\\n          {key}\\n          <ListItemMeta>\\n            <Checkbox checked={checked[key]} readOnly />\\n          </ListItemMeta>\\n        </ListItem>\\n      ))}\\n    </List>\\n  );\\n}","function Example() {\\n  const [checked, setChecked] = React.useState({\\n    Cookies: false,\\n    Pizza: false,\\n    Icecream: false\\n  });\\n\\n  return (\\n    <List>\\n      {[\'Cookies\', \'Pizza\', \'Icecream\'].map(key => (\\n        <ListItem\\n          key={key}\\n          onClick={() =>\\n            setChecked({ ...checked, [key]: !checked[key] })\\n          }\\n        >\\n          {key}\\n          <ListItemMeta>\\n            <Switch checked={checked[key]} readOnly />\\n          </ListItemMeta>\\n        </ListItem>\\n      ))}\\n    </List>\\n  );\\n}","function Example() {\\n  const [checked, setChecked] = React.useState(\'Cookies\');\\n\\n  return (\\n    <List>\\n      {[\'Cookies\', \'Pizza\', \'Icecream\'].map(key => (\\n        <ListItem key={key} onClick={() => setChecked(key)}>\\n          {key}\\n          <ListItemMeta>\\n            <Radio checked={checked === key} readOnly />\\n          </ListItemMeta>\\n        </ListItem>\\n      ))}\\n    </List>\\n  );\\n}"]')}}]);
//# sourceMappingURL=7.b4da8d76.chunk.js.map