(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{832:function(e){e.exports=["<CircularProgress />","<>\n  <CircularProgress progress={0.3} />\n  <CircularProgress progress={0.6} />\n  <CircularProgress progress={0.9} />\n</>",'<>\n  <CircularProgress size="xsmall" />\n  <CircularProgress size="small" />\n  <CircularProgress size="medium" />\n  <CircularProgress size="large" />\n  <CircularProgress size="xlarge" />\n  <CircularProgress size={72} />\n</>','<>\n  <Button\n    icon={<CircularProgress theme="secondary" />}\n    label="Cookies"\n  />\n\n  <List>\n    <SimpleListItem graphic={<CircularProgress />} text="Pizza" />\n    <SimpleListItem graphic="favorite" text="Icecream" />\n  </List>\n\n  <Chip icon={<CircularProgress />} label="Donuts" />\n</>']},833:function(e){e.exports={npm:{},typescript:{CircularProgress:{documentation:{contents:["<p>A Circular Progress indicator.</p>\n"],contentsRaw:"A Circular Progress indicator.",metadata:{}},fileName:"src/circular-progress/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"class",name:"CircularProgress",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/circular-progress/index.tsx#L46",extends:["Component<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>"],methods:[{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"UNSAFE_componentWillMount",inheritedFrom:"DeprecatedLifecycle.UNSAFE_componentWillMount",signatures:[{documentation:{contents:["<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"UNSAFE_componentWillMount",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"UNSAFE_componentWillReceiveProps",inheritedFrom:"DeprecatedLifecycle.UNSAFE_componentWillReceiveProps",signatures:[{documentation:{contents:["<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.</p>\n<p>Calling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"UNSAFE_componentWillReceiveProps",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>, nextContext: any) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"UNSAFE_componentWillUpdate",inheritedFrom:"DeprecatedLifecycle.UNSAFE_componentWillUpdate",signatures:[{documentation:{contents:["<p>Called immediately before rendering when new props or state is received. Not called for the initial render.</p>\n<p>Note: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"UNSAFE_componentWillUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextState",type:"Readonly<S>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>, nextState: Readonly<S>, nextContext: any) => void"}]},{fileName:"src/circular-progress/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"calculateRatio",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/circular-progress/index.tsx#L56",signatures:[{fileName:"src/circular-progress/index.tsx",kind:"signature",name:"calculateRatio",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/circular-progress/index.tsx#L56",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"value",type:"number"}],returnType:"number",type:"(value: number) => number"}]},{fileName:"src/circular-progress/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"circularStyle",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/circular-progress/index.tsx#L64",signatures:[{fileName:"src/circular-progress/index.tsx",kind:"signature",name:"circularStyle",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/circular-progress/index.tsx#L64",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"size",type:"number"}],returnType:"undefined | ",type:"(size: number) => undefined | "}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentDidCatch",inheritedFrom:"ComponentLifecycle.componentDidCatch",signatures:[{documentation:{contents:["<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n"],contentsRaw:"Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentDidCatch",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"error",type:"Error"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"errorInfo",type:"ErrorInfo"}],returnType:"void",type:"(error: Error, errorInfo: ErrorInfo) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentDidMount",inheritedFrom:"ComponentLifecycle.componentDidMount",signatures:[{documentation:{contents:["<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n"],contentsRaw:"Called immediately after a component is mounted. Setting state here will trigger re-rendering.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentDidMount",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentDidUpdate",inheritedFrom:"NewLifecycle.componentDidUpdate",signatures:[{documentation:{contents:["<p>Called immediately after updating occurs. Not called for the initial render.</p>\n<p>The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n"],contentsRaw:"Called immediately after updating occurs. Not called for the initial render.\n\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentDidUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevProps",type:"Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevState",type:"Readonly<S>"},{flags:{isExported:!1,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"snapshot",type:"SS"}],returnType:"void",type:"(prevProps: Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>, prevState: Readonly<S>, snapshot?: SS) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillMount",inheritedFrom:"DeprecatedLifecycle.componentWillMount",signatures:[{documentation:{contents:["<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentWillMount",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillReceiveProps",inheritedFrom:"DeprecatedLifecycle.componentWillReceiveProps",signatures:[{documentation:{contents:["<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.</p>\n<p>Calling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentWillReceiveProps",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>, nextContext: any) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillUnmount",inheritedFrom:"ComponentLifecycle.componentWillUnmount",signatures:[{documentation:{contents:["<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n"],contentsRaw:"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentWillUnmount",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillUpdate",inheritedFrom:"DeprecatedLifecycle.componentWillUpdate",signatures:[{documentation:{contents:["<p>Called immediately before rendering when new props or state is received. Not called for the initial render.</p>\n<p>Note: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentWillUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextState",type:"Readonly<S>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>, nextState: Readonly<S>, nextContext: any) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"forceUpdate",inheritedFrom:"Component.forceUpdate",signatures:[{fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"forceUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"callBack",type:"undefined | () => void"}],returnType:"void",type:"(callBack?: undefined | () => void) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"getSnapshotBeforeUpdate",inheritedFrom:"NewLifecycle.getSnapshotBeforeUpdate",signatures:[{documentation:{contents:["<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n"],contentsRaw:"Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"getSnapshotBeforeUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevProps",type:"Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevState",type:"Readonly<S>"}],returnType:"SS | null",type:"(prevProps: Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>, prevState: Readonly<S>) => SS | null"}]},{fileName:"src/circular-progress/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"render",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/circular-progress/index.tsx#L75",signatures:[{fileName:"src/circular-progress/index.tsx",kind:"signature",name:"render",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/circular-progress/index.tsx#L75",parameters:[],returnType:"Element",type:"() => Element"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"setState",inheritedFrom:"Component.setState",signatures:[{fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"setState",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"state",type:"(prevState: Readonly<S>, props: Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>) => null | S |  | null | S | "},{flags:{isExported:!1,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"callback",type:"undefined | () => void"}],returnType:"void",type:"(state: (prevState: Readonly<S>, props: Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>) => null | S |  | null | S | , callback?: undefined | () => void) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"shouldComponentUpdate",inheritedFrom:"ComponentLifecycle.shouldComponentUpdate",signatures:[{documentation:{contents:["<p>Called to determine whether the change in props and state should trigger a re-render.</p>\n<p><code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n"],contentsRaw:"Called to determine whether the change in props and state should trigger a re-render.\n\n`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"shouldComponentUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextState",type:"Readonly<S>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"boolean",type:"(nextProps: Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>, nextState: Readonly<S>, nextContext: any) => boolean"}]}],properties:[{documentation:{contents:['<p>If set, <code>this.context</code> will be set at runtime to the current value of the given Context.</p>\n<p>Usage:</p>\n<pre><code class="lang-ts">type MyContext = number\nconst Ctx = React.createContext&lt;MyContext&gt;(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType&lt;typeof Ctx&gt;\n  render () {\n    return &lt;&gt;My context&#39;s value: {this.context}&lt;/&gt;;\n  }\n}\n</code></pre>\n',{tag:"see",value:"https://reactjs.org/docs/context.html#classcontexttype"}],contentsRaw:"If set, `this.context` will be set at runtime to the current value of the given Context.\n\nUsage:\n\n```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```\n\n\n@see https://reactjs.org/docs/context.html#classcontexttype",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!0},kind:"property",name:"contextType",inheritedFrom:"Component.contextType",type:"Context<any>"},{fileName:"src/circular-progress/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!0},kind:"property",name:"displayName",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/circular-progress/index.tsx#L49",defaultValue:'"CircularProgress"',type:"string"},{documentation:{contents:['<p>If using the new style context, re-declare this in your class to be the\n<code>React.ContextType</code> of your <code>static contextType</code>.</p>\n<pre><code class="lang-ts">static contextType = MyContext\ncontext!: React.ContextType&lt;typeof MyContext&gt;\n</code></pre>\n',{tag:"see",value:"https://reactjs.org/docs/legacy-context.html"}],contentsRaw:"If using the new style context, re-declare this in your class to be the\n`React.ContextType` of your `static contextType`.\n\n```ts\nstatic contextType = MyContext\ncontext!: React.ContextType<typeof MyContext>\n```\n\n\n@see https://reactjs.org/docs/legacy-context.html",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",flags:{isDeprecated:"if used without a type annotation, or without static contextType",isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"context",inheritedFrom:"Component.context",type:"any"},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"props",inheritedFrom:"Component.props",type:"Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>> & Readonly<>"},{documentation:{contents:[],contentsRaw:"",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",flags:{isDeprecated:"https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs",isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"refs",inheritedFrom:"Component.refs",type:"{ [key: string]: ReactInstance }"},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"state",inheritedFrom:"Component.state",type:"Readonly<S>"}],constructorType:{documentation:{contents:[{tag:"see",value:"https://reactjs.org/docs/legacy-context.html"}],contentsRaw:"@see https://reactjs.org/docs/legacy-context.html",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",flags:{isDeprecated:!0,isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"constructor",name:"constructor",inheritedFrom:"Component.__constructor",signatures:[{documentation:{contents:[],contentsRaw:"",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"new CircularProgress",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"props",type:"Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>"}],returnType:"CircularProgress",type:"(props: Readonly<RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>>) => CircularProgress"},{documentation:{contents:[{tag:"see",value:"https://reactjs.org/docs/legacy-context.html"}],contentsRaw:"@see https://reactjs.org/docs/legacy-context.html",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"new CircularProgress",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"props",type:"RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>"},{flags:{isExported:!1,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"context",type:"any"}],returnType:"CircularProgress",type:"(props: RMWC.MergeInterfacesT<CircularProgressProps, ComponentProps>, context?: any) => CircularProgress"}]}},CircularProgressProps:{documentation:{contents:["<p>A Circular Progress indicator.</p>\n"],contentsRaw:"A Circular Progress indicator.",metadata:{}},fileName:"src/circular-progress/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"CircularProgressProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/circular-progress/index.tsx#L14",methods:[],properties:[{documentation:{contents:["<p>Max value for determinate progress bars.</p>\n"],contentsRaw:"Max value for determinate progress bars.",metadata:{}},fileName:"src/circular-progress/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"max",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/circular-progress/index.tsx#L16",type:"undefined | number"},{documentation:{contents:["<p>Min value for determinate progress bars.</p>\n"],contentsRaw:"Min value for determinate progress bars.",metadata:{}},fileName:"src/circular-progress/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"min",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/circular-progress/index.tsx#L18",type:"undefined | number"},{documentation:{contents:["<p>Value for determinate progress bars.</p>\n"],contentsRaw:"Value for determinate progress bars.",metadata:{}},fileName:"src/circular-progress/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"progress",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/circular-progress/index.tsx#L20",type:"undefined | number"},{documentation:{contents:["<p>The size of the loader you would like to render.</p>\n"],contentsRaw:"The size of the loader you would like to render.",metadata:{}},fileName:"src/circular-progress/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"size",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/40cb74678/src/circular-progress/index.tsx#L22",type:'"xsmall" | "small" | "medium" | "large" | "xlarge" | number'}]}}}},879:function(e,t,n){"use strict";n.r(t);var s=n(0),r=n.n(s),i=n(40),a=n(833),o=n(832),c=n(69),d=n(27),p=n(83),l=n(60),m=n(108);t.default=function(){return r.a.createElement(i.b,{title:"Circular Progress",lead:"Circular progress indicators display progress by animating an indicator along an invisible circular track in a clockwise direction. They can be applied directly to a surface, such as a button or card.",module:"@rmwc/circular-progress",styles:["@rmwc/circular-progress/circular-progress.css"],examples:o,addon:!0},r.a.createElement(i.f,null,"Basic Usage"),r.a.createElement(i.c,{label:"Indeterminate"},r.a.createElement(c.a,null)),r.a.createElement(i.c,{label:"Progress"},r.a.createElement(r.a.Fragment,null,r.a.createElement(c.a,{progress:.3}),r.a.createElement(c.a,{progress:.6}),r.a.createElement(c.a,{progress:.9}))),r.a.createElement(i.f,null,"Sizing"),r.a.createElement(i.c,{label:"Sizes"},r.a.createElement(r.a.Fragment,null,r.a.createElement(c.a,{size:"xsmall"}),r.a.createElement(c.a,{size:"small"}),r.a.createElement(c.a,{size:"medium"}),r.a.createElement(c.a,{size:"large"}),r.a.createElement(c.a,{size:"xlarge"}),r.a.createElement(c.a,{size:72}))),r.a.createElement(i.f,null,"Usage with other components"),r.a.createElement(i.c,null,r.a.createElement(r.a.Fragment,null,r.a.createElement(d.a,{icon:r.a.createElement(c.a,{theme:"secondary"}),label:"Cookies"}),r.a.createElement(p.a,null,r.a.createElement(l.j,{graphic:r.a.createElement(c.a,null),text:"Pizza"}),r.a.createElement(l.j,{graphic:"favorite",text:"Icecream"})),r.a.createElement(m.a,{icon:r.a.createElement(c.a,null),label:"Donuts"}))),r.a.createElement(i.a,{src:a,components:[c.a]}))}}}]);
//# sourceMappingURL=9.c1b1b16d.chunk.js.map