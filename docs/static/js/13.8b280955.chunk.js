(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{808:function(e){e.exports=["<>\n  {Array(25)\n    .fill(undefined)\n    .map((val, i) => (\n      <Elevation z={i} key={i}>\n        {i}dp\n      </Elevation>\n    ))}\n</>","function Example() {\n  const [elevation, setElevation] = React.useState(0);\n\n  return (\n    <Elevation\n      z={elevation}\n      transition\n      onMouseOver={() => setElevation(24)}\n      onMouseOut={() => setElevation(0)}\n    >\n      Hover Me {elevation}dp\n    </Elevation>\n  );\n}","<Elevation z={21} wrap>\n  <span>Wrapped!</span>\n</Elevation>"]},809:function(e){e.exports={npm:{},typescript:{ElevationProps:{documentation:{contents:["<p>The Elevation Component</p>\n"],contentsRaw:"The Elevation Component",metadata:{}},fileName:"src/elevation/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"ElevationProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/e655eca89/src/elevation/index.tsx#L6",methods:[],properties:[{documentation:{contents:["<p>Allows for smooth transitions between elevations when the z value changes.</p>\n"],contentsRaw:"Allows for smooth transitions between elevations when the z value changes.",metadata:{}},fileName:"src/elevation/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"transition",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/e655eca89/src/elevation/index.tsx#L10",type:"undefined | false | true"},{documentation:{contents:["<p>Allows the elevation classes to be merged onto the child component instead of creating an new DOM node.</p>\n"],contentsRaw:"Allows the elevation classes to be merged onto the child component instead of creating an new DOM node.",metadata:{}},fileName:"src/elevation/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"wrap",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/e655eca89/src/elevation/index.tsx#L12",type:"undefined | false | true"},{documentation:{contents:["<p>A number from 0 - 24 for different levels of elevation</p>\n"],contentsRaw:"A number from 0 - 24 for different levels of elevation",metadata:{}},fileName:"src/elevation/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"z",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/e655eca89/src/elevation/index.tsx#L8",type:"number | string"}]}}}},867:function(e,t,n){"use strict";n.r(t);var a=n(31),i=n(0),o=n.n(i),s=n(41),l=n(809),r=n(808),c=n(116);t.default=function(){return o.a.createElement(s.b,{title:"Elevation",lead:"Elevation is the relative distance between two surfaces along the z-axis.",module:"@rmwc/elevation",styles:["@material/elevation/dist/mdc.elevation.css"],docsLink:"https://material.io/develop/web/components/elevation/",examples:r},o.a.createElement(s.c,{label:"Elevation"},o.a.createElement(o.a.Fragment,null,Array(25).fill(void 0).map(function(e,t){return o.a.createElement(c.a,{z:t,key:t},t,"dp")}))),o.a.createElement(s.c,{label:"Transition"},function(){var e=o.a.useState(0),t=Object(a.a)(e,2),n=t[0],i=t[1];return o.a.createElement(c.a,{z:n,transition:!0,onMouseOver:function(){return i(24)},onMouseOut:function(){return i(0)}},"Hover Me ",n,"dp")}),o.a.createElement(s.f,null,"Wrapping Children"),o.a.createElement(s.e,null,'You can avoid adding extra DOM nodes by using the `wrap` prop on elevation. This will apply the classes directly to the child component. Additionally, Elevation is simply a `className`, so you can achieve the same effect by adding `className="mdc-elevation--z15"`.'),o.a.createElement(s.c,null,o.a.createElement(c.a,{z:21,wrap:!0},o.a.createElement("span",null,"Wrapped!"))),o.a.createElement(s.a,{src:l,components:[c.a]}))}}}]);
//# sourceMappingURL=13.8b280955.chunk.js.map