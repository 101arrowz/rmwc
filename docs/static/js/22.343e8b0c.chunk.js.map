{"version":3,"sources":["menu/readme.tsx"],"names":["__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_doc_utils__WEBPACK_IMPORTED_MODULE_2__","title","lead","module","styles","docsLink","examples","_React$useState","React","useState","_React$useState2","Object","_Users_jamesmfriedman_Sites_rmwc_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","open","setOpen","___WEBPACK_IMPORTED_MODULE_5__","___WEBPACK_IMPORTED_MODULE_6__","onSelect","evt","console","log","detail","index","onClose","_list__WEBPACK_IMPORTED_MODULE_7__","_button__WEBPACK_IMPORTED_MODULE_8__","raised","onClick","_React$useState3","_React$useState4","style","padding","width","_React$useState5","_React$useState6","_icon_button__WEBPACK_IMPORTED_MODULE_10__","icon","handle","_React$useState7","_React$useState8","anchorCorner","setAnchorCorner","Fragment","label","_select__WEBPACK_IMPORTED_MODULE_9__","value","onChange","currentTarget","options","src","propsSrc","components","Menu","MenuItem","MenuSurface","MenuSurfaceAnchor","SimpleMenu","SimpleMenuSurface"],"mappings":"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","file":"static/js/22.343e8b0c.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Docs, DocsExample, DocProps, DocsSubtitle, DocsP } from '@doc-utils';\nimport propsSrc from './generated-props.json';\nimport examples from './generated-examples.json';\n\nimport {\n  Menu,\n  MenuItem,\n  MenuSurface,\n  MenuSurfaceAnchor,\n  SimpleMenu,\n  SimpleMenuSurface\n} from '.';\n\nimport { ListDivider } from '../list';\nimport { Button } from '../button';\nimport { Select } from '../select';\nimport { IconButton } from '../icon-button';\n\nexport default function() {\n  return (\n    <Docs\n      title=\"Menus\"\n      lead=\"Menus display a list of choices on a transient sheet of material.\"\n      module=\"@rmwc/menu\"\n      styles={[\n        '@material/menu/dist/mdc.menu.css',\n        '@material/menu-surface/dist/mdc.menu-surface.css',\n        '@material/list/dist/mdc.list.css'\n      ]}\n      docsLink=\"https://material.io/develop/web/components/menus/\"\n      examples={examples}\n    >\n      <DocsSubtitle>Basic Usage</DocsSubtitle>\n      <DocsP>\n        You can compose a menu with the given components, and manually manage\n        the open state. `Menu` expects MenuItems as children while `MenuSurface`\n        is a generic container which can have anything as a child.\n      </DocsP>\n\n      <DocsExample>\n        {function Example() {\n          const [open, setOpen] = React.useState(false);\n\n          return (\n            <MenuSurfaceAnchor>\n              <Menu\n                open={open}\n                onSelect={evt => console.log(evt.detail.index)}\n                onClose={evt => setOpen(false)}\n              >\n                <MenuItem>Cookies</MenuItem>\n                <MenuItem>Pizza</MenuItem>\n                {/** MenuItem is just a ListItem, so you can intermingle other List components */}\n                <ListDivider />\n                <MenuItem>Icecream</MenuItem>\n              </Menu>\n\n              <Button raised onClick={evt => setOpen(!open)}>\n                Menu\n              </Button>\n            </MenuSurfaceAnchor>\n          );\n        }}\n      </DocsExample>\n\n      <DocsExample>\n        {function Example() {\n          const [open, setOpen] = React.useState(false);\n\n          return (\n            <MenuSurfaceAnchor>\n              <MenuSurface open={open} onClose={evt => setOpen(false)}>\n                <div style={{ padding: '1rem', width: '8rem' }}>\n                  Make the content whatever you want.\n                </div>\n              </MenuSurface>\n\n              <Button raised onClick={evt => setOpen(!open)}>\n                Menu Surface\n              </Button>\n            </MenuSurfaceAnchor>\n          );\n        }}\n      </DocsExample>\n\n      <DocsExample>\n        {function Example() {\n          const [open, setOpen] = React.useState(false);\n\n          return (\n            <MenuSurfaceAnchor>\n              <MenuSurface open={open} onClose={evt => setOpen(false)}>\n                <div style={{ padding: '1rem', width: '8rem' }}>Menu</div>\n              </MenuSurface>\n              {/** The handle can be any component you want */}\n              <IconButton icon=\"menu\" onClick={evt => setOpen(!open)} />\n            </MenuSurfaceAnchor>\n          );\n        }}\n      </DocsExample>\n\n      <DocsSubtitle>Simplified usage</DocsSubtitle>\n      <DocsP>\n        RMWC provides a convenience `SimpleMenu` component that takes a handle\n        as a prop, and manages the open state for you.\n      </DocsP>\n\n      <DocsExample>\n        <SimpleMenu handle={<Button>Simple Menu</Button>}>\n          <MenuItem>Cookies</MenuItem>\n          <MenuItem>Pizza</MenuItem>\n          <MenuItem>Icecream</MenuItem>\n        </SimpleMenu>\n      </DocsExample>\n\n      <DocsExample>\n        <SimpleMenuSurface handle={<Button>Simple Menu Surface</Button>}>\n          <div style={{ padding: '1rem', width: '8rem' }}>\n            Make the content whatever you want.\n          </div>\n        </SimpleMenuSurface>\n      </DocsExample>\n\n      <DocsSubtitle>Anchoring</DocsSubtitle>\n      <DocsP>\n        By default, Menus will attempt to automatically position themselves, but\n        this behavior can be overriden by setting the `anchorCorner` prop.\n      </DocsP>\n\n      <DocsExample>\n        {function Example() {\n          const [anchorCorner, setAnchorCorner] = React.useState<any>(\n            'topLeft'\n          );\n\n          return (\n            <>\n              <MenuSurfaceAnchor>\n                <MenuSurface anchorCorner={anchorCorner} open={true}>\n                  <div style={{ padding: '1rem', width: '8rem' }}>\n                    anchorCorner: {anchorCorner}\n                  </div>\n                </MenuSurface>\n                <Button raised label=\"Anchored Menu\" />\n              </MenuSurfaceAnchor>\n\n              <Select\n                value={anchorCorner}\n                label=\"anchorCorner\"\n                onChange={evt => setAnchorCorner(evt.currentTarget.value)}\n                options={[\n                  'topLeft',\n                  'topRight',\n                  'bottomLeft',\n                  'bottomRight',\n                  'topStart',\n                  'topEnd',\n                  'bottomStart',\n                  'bottomEnd'\n                ]}\n              />\n            </>\n          );\n        }}\n      </DocsExample>\n\n      <DocProps\n        src={propsSrc}\n        components={[\n          Menu,\n          MenuItem,\n          MenuSurface,\n          MenuSurfaceAnchor,\n          SimpleMenu,\n          SimpleMenuSurface\n        ]}\n      />\n    </Docs>\n  );\n}\n"],"sourceRoot":""}