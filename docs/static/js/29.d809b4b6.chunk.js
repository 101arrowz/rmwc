(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{842:function(e){e.exports=['function Example() {\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <Snackbar\n        open={open}\n        onClose={evt => setOpen(false)}\n        message="This is a new message"\n        action={\n          <SnackbarAction\n            label="Dismiss"\n            onClick={() => console.log(\'Click Me\')}\n          />\n        }\n      />\n\n      <Button\n        raised\n        label="Show snackbar"\n        onClick={evt => setOpen(!open)}\n      />\n    </>\n  );\n}','function Example() {\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <Snackbar\n        open={open}\n        onClose={evt => setOpen(false)}\n        message="Start aligned"\n        stacked\n        action={[\n          <SnackbarAction label="Yeah!" />,\n          <SnackbarAction label="No..." />\n        ]}\n        leading\n        timeout={10000}\n      />\n\n      <Button\n        raised\n        label="Show start-aligned"\n        onClick={evt => setOpen(!open)}\n      />\n    </>\n  );\n}',"\n// Create a file that exports your queue\n// myQueue.js\nimport { createSnackbarQueue } from '@rmwc/snackbar';\n\nexport const queue = createSnackbarQueue()","\n// Somewhere at the top level of your app\n// Render the SnackbarQueue\nimport React from 'react';\nimport { queue } from './myQueue';\n\nexport default function App() {\n  return (\n    <div>\n      ...\n      <SnackbarQueue\n        messages={queue.messages}\n        // You can also pass default options to pass to your notifications\n        // ie, make them all leading, stacked, etc\n        leading\n        stacked\n      />\n    </div>\n  )\n}","\n// Somewhere else in your app\n// Could be a view, your redux store, anywhere you want...\nimport { queue } from './myQueue';\n\n// Simple example\nqueue.notify({\n  title: 'Hi there'\n});\n\n// With some features\nqueue.notify({\n  title: <b>Warning</b>,\n  body: 'You have selected pizza instead icecream!',\n  icon: 'warning',\n  actions: [\n    {\n      // NotificationAction api format\n      title: 'Fix It!',\n      icon: 'close',\n      action: 'fixit' // action will be available as evt.detail.reason in the onClose event\n    },\n    {\n      // OR SnackbarActionProps format\n      label: 'Continue...',\n      icon: 'check',\n      onClick: () => {}\n    },\n  ]\n})","() => {\n  const { messages, notify } = createSnackbarQueue();\n\n  function App() {\n    return (\n      <div>\n        <Button\n          label=\"Notify\"\n          onClick={() =>\n            notify({\n              title: <b>Success</b>,\n              body: 'You have selected pizza!',\n              icon: 'check',\n              actions: [\n                {\n                  title: 'Dismiss'\n                }\n              ]\n            })\n          }\n        />\n        <SnackbarQueue messages={messages} />\n      </div>\n    );\n  }\n  return <App />;\n}"]},843:function(e){e.exports={npm:{},typescript:{Snackbar:{documentation:{contents:["<p>A Snackbar component for notifications.</p>\n"],contentsRaw:"A Snackbar component for notifications.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"class",name:"Snackbar",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L133",extends:["FoundationComponent<MDCSnackbarFoundation, SnackbarProps & DeprecatedSnackbarProps>"],methods:[{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"UNSAFE_componentWillMount",inheritedFrom:"DeprecatedLifecycle.UNSAFE_componentWillMount",signatures:[{documentation:{contents:["<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"UNSAFE_componentWillMount",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"UNSAFE_componentWillReceiveProps",inheritedFrom:"DeprecatedLifecycle.UNSAFE_componentWillReceiveProps",signatures:[{documentation:{contents:["<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.</p>\n<p>Calling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"UNSAFE_componentWillReceiveProps",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<FoundationPropsT<SnackbarProps & DeprecatedSnackbarProps>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<FoundationPropsT<SnackbarProps & DeprecatedSnackbarProps>>, nextContext: any) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"UNSAFE_componentWillUpdate",inheritedFrom:"DeprecatedLifecycle.UNSAFE_componentWillUpdate",signatures:[{documentation:{contents:["<p>Called immediately before rendering when new props or state is received. Not called for the initial render.</p>\n<p>Note: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"UNSAFE_componentWillUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<FoundationPropsT<SnackbarProps & DeprecatedSnackbarProps>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextState",type:"Readonly<FoundationStateT<S>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<FoundationPropsT<SnackbarProps & DeprecatedSnackbarProps>>, nextState: Readonly<FoundationStateT<S>>, nextContext: any) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentDidCatch",inheritedFrom:"ComponentLifecycle.componentDidCatch",signatures:[{documentation:{contents:["<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n"],contentsRaw:"Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentDidCatch",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"error",type:"Error"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"errorInfo",type:"ErrorInfo"}],returnType:"void",type:"(error: Error, errorInfo: ErrorInfo) => void"}]},{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentDidMount",inheritedFrom:"FoundationComponent.componentDidMount",signatures:[{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",kind:"signature",name:"componentDidMount",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentDidUpdate",inheritedFrom:"FoundationComponent.componentDidUpdate",signatures:[{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",kind:"signature",name:"componentDidUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevProps",type:"FoundationPropsT<SnackbarProps & DeprecatedSnackbarProps>"}],returnType:"void",type:"(prevProps: FoundationPropsT<SnackbarProps & DeprecatedSnackbarProps>) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillMount",inheritedFrom:"DeprecatedLifecycle.componentWillMount",signatures:[{documentation:{contents:["<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentWillMount",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillReceiveProps",inheritedFrom:"DeprecatedLifecycle.componentWillReceiveProps",signatures:[{documentation:{contents:["<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.</p>\n<p>Calling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentWillReceiveProps",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<FoundationPropsT<SnackbarProps & DeprecatedSnackbarProps>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<FoundationPropsT<SnackbarProps & DeprecatedSnackbarProps>>, nextContext: any) => void"}]},{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillUnmount",inheritedFrom:"FoundationComponent.componentWillUnmount",signatures:[{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",kind:"signature",name:"componentWillUnmount",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillUpdate",inheritedFrom:"DeprecatedLifecycle.componentWillUpdate",signatures:[{documentation:{contents:["<p>Called immediately before rendering when new props or state is received. Not called for the initial render.</p>\n<p>Note: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentWillUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<FoundationPropsT<SnackbarProps & DeprecatedSnackbarProps>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextState",type:"Readonly<FoundationStateT<S>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<FoundationPropsT<SnackbarProps & DeprecatedSnackbarProps>>, nextState: Readonly<FoundationStateT<S>>, nextContext: any) => void"}]},{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"createElement",inheritedFrom:"FoundationComponent.createElement",signatures:[{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",kind:"signature",name:"createElement",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"elementName",type:"string"}],returnType:"FoundationElement<ExtractProps<ElementType>, ElementType>",type:"(elementName: string) => FoundationElement<ExtractProps<ElementType>, ElementType>"}]},{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"emit",inheritedFrom:"FoundationComponent.emit",signatures:[{documentation:{contents:["<p>Fires a cross-browser-compatible custom event from the component root of the given type,</p>\n"],contentsRaw:"Fires a cross-browser-compatible custom event from the component root of the given type,",metadata:{}},fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",kind:"signature",name:"emit",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"evtType",type:"string"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"evtData",type:"any"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"shouldBubble",defaultValue:"false",type:"boolean"}],returnType:"CustomEvent<any>",type:"(evtType: string, evtData: any, shouldBubble?: boolean) => CustomEvent<any>"}]},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"getDefaultFoundation",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L155",signatures:[{fileName:"src/snackbar/snackbar.tsx",kind:"signature",name:"getDefaultFoundation",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L155",parameters:[],returnType:"MDCSnackbarFoundation",type:"() => MDCSnackbarFoundation"}]},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"getPropsWithDeprecations",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L187",signatures:[{fileName:"src/snackbar/snackbar.tsx",kind:"signature",name:"getPropsWithDeprecations",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L187",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"props",type:"SnackbarProps"}],returnType:"any",type:"(props: SnackbarProps) => any"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"getSnapshotBeforeUpdate",inheritedFrom:"NewLifecycle.getSnapshotBeforeUpdate",signatures:[{documentation:{contents:["<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n"],contentsRaw:"Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"getSnapshotBeforeUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevProps",type:"Readonly<FoundationPropsT<SnackbarProps & DeprecatedSnackbarProps>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevState",type:"Readonly<FoundationStateT<S>>"}],returnType:"SS | null",type:"(prevProps: Readonly<FoundationPropsT<SnackbarProps & DeprecatedSnackbarProps>>, prevState: Readonly<FoundationStateT<S>>) => SS | null"}]},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"handleKeyDown",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L204",signatures:[{fileName:"src/snackbar/snackbar.tsx",kind:"signature",name:"handleKeyDown",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L204",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"evt",type:"KeyboardEvent & KeyboardEvent"}],returnType:"void",type:"(evt: KeyboardEvent & KeyboardEvent) => void"}]},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"handleSurfaceClick",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L209",signatures:[{fileName:"src/snackbar/snackbar.tsx",kind:"signature",name:"handleSurfaceClick",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L209",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"evt",type:"MouseEvent | MouseEvent"}],returnType:"void",type:"(evt: MouseEvent | MouseEvent) => void"}]},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"render",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L232",signatures:[{fileName:"src/snackbar/snackbar.tsx",kind:"signature",name:"render",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L232",parameters:[],returnType:"Element",type:"() => Element"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"shouldComponentUpdate",inheritedFrom:"ComponentLifecycle.shouldComponentUpdate",signatures:[{documentation:{contents:["<p>Called to determine whether the change in props and state should trigger a re-render.</p>\n<p><code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n"],contentsRaw:"Called to determine whether the change in props and state should trigger a re-render.\n\n`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"shouldComponentUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<FoundationPropsT<SnackbarProps & DeprecatedSnackbarProps>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextState",type:"Readonly<FoundationStateT<S>>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"boolean",type:"(nextProps: Readonly<FoundationPropsT<SnackbarProps & DeprecatedSnackbarProps>>, nextState: Readonly<FoundationStateT<S>>, nextContext: any) => boolean"}]},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"sync",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L170",signatures:[{fileName:"src/snackbar/snackbar.tsx",kind:"signature",name:"sync",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L170",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"props",type:"SnackbarProps"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevProps",type:"SnackbarProps"}],returnType:"void",type:"(props: SnackbarProps, prevProps: SnackbarProps) => void"}]},{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"syncProp",inheritedFrom:"FoundationComponent.syncProp",signatures:[{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",kind:"signature",name:"syncProp",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prop",type:"any"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevProp",type:"any"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"callback",type:"() => void"}],returnType:"void",type:"(prop: any, prevProp: any, callback: () => void) => void"}]},{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"update",inheritedFrom:"FoundationComponent.update",signatures:[{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",kind:"signature",name:"update",parameters:[],returnType:"void",type:"() => void"}]}],properties:[{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!0},kind:"property",name:"displayName",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L137",defaultValue:'"Snackbar"',type:"string"},{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!0},kind:"property",name:"shouldDebounce",defaultValue:"false",inheritedFrom:"FoundationComponent.shouldDebounce",type:"boolean"},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"announce",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L153",defaultValue:" util.announce",type:"announce"},{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"elements",inheritedFrom:"FoundationComponent.elements",type:"{ [key: string]: FoundationElement<any, any> }"},{fileName:"src/snackbar/node_modules/@rmwc/button/node_modules/@rmwc/base/foundation-component.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"foundation",inheritedFrom:"FoundationComponent.foundation",type:"MDCSnackbarFoundation"},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"isShowing_",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L150",defaultValue:"false",type:"boolean"},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"labelEl",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L151",defaultValue:" null",type:"HTMLElement | null"},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"show",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L152",type:"any"}],constructorType:{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"constructor",name:"constructor",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L140",signatures:[{fileName:"src/snackbar/snackbar.tsx",kind:"signature",name:"new Snackbar",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L140",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"props",type:"SnackbarProps"}],returnType:"Snackbar",type:"(props: SnackbarProps) => Snackbar"}]}},SnackbarQueue:{documentation:{contents:["<p>A snackbar queue for rendering messages</p>\n"],contentsRaw:"A snackbar queue for rendering messages",metadata:{}},fileName:"src/snackbar/snackbar-queue.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"class",name:"SnackbarQueue",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar-queue.tsx#L66",extends:["Component<SnackbarQueueProps, SnackbarQueueState>"],methods:[{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"UNSAFE_componentWillMount",inheritedFrom:"DeprecatedLifecycle.UNSAFE_componentWillMount",signatures:[{documentation:{contents:["<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"UNSAFE_componentWillMount",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"UNSAFE_componentWillReceiveProps",inheritedFrom:"DeprecatedLifecycle.UNSAFE_componentWillReceiveProps",signatures:[{documentation:{contents:["<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.</p>\n<p>Calling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"UNSAFE_componentWillReceiveProps",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<SnackbarQueueProps>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<SnackbarQueueProps>, nextContext: any) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"UNSAFE_componentWillUpdate",inheritedFrom:"DeprecatedLifecycle.UNSAFE_componentWillUpdate",signatures:[{documentation:{contents:["<p>Called immediately before rendering when new props or state is received. Not called for the initial render.</p>\n<p>Note: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"UNSAFE_componentWillUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<SnackbarQueueProps>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextState",type:"Readonly<SnackbarQueueState>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<SnackbarQueueProps>, nextState: Readonly<SnackbarQueueState>, nextContext: any) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentDidCatch",inheritedFrom:"ComponentLifecycle.componentDidCatch",signatures:[{documentation:{contents:["<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n"],contentsRaw:"Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentDidCatch",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"error",type:"Error"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"errorInfo",type:"ErrorInfo"}],returnType:"void",type:"(error: Error, errorInfo: ErrorInfo) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentDidMount",inheritedFrom:"ComponentLifecycle.componentDidMount",signatures:[{documentation:{contents:["<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n"],contentsRaw:"Called immediately after a component is mounted. Setting state here will trigger re-rendering.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentDidMount",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentDidUpdate",inheritedFrom:"NewLifecycle.componentDidUpdate",signatures:[{documentation:{contents:["<p>Called immediately after updating occurs. Not called for the initial render.</p>\n<p>The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n"],contentsRaw:"Called immediately after updating occurs. Not called for the initial render.\n\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentDidUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevProps",type:"Readonly<SnackbarQueueProps>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevState",type:"Readonly<SnackbarQueueState>"},{flags:{isExported:!1,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"snapshot",type:"SS"}],returnType:"void",type:"(prevProps: Readonly<SnackbarQueueProps>, prevState: Readonly<SnackbarQueueState>, snapshot?: SS) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillMount",inheritedFrom:"DeprecatedLifecycle.componentWillMount",signatures:[{documentation:{contents:["<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentWillMount",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillReceiveProps",inheritedFrom:"DeprecatedLifecycle.componentWillReceiveProps",signatures:[{documentation:{contents:["<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.</p>\n<p>Calling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentWillReceiveProps",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<SnackbarQueueProps>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<SnackbarQueueProps>, nextContext: any) => void"}]},{fileName:"src/snackbar/snackbar-queue.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillUnmount",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar-queue.tsx#L80",signatures:[{fileName:"src/snackbar/snackbar-queue.tsx",kind:"signature",name:"componentWillUnmount",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar-queue.tsx#L80",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"componentWillUpdate",inheritedFrom:"DeprecatedLifecycle.componentWillUpdate",signatures:[{documentation:{contents:["<p>Called immediately before rendering when new props or state is received. Not called for the initial render.</p>\n<p>Note: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n",{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{tag:"see",value:"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"}],contentsRaw:"Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\n@see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"componentWillUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<SnackbarQueueProps>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextState",type:"Readonly<SnackbarQueueState>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"void",type:"(nextProps: Readonly<SnackbarQueueProps>, nextState: Readonly<SnackbarQueueState>, nextContext: any) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"forceUpdate",inheritedFrom:"Component.forceUpdate",signatures:[{fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"forceUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"callBack",type:"undefined | () => void"}],returnType:"void",type:"(callBack?: undefined | () => void) => void"}]},{fileName:"src/snackbar/snackbar-queue.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"getMessage",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar-queue.tsx#L84",signatures:[{fileName:"src/snackbar/snackbar-queue.tsx",kind:"signature",name:"getMessage",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar-queue.tsx#L84",parameters:[],returnType:"void",type:"() => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"getSnapshotBeforeUpdate",inheritedFrom:"NewLifecycle.getSnapshotBeforeUpdate",signatures:[{documentation:{contents:["<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n"],contentsRaw:"Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"getSnapshotBeforeUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevProps",type:"Readonly<SnackbarQueueProps>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"prevState",type:"Readonly<SnackbarQueueState>"}],returnType:"SS | null",type:"(prevProps: Readonly<SnackbarQueueProps>, prevState: Readonly<SnackbarQueueState>) => SS | null"}]},{fileName:"src/snackbar/snackbar-queue.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"removeMessage",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar-queue.tsx#L92",signatures:[{fileName:"src/snackbar/snackbar-queue.tsx",kind:"signature",name:"removeMessage",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar-queue.tsx#L92",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"message",type:"SnackbarQueueMessage"}],returnType:"void",type:"(message?: SnackbarQueueMessage) => void"}]},{fileName:"src/snackbar/snackbar-queue.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"render",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar-queue.tsx#L107",signatures:[{fileName:"src/snackbar/snackbar-queue.tsx",kind:"signature",name:"render",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar-queue.tsx#L107",parameters:[],returnType:"Element",type:"() => Element"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"setState",inheritedFrom:"Component.setState",signatures:[{fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"setState",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"state",type:"(prevState: Readonly<SnackbarQueueState>, props: Readonly<SnackbarQueueProps>) => null | S |  | null | S | "},{flags:{isExported:!1,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"callback",type:"undefined | () => void"}],returnType:"void",type:"(state: (prevState: Readonly<SnackbarQueueState>, props: Readonly<SnackbarQueueProps>) => null | S |  | null | S | , callback?: undefined | () => void) => void"}]},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"method",name:"shouldComponentUpdate",inheritedFrom:"ComponentLifecycle.shouldComponentUpdate",signatures:[{documentation:{contents:["<p>Called to determine whether the change in props and state should trigger a re-render.</p>\n<p><code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n"],contentsRaw:"Called to determine whether the change in props and state should trigger a re-render.\n\n`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",kind:"signature",name:"shouldComponentUpdate",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextProps",type:"Readonly<SnackbarQueueProps>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextState",type:"Readonly<SnackbarQueueState>"},{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"nextContext",type:"any"}],returnType:"boolean",type:"(nextProps: Readonly<SnackbarQueueProps>, nextState: Readonly<SnackbarQueueState>, nextContext: any) => boolean"}]}],properties:[{documentation:{contents:['<p>If set, <code>this.context</code> will be set at runtime to the current value of the given Context.</p>\n<p>Usage:</p>\n<pre><code class="lang-ts">type MyContext = number\nconst Ctx = React.createContext&lt;MyContext&gt;(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType&lt;typeof Ctx&gt;\n  render () {\n    return &lt;&gt;My context&#39;s value: {this.context}&lt;/&gt;;\n  }\n}\n</code></pre>\n',{tag:"see",value:"https://reactjs.org/docs/context.html#classcontexttype"}],contentsRaw:"If set, `this.context` will be set at runtime to the current value of the given Context.\n\nUsage:\n\n```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```\n\n\n@see https://reactjs.org/docs/context.html#classcontexttype",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!0},kind:"property",name:"contextType",inheritedFrom:"Component.contextType",type:"Context<any>"},{documentation:{contents:['<p>If using the new style context, re-declare this in your class to be the\n<code>React.ContextType</code> of your <code>static contextType</code>.</p>\n<pre><code class="lang-ts">static contextType = MyContext\ncontext!: React.ContextType&lt;typeof MyContext&gt;\n</code></pre>\n',{tag:"see",value:"https://reactjs.org/docs/legacy-context.html"}],contentsRaw:"If using the new style context, re-declare this in your class to be the\n`React.ContextType` of your `static contextType`.\n\n```ts\nstatic contextType = MyContext\ncontext!: React.ContextType<typeof MyContext>\n```\n\n\n@see https://reactjs.org/docs/legacy-context.html",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",flags:{isDeprecated:"if used without a type annotation, or without static contextType",isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"context",inheritedFrom:"Component.context",type:"any"},{fileName:"node_modules/@types/react/index.d.ts",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"props",inheritedFrom:"Component.props",type:"Readonly<SnackbarQueueProps> & Readonly<>"},{documentation:{contents:[],contentsRaw:"",metadata:{}},fileName:"node_modules/@types/react/index.d.ts",flags:{isDeprecated:"https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs",isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"refs",inheritedFrom:"Component.refs",type:"{ [key: string]: ReactInstance }"}],constructorType:{fileName:"src/snackbar/snackbar-queue.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"constructor",name:"constructor",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar-queue.tsx#L72",signatures:[{fileName:"src/snackbar/snackbar-queue.tsx",kind:"signature",name:"new SnackbarQueue",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar-queue.tsx#L72",parameters:[{flags:{isExported:!1,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"parameter",name:"props",type:"SnackbarQueueProps"}],returnType:"SnackbarQueue",type:"(props: SnackbarQueueProps) => SnackbarQueue"}]}},SnackbarProps:{documentation:{contents:["<p>A Snackbar component for notifications.</p>\n"],contentsRaw:"A Snackbar component for notifications.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"SnackbarProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L27",methods:[],properties:[{documentation:{contents:["<p>One or more actions to add to the snackbar.</p>\n"],contentsRaw:"One or more actions to add to the snackbar.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"action",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L37",type:"React.ReactNode | React.ReactNode[]"},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"dismissIcon",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L45",type:"boolean | string"},{documentation:{contents:["<p>Whether or not your want clicking an action to close the Snackbar.</p>\n"],contentsRaw:"Whether or not your want clicking an action to close the Snackbar.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"dismissesOnAction",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L47",type:"undefined | false | true"},{documentation:{contents:["<p>An icon for the snackbar</p>\n"],contentsRaw:"An icon for the snackbar",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"icon",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L49",type:"RMWC.IconPropT"},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"leading",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L43",type:"undefined | false | true"},{documentation:{contents:["<p>A string or other renderable JSX to be used as the message body.</p>\n"],contentsRaw:"A string or other renderable JSX to be used as the message body.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"message",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L35",type:"React.ReactNode"},{documentation:{contents:["<p>A callback thats fired when the Snackbar hides. evt.detail = { reason?: string }</p>\n"],contentsRaw:"A callback thats fired when the Snackbar hides. evt.detail = { reason?: string }",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"onClose",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L33",type:"undefined | (evt: SnackbarOnCloseEventT) => void"},{documentation:{contents:["<p>A callback thats fired when the Snackbar shows.</p>\n"],contentsRaw:"A callback thats fired when the Snackbar shows.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"onOpen",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L31",type:"undefined | (evt: SnackbarOnOpenEventT) => void"},{documentation:{contents:["<p>Show the Snackbar.</p>\n"],contentsRaw:"Show the Snackbar.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"open",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L29",type:"undefined | false | true"},{documentation:{contents:["<p>Places the action underneath the message text.</p>\n"],contentsRaw:"Places the action underneath the message text.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"stacked",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L41",type:"undefined | false | true"},{documentation:{contents:["<p>Milliseconds to show the Snackbar for.</p>\n"],contentsRaw:"Milliseconds to show the Snackbar for.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"timeout",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L39",type:"undefined | number"}]},DeprecatedSnackbarProps:{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"DeprecatedSnackbarProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L52",methods:[],properties:[{documentation:{contents:["<p>DEPRECATED: Use the actions prop.</p>\n"],contentsRaw:"DEPRECATED: Use the actions prop.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"actionHandler",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L66",type:"undefined | () => void"},{documentation:{contents:["<p>DEPRECATED: Use stacked.</p>\n"],contentsRaw:"DEPRECATED: Use stacked.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"actionOnBottom",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L64",type:"undefined | false | true"},{documentation:{contents:["<p>DEPRECATED: Use the actions prop.</p>\n"],contentsRaw:"DEPRECATED: Use the actions prop.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"actionText",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L68",type:"React.ReactNode"},{documentation:{contents:["<p>DEPRECATED: Use leading.</p>\n"],contentsRaw:"DEPRECATED: Use leading.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"alignStart",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L60",type:"undefined | false | true"},{documentation:{contents:["<p>DEPRECATED: No longer applicable.</p>\n"],contentsRaw:"DEPRECATED: No longer applicable.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"multiline",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L62",type:"undefined | false | true"},{documentation:{contents:["<p>DEPRECATED: Use onClose.</p>\n"],contentsRaw:"DEPRECATED: Use onClose.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"onHide",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L58",type:"undefined | (evt: Event) => void"},{documentation:{contents:["<p>DEPRECATED: Use onOpen.</p>\n"],contentsRaw:"DEPRECATED: Use onOpen.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"onShow",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L56",type:"undefined | (evt: Event) => void"},{documentation:{contents:["<p>DEPRECATED: Use open.</p>\n"],contentsRaw:"DEPRECATED: Use open.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"show",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L54",type:"undefined | false | true"}]},SnackbarActionProps:{documentation:{contents:["<p>A button for a snackbar action.</p>\n"],contentsRaw:"A button for a snackbar action.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"SnackbarActionProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L104",extends:["ButtonProps"],methods:[],properties:[{documentation:{contents:["<p>DEPRECATED: pass an options object to the ripple prop <code>ripple={{accent: true}}</code></p>\n"],contentsRaw:"DEPRECATED: pass an options object to the ripple prop `ripple={{accent: true}}`",metadata:{}},fileName:"src/snackbar/node_modules/@rmwc/types/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"accent",inheritedFrom:"DeprecatedRippleProps.accent",type:"undefined | false | true"},{documentation:{contents:["<p>An action returned in evt.detail.reason to the onClose handler.</p>\n"],contentsRaw:"An action returned in evt.detail.reason to the onClose handler.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"action",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L106",type:"undefined | string"},{documentation:{contents:["<p>Content specified as children.</p>\n"],contentsRaw:"Content specified as children.",metadata:{}},fileName:"src/snackbar/node_modules/@rmwc/button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"children",inheritedFrom:"ButtonProps.children",type:"React.ReactNode"},{documentation:{contents:["<p>Make the Button dense.</p>\n"],contentsRaw:"Make the Button dense.",metadata:{}},fileName:"src/snackbar/node_modules/@rmwc/button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"dense",inheritedFrom:"ButtonProps.dense",type:"undefined | false | true"},{documentation:{contents:["<p>Make the button disabled</p>\n"],contentsRaw:"Make the button disabled",metadata:{}},fileName:"src/snackbar/node_modules/@rmwc/button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"disabled",inheritedFrom:"ButtonProps.disabled",type:"undefined | false | true"},{documentation:{contents:["<p>An Icon for the Button</p>\n"],contentsRaw:"An Icon for the Button",metadata:{}},fileName:"src/snackbar/node_modules/@rmwc/button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"icon",inheritedFrom:"ButtonProps.icon",type:"RMWC.IconPropT"},{documentation:{contents:["<p>Content specified as a label prop.</p>\n"],contentsRaw:"Content specified as a label prop.",metadata:{}},fileName:"src/snackbar/node_modules/@rmwc/button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"label",inheritedFrom:"ButtonProps.label",type:"React.ReactNode | any"},{documentation:{contents:["<p>Make the button outlined.</p>\n"],contentsRaw:"Make the button outlined.",metadata:{}},fileName:"src/snackbar/node_modules/@rmwc/button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"outlined",inheritedFrom:"ButtonProps.outlined",type:"undefined | false | true"},{documentation:{contents:["<p>Make the Button raised.</p>\n"],contentsRaw:"Make the Button raised.",metadata:{}},fileName:"src/snackbar/node_modules/@rmwc/button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"raised",inheritedFrom:"ButtonProps.raised",type:"undefined | false | true"},{documentation:{contents:["<p>Adds a ripple effect to the component</p>\n"],contentsRaw:"Adds a ripple effect to the component",metadata:{}},fileName:"src/snackbar/node_modules/@rmwc/types/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"ripple",inheritedFrom:"WithRippleProps.ripple",type:"RipplePropT"},{documentation:{contents:["<p>DEPRECATED: pass an options object to the ripple prop <code>ripple={{surface: true}}</code></p>\n"],contentsRaw:"DEPRECATED: pass an options object to the ripple prop `ripple={{surface: true}}`",metadata:{}},fileName:"src/snackbar/node_modules/@rmwc/types/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"surface",inheritedFrom:"DeprecatedRippleProps.surface",type:"undefined | false | true"},{documentation:{contents:["<p>A trailing icon for the Button</p>\n"],contentsRaw:"A trailing icon for the Button",metadata:{}},fileName:"src/snackbar/node_modules/@rmwc/button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"trailingIcon",inheritedFrom:"ButtonProps.trailingIcon",type:"RMWC.IconPropT"},{documentation:{contents:["<p>DEPRECATED: pass an options object to the ripple prop <code>ripple={{unbounded: true}}</code></p>\n"],contentsRaw:"DEPRECATED: pass an options object to the ripple prop `ripple={{unbounded: true}}`",metadata:{}},fileName:"src/snackbar/node_modules/@rmwc/types/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"unbounded",inheritedFrom:"DeprecatedRippleProps.unbounded",type:"undefined | false | true"},{documentation:{contents:["<p>Make the button unelevated.</p>\n"],contentsRaw:"Make the button unelevated.",metadata:{}},fileName:"src/snackbar/node_modules/@rmwc/button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"unelevated",inheritedFrom:"ButtonProps.unelevated",type:"undefined | false | true"}]},SnackbarQueueMessage:{fileName:"src/snackbar/snackbar-queue.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"SnackbarQueueMessage",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar-queue.tsx#L20",extends:["SnackbarProps","SnackbarQueueMessageBase & "],methods:[],properties:[{documentation:{contents:["<p>One or more actions to add to the snackbar.</p>\n"],contentsRaw:"One or more actions to add to the snackbar.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"action",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L37",inheritedFrom:"SnackbarProps.action",type:"React.ReactNode | React.ReactNode[]"},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"dismissIcon",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L45",inheritedFrom:"SnackbarProps.dismissIcon",type:"boolean | string"},{documentation:{contents:["<p>Whether or not your want clicking an action to close the Snackbar.</p>\n"],contentsRaw:"Whether or not your want clicking an action to close the Snackbar.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"dismissesOnAction",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L47",inheritedFrom:"SnackbarProps.dismissesOnAction",type:"undefined | false | true"},{documentation:{contents:["<p>An icon for the snackbar</p>\n"],contentsRaw:"An icon for the snackbar",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"icon",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L49",inheritedFrom:"SnackbarProps.icon",type:"RMWC.IconPropT"},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"leading",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L43",inheritedFrom:"SnackbarProps.leading",type:"undefined | false | true"},{documentation:{contents:["<p>A string or other renderable JSX to be used as the message body.</p>\n"],contentsRaw:"A string or other renderable JSX to be used as the message body.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"message",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L35",inheritedFrom:"SnackbarProps.message",type:"React.ReactNode"},{documentation:{contents:["<p>A callback thats fired when the Snackbar hides. evt.detail = { reason?: string }</p>\n"],contentsRaw:"A callback thats fired when the Snackbar hides. evt.detail = { reason?: string }",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"onClose",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L33",inheritedFrom:"SnackbarProps.onClose",type:"undefined | (evt: SnackbarOnCloseEventT) => void"},{documentation:{contents:["<p>A callback thats fired when the Snackbar shows.</p>\n"],contentsRaw:"A callback thats fired when the Snackbar shows.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"onOpen",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L31",inheritedFrom:"SnackbarProps.onOpen",type:"undefined | (evt: SnackbarOnOpenEventT) => void"},{documentation:{contents:["<p>Show the Snackbar.</p>\n"],contentsRaw:"Show the Snackbar.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"open",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L29",inheritedFrom:"SnackbarProps.open",type:"undefined | false | true"},{documentation:{contents:["<p>Places the action underneath the message text.</p>\n"],contentsRaw:"Places the action underneath the message text.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"stacked",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L41",inheritedFrom:"SnackbarProps.stacked",type:"undefined | false | true"},{documentation:{contents:["<p>Milliseconds to show the Snackbar for.</p>\n"],contentsRaw:"Milliseconds to show the Snackbar for.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"timeout",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L39",inheritedFrom:"SnackbarProps.timeout",type:"undefined | number"}]},SnackbarQueueProps:{documentation:{contents:["<p>A snackbar queue for rendering messages</p>\n"],contentsRaw:"A snackbar queue for rendering messages",metadata:{}},fileName:"src/snackbar/snackbar-queue.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"SnackbarQueueProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar-queue.tsx#L57",extends:["SnackbarProps"],methods:[],properties:[{documentation:{contents:["<p>One or more actions to add to the snackbar.</p>\n"],contentsRaw:"One or more actions to add to the snackbar.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"action",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L37",inheritedFrom:"SnackbarProps.action",type:"React.ReactNode | React.ReactNode[]"},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"dismissIcon",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L45",inheritedFrom:"SnackbarProps.dismissIcon",type:"boolean | string"},{documentation:{contents:["<p>Whether or not your want clicking an action to close the Snackbar.</p>\n"],contentsRaw:"Whether or not your want clicking an action to close the Snackbar.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"dismissesOnAction",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L47",inheritedFrom:"SnackbarProps.dismissesOnAction",type:"undefined | false | true"},{documentation:{contents:["<p>An icon for the snackbar</p>\n"],contentsRaw:"An icon for the snackbar",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"icon",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L49",inheritedFrom:"SnackbarProps.icon",type:"RMWC.IconPropT"},{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"leading",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L43",inheritedFrom:"SnackbarProps.leading",type:"undefined | false | true"},{documentation:{contents:["<p>A string or other renderable JSX to be used as the message body.</p>\n"],contentsRaw:"A string or other renderable JSX to be used as the message body.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"message",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L35",inheritedFrom:"SnackbarProps.message",type:"React.ReactNode"},{fileName:"src/snackbar/snackbar-queue.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"messages",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar-queue.tsx#L58",type:"MessagesEmitter<SnackbarQueueMessage>"},{documentation:{contents:["<p>A callback thats fired when the Snackbar hides. evt.detail = { reason?: string }</p>\n"],contentsRaw:"A callback thats fired when the Snackbar hides. evt.detail = { reason?: string }",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"onClose",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L33",inheritedFrom:"SnackbarProps.onClose",type:"undefined | (evt: SnackbarOnCloseEventT) => void"},{documentation:{contents:["<p>A callback thats fired when the Snackbar shows.</p>\n"],contentsRaw:"A callback thats fired when the Snackbar shows.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"onOpen",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L31",inheritedFrom:"SnackbarProps.onOpen",type:"undefined | (evt: SnackbarOnOpenEventT) => void"},{documentation:{contents:["<p>Show the Snackbar.</p>\n"],contentsRaw:"Show the Snackbar.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"open",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L29",inheritedFrom:"SnackbarProps.open",type:"undefined | false | true"},{documentation:{contents:["<p>Places the action underneath the message text.</p>\n"],contentsRaw:"Places the action underneath the message text.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"stacked",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L41",inheritedFrom:"SnackbarProps.stacked",type:"undefined | false | true"},{documentation:{contents:["<p>Milliseconds to show the Snackbar for.</p>\n"],contentsRaw:"Milliseconds to show the Snackbar for.",metadata:{}},fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"timeout",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L39",inheritedFrom:"SnackbarProps.timeout",type:"undefined | number"}]},SnackbarOnOpenEventT:{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"type alias",name:"SnackbarOnOpenEventT",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L23",type:"RMWC.CustomEventT<{}>"},SnackbarOnCloseEventT:{fileName:"src/snackbar/snackbar.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"type alias",name:"SnackbarOnCloseEventT",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/9f05a35bf/src/snackbar/snackbar.tsx#L24",type:"RMWC.CustomEventT<>"}}}},886:function(e,t,n){"use strict";n.r(t);var a=n(27),s=n(0),i=n.n(s),r=n(41),o=n(843),c=n(842),d=n(69),p=n(136),l=n(28);t.default=function(){return i.a.createElement(r.b,{title:"Snackbars",lead:"Snackbars provide brief feedback about an operation through a message at the bottom of the screen.",module:"@rmwc/snackbar",styles:["@material/snackbar/dist/mdc.snackbar.css","@material/button/dist/mdc.button.css"],docsLink:"https://material.io/develop/web/components/snackbars/",examples:c},i.a.createElement(r.f,null,"Basic Usage"),i.a.createElement(r.e,null,"You can render a snackbar in your UI and control its open state."),i.a.createElement(r.c,{label:"Default"},function(){var e=i.a.useState(!1),t=Object(a.a)(e,2),n=t[0],s=t[1];return i.a.createElement(i.a.Fragment,null,i.a.createElement(d.a,{open:n,onClose:function(e){return s(!1)},message:"This is a new message",action:i.a.createElement(d.b,{label:"Dismiss",onClick:function(){return console.log("Click Me")}})}),i.a.createElement(l.a,{raised:!0,label:"Show snackbar",onClick:function(e){return s(!n)}}))}),i.a.createElement(r.c,{label:"Start Aligned"},function(){var e=i.a.useState(!1),t=Object(a.a)(e,2),n=t[0],s=t[1];return i.a.createElement(i.a.Fragment,null,i.a.createElement(d.a,{open:n,onClose:function(e){return s(!1)},message:"Start aligned",stacked:!0,action:[i.a.createElement(d.b,{label:"Yeah!"}),i.a.createElement(d.b,{label:"No..."})],leading:!0,timeout:1e4}),i.a.createElement(l.a,{raised:!0,label:"Show start-aligned",onClick:function(e){return s(!n)}}))}),i.a.createElement(r.f,null,"Usage with SnackbarQueue"),i.a.createElement(r.e,null,"While rendering the Snackbar inline works for simple cases, you'll likely have a notification system, or want to send notifications from anywhere in your app. The SnackbarQueue exists as a convenience method for handling these cases and rendering the snackbar messages for you."),i.a.createElement(r.e,null,"Setup is nice and easy, create a queue object you can pass around in your code base, pass the queues messages to the SnackbarQueue component, and then use the notify api to send notifications."),i.a.createElement(r.c,{codeOnly:!0},"\n        // Create a file that exports your queue\n        // myQueue.js\n        import { createSnackbarQueue } from '@rmwc/snackbar';\n\n        export const queue = createSnackbarQueue();\n      "),i.a.createElement(r.c,{codeOnly:!0},"\n        // Somewhere at the top level of your app\n        // Render the SnackbarQueue\n        import React from 'react';\n        import { queue } from './myQueue';\n\n        export default function App() {\n          return (\n            <div>\n              ...\n              <SnackbarQueue\n                messages={queue.messages}\n                // You can also pass default options to pass to your notifications\n                // ie, make them all leading, stacked, etc\n                leading\n                stacked\n              />\n            </div>\n          )\n        }\n        \n      "),i.a.createElement(r.e,null,"The notify function was designed to mimic the the built-in browser Notifications api and can accept most of the relevant options (icon, image, title, body, actions, ,etc). It also can accept any of the Snackbar props. Just import your queue, and call the notify method."),i.a.createElement(r.c,{codeOnly:!0},"\n        // Somewhere else in your app\n        // Could be a view, your redux store, anywhere you want...\n        import { queue } from './myQueue';\n\n        // Simple example\n        queue.notify({\n          title: 'Hi there'\n        });\n\n        // With some features\n        queue.notify({\n          title: <b>Warning</b>,\n          body: 'You have selected pizza instead icecream!',\n          icon: 'warning',\n          actions: [\n            {\n              // NotificationAction api format\n              title: 'Fix It!',\n              icon: 'close',\n              action: 'fixit' // action will be available as evt.detail.reason in the onClose event\n            },\n            {\n              // OR SnackbarActionProps format\n              label: 'Continue...',\n              icon: 'check',\n              onClick: () => {}\n            },\n          ]\n        });\n      "),i.a.createElement(r.c,{label:"Inline Example"},function(){var e=Object(p.b)(),t=e.messages,n=e.notify;return i.a.createElement(function(){return i.a.createElement("div",null,i.a.createElement(l.a,{label:"Notify",onClick:function(){return n({title:i.a.createElement("b",null,"Success"),body:"You have selected pizza!",icon:"check",actions:[{title:"Dismiss"}]})}}),i.a.createElement(p.a,{messages:t}))},null)}),i.a.createElement(r.a,{src:o,components:[d.a,d.b]}))}}}]);
//# sourceMappingURL=29.d809b4b6.chunk.js.map