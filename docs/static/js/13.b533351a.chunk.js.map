{"version":3,"sources":["elevation/readme.tsx"],"names":["__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_doc_utils__WEBPACK_IMPORTED_MODULE_2__","title","lead","module","styles","docsLink","examples","label","Fragment","Array","fill","undefined","map","val","i","___WEBPACK_IMPORTED_MODULE_5__","z","key","_React$useState","React","useState","_React$useState2","Object","_Users_jamesmfriedman_Sites_rmwc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","elevation","setElevation","transition","onMouseOver","onMouseOut","wrap","src","propsSrc","components","Elevation"],"mappings":"urFAQeA,EAAA,mBACb,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAM,YACNC,KAAK,4EACLC,OAAO,kBACPC,OAAQ,CAAC,8CACTC,SAAS,wDACTC,SAAUA,GAEVT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaO,MAAM,aACjBV,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACGC,MAAM,IACJC,UAAKC,GACLC,IAAI,SAACC,EAAKC,GAAN,OACHjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWC,EAAGF,EAAGG,IAAKH,GACnBA,EADH,UAORjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaO,MAAM,cAChB,WAAmB,IAAAW,EACgBC,IAAMC,SAAS,GAD/BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACXM,EADWH,EAAA,GACAI,EADAJ,EAAA,GAGlB,OACExB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACEC,EAAGQ,EACHE,YAAU,EACVC,YAAa,kBAAMF,EAAa,KAChCG,WAAY,kBAAMH,EAAa,KAJjC,YAMYD,EANZ,QAYN3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,0BACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,iRAOAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWC,EAAG,GAAIa,MAAI,GACpBhC,EAAAC,EAAAC,cAAA,0BAIJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU8B,IAAKC,EAAUC,WAAY,CAACC","file":"static/js/13.b533351a.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Docs, DocsExample, DocProps, DocsSubtitle, DocsP } from '@doc-utils';\nimport propsSrc from './generated-props.json';\nimport examples from './generated-examples.json';\n\nimport { Elevation } from '.';\n\nexport default function() {\n  return (\n    <Docs\n      title=\"Elevation\"\n      lead=\"Elevation is the relative distance between two surfaces along the z-axis.\"\n      module=\"@rmwc/elevation\"\n      styles={['@material/elevation/dist/mdc.elevation.css']}\n      docsLink=\"https://material.io/develop/web/components/elevation/\"\n      examples={examples}\n    >\n      <DocsExample label=\"Elevation\">\n        <>\n          {Array(25)\n            .fill(undefined)\n            .map((val, i) => (\n              <Elevation z={i} key={i}>\n                {i}dp\n              </Elevation>\n            ))}\n        </>\n      </DocsExample>\n\n      <DocsExample label=\"Transition\">\n        {function Example() {\n          const [elevation, setElevation] = React.useState(0);\n\n          return (\n            <Elevation\n              z={elevation}\n              transition\n              onMouseOver={() => setElevation(24)}\n              onMouseOut={() => setElevation(0)}\n            >\n              Hover Me {elevation}dp\n            </Elevation>\n          );\n        }}\n      </DocsExample>\n\n      <DocsSubtitle>Wrapping Children</DocsSubtitle>\n      <DocsP>\n        You can avoid adding extra DOM nodes by using the `wrap` prop on\n        elevation. This will apply the classes directly to the child component.\n        Additionally, Elevation is simply a `className`, so you can achieve the\n        same effect by adding `className=\"mdc-elevation--z15\"`.\n      </DocsP>\n\n      <DocsExample>\n        <Elevation z={21} wrap>\n          <span>Wrapped!</span>\n        </Elevation>\n      </DocsExample>\n\n      <DocProps src={propsSrc} components={[Elevation]} />\n    </Docs>\n  );\n}\n"],"sourceRoot":""}