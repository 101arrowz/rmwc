{"version":3,"sources":["list/readme-variants.tsx"],"names":["__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_doc_utils__WEBPACK_IMPORTED_MODULE_4__","title","lead","module","styles","docsLink","examples","___WEBPACK_IMPORTED_MODULE_7__","twoLine","___WEBPACK_IMPORTED_MODULE_8__","icon","avatarList","_avatar__WEBPACK_IMPORTED_MODULE_9__","src","size","name","label","_React$useState","React","useState","Cookies","Pizza","Icecream","_React$useState2","Object","_Users_jamesmfriedman_Sites_rmwc_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","checked","setChecked","map","key","onClick","_Users_jamesmfriedman_Sites_rmwc_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_jamesmfriedman_Sites_rmwc_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","_checkbox__WEBPACK_IMPORTED_MODULE_10__","readOnly","_React$useState3","_React$useState4","_switch__WEBPACK_IMPORTED_MODULE_11__","_React$useState5","_React$useState6","_radio__WEBPACK_IMPORTED_MODULE_12__","propsSrc","components","List","ListItem","ListItemPrimaryText","ListItemSecondaryText","ListItemGraphic","ListItemMeta","ListDivider","ListGroup","ListGroupSubheader","SimpleListItem"],"mappings":"+uHAyBeA,EAAA,mBACb,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAM,QACNC,KAAK,4DACLC,OAAO,aACPC,OAAQ,CAAC,oCACTC,SAAS,oDACTC,SAAUA,GAEVT,EAAAC,EAAAC,cAACC,EAAA,EAAD,iBACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,0GAKAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,SAAO,GACXX,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,gBACAZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,wBAGJZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,cACAZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,wBAGJZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,iBACAZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,0BAMRZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,mCAEAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAiBC,KAAK,aADxB,WAIAb,EAAAC,EAAAC,cAACU,EAAA,EAAD,gBAEEZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAcC,KAAK,UAErBb,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAiBC,KAAK,SADxB,uBAGEb,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAcC,KAAK,UAErBb,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAiBC,KAAK,SADxB,6BAGEb,EAAAC,EAAAC,cAACU,EAAA,EAAD,kBAKNZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,kCAEAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,SAAO,EAACG,YAAU,GACtBd,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,KACEb,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEC,IAAI,gCACJC,KAAK,SACLC,KAAK,iCANb,6BAWElB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAcC,KAAK,UAErBb,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,KACEb,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEC,IAAI,0BACJC,KAAK,QACLC,KAAK,mBANb,eAWElB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAcC,KAAK,WAGvBb,EAAAC,EAAAC,cAACU,EAAA,EAAD,MACAZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,KACEb,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEC,IAAI,0BACJC,KAAK,SACLC,KAAK,mBANb,eAWElB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAcC,KAAK,aAM3Bb,EAAAC,EAAAC,cAACC,EAAA,EAAD,mBACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,kSAOAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAagB,MAAM,cAChB,WAAmB,IAAAC,EACYC,IAAMC,SAAc,CAChDC,SAAS,EACTC,OAAO,EACPC,UAAU,IAJMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACXS,EADWH,EAAA,GACFI,EADEJ,EAAA,GAOlB,OACE1B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACG,CAAC,UAAW,QAAS,YAAYqB,IAAI,SAAAC,GAAG,OACvChC,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEoB,IAAKA,EACLC,QAAS,kBACPH,EAAWH,OAAAO,EAAA,EAAAP,CAAA,GAAKE,EAANF,OAAAQ,EAAA,EAAAR,CAAA,GAAgBK,GAAOH,EAAQG,QAG1CA,EACDhC,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAUP,QAASA,EAAQG,GAAMK,UAAQ,WASvDrC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAagB,MAAM,YAChB,WAAmB,IAAAmB,EACYjB,IAAMC,SAAc,CAChDC,SAAS,EACTC,OAAO,EACPC,UAAU,IAJMc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GACXT,EADWU,EAAA,GACFT,EADES,EAAA,GAOlB,OACEvC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACG,CAAC,UAAW,QAAS,YAAYqB,IAAI,SAAAC,GAAG,OACvChC,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEoB,IAAKA,EACLC,QAAS,kBACPH,EAAWH,OAAAO,EAAA,EAAAP,CAAA,GAAKE,EAANF,OAAAQ,EAAA,EAAAR,CAAA,GAAgBK,GAAOH,EAAQG,QAG1CA,EACDhC,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAQX,QAASA,EAAQG,GAAMK,UAAQ,WASrDrC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAagB,MAAM,UAChB,WAAmB,IAAAsB,EACYpB,IAAMC,SAAS,WAD3BoB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GACXZ,EADWa,EAAA,GACFZ,EADEY,EAAA,GAGlB,OACE1C,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACG,CAAC,UAAW,QAAS,YAAYqB,IAAI,SAAAC,GAAG,OACvChC,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAUoB,IAAKA,EAAKC,QAAS,kBAAMH,EAAWE,KAC3CA,EACDhC,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAOd,QAASA,IAAYG,EAAKK,UAAQ,WASvDrC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEa,IAAK4B,EACLC,WAAY,CACVC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC","file":"static/js/8.e720c118.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Docs, DocsExample, DocProps, DocsSubtitle, DocsP } from '@doc-utils';\nimport propsSrc from './generated-props.json';\nimport examples from './generated-examples-variants.json';\n\nimport {\n  List,\n  ListItem,\n  ListGroupSubheader,\n  ListItemText,\n  ListItemPrimaryText,\n  ListItemSecondaryText,\n  ListItemGraphic,\n  ListItemMeta,\n  ListDivider,\n  ListGroup,\n  SimpleListItem\n} from '.';\n\nimport { Avatar } from '../avatar';\nimport { Checkbox } from '../checkbox';\nimport { Switch } from '../switch';\nimport { Radio } from '../radio';\n\nexport default function() {\n  return (\n    <Docs\n      title=\"Lists\"\n      lead=\"Lists are continuous, vertical indexes of text or images.\"\n      module=\"@rmwc/list\"\n      styles={['@material/list/dist/mdc.list.css']}\n      docsLink=\"https://material.io/develop/web/components/lists/\"\n      examples={examples}\n    >\n      <DocsSubtitle>Two Line</DocsSubtitle>\n      <DocsP>\n        When using the `twoLine` prop, you have to wrap the contents of the\n        `ListItem` in `ListItemText`.\n      </DocsP>\n\n      <DocsExample>\n        <List twoLine>\n          <ListItem>\n            <ListItemText>\n              <ListItemPrimaryText>Cookies</ListItemPrimaryText>\n              <ListItemSecondaryText>$4.99 a dozen</ListItemSecondaryText>\n            </ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemText>\n              <ListItemPrimaryText>Pizza</ListItemPrimaryText>\n              <ListItemSecondaryText>$1.99 a slice</ListItemSecondaryText>\n            </ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemText>\n              <ListItemPrimaryText>Icecream</ListItemPrimaryText>\n              <ListItemSecondaryText>$0.99 a scoop</ListItemSecondaryText>\n            </ListItemText>\n          </ListItem>\n        </List>\n      </DocsExample>\n\n      <DocsSubtitle>Leading and Trailing Icons</DocsSubtitle>\n\n      <DocsExample>\n        <List>\n          <ListItem>\n            <ListItemGraphic icon=\"favorite\" />\n            Leading\n          </ListItem>\n          <ListItem>\n            Trailing\n            <ListItemMeta icon=\"star\" />\n          </ListItem>\n          <ListItem>\n            <ListItemGraphic icon=\"wifi\" />\n            Leading and Trailing\n            <ListItemMeta icon=\"info\" />\n          </ListItem>\n          <ListItem>\n            <ListItemGraphic icon=\"wifi\" />\n            Leading with Trailing Text\n            <ListItemMeta>HELLO!</ListItemMeta>\n          </ListItem>\n        </List>\n      </DocsExample>\n\n      <DocsSubtitle>Avatar List with Dividers</DocsSubtitle>\n\n      <DocsExample>\n        <List twoLine avatarList>\n          <ListGroup>\n            <ListItem>\n              <ListItemGraphic\n                icon={\n                  <Avatar\n                    src=\"images/avatars/blackwidow.png\"\n                    size=\"xsmall\"\n                    name=\"Natalia Alianovna Romanova\"\n                  />\n                }\n              />\n              Natalia Alianovna Romanova\n              <ListItemMeta icon=\"info\" />\n            </ListItem>\n            <ListItem>\n              <ListItemGraphic\n                icon={\n                  <Avatar\n                    src=\"images/avatars/hulk.png\"\n                    size=\"small\"\n                    name=\"Bruce Banner\"\n                  />\n                }\n              />\n              Bruce Banner\n              <ListItemMeta icon=\"info\" />\n            </ListItem>\n          </ListGroup>\n          <ListDivider />\n          <ListGroup>\n            <ListItem>\n              <ListItemGraphic\n                icon={\n                  <Avatar\n                    src=\"images/avatars/thor.png\"\n                    size=\"medium\"\n                    name=\"Thor Odinson\"\n                  />\n                }\n              />\n              Thor Odinson\n              <ListItemMeta icon=\"info\" />\n            </ListItem>\n          </ListGroup>\n        </List>\n      </DocsExample>\n\n      <DocsSubtitle>Selectable</DocsSubtitle>\n      <DocsP>\n        Checkboxes and Radios can be included as part of `ListItemMeta`. It is\n        recommended when using these that you are using controlled components,\n        and that you put your interaction handler on the `ListItem` itself.\n        Notice the `readOnly` prop is also set on the individual form elements.\n      </DocsP>\n\n      <DocsExample label=\"Checkboxes\">\n        {function Example() {\n          const [checked, setChecked] = React.useState<any>({\n            Cookies: false,\n            Pizza: false,\n            Icecream: false\n          });\n\n          return (\n            <List>\n              {['Cookies', 'Pizza', 'Icecream'].map(key => (\n                <ListItem\n                  key={key}\n                  onClick={() =>\n                    setChecked({ ...checked, [key]: !checked[key] })\n                  }\n                >\n                  {key}\n                  <ListItemMeta>\n                    <Checkbox checked={checked[key]} readOnly />\n                  </ListItemMeta>\n                </ListItem>\n              ))}\n            </List>\n          );\n        }}\n      </DocsExample>\n\n      <DocsExample label=\"Switches\">\n        {function Example() {\n          const [checked, setChecked] = React.useState<any>({\n            Cookies: false,\n            Pizza: false,\n            Icecream: false\n          });\n\n          return (\n            <List>\n              {['Cookies', 'Pizza', 'Icecream'].map(key => (\n                <ListItem\n                  key={key}\n                  onClick={() =>\n                    setChecked({ ...checked, [key]: !checked[key] })\n                  }\n                >\n                  {key}\n                  <ListItemMeta>\n                    <Switch checked={checked[key]} readOnly />\n                  </ListItemMeta>\n                </ListItem>\n              ))}\n            </List>\n          );\n        }}\n      </DocsExample>\n\n      <DocsExample label=\"Radios\">\n        {function Example() {\n          const [checked, setChecked] = React.useState('Cookies');\n\n          return (\n            <List>\n              {['Cookies', 'Pizza', 'Icecream'].map(key => (\n                <ListItem key={key} onClick={() => setChecked(key)}>\n                  {key}\n                  <ListItemMeta>\n                    <Radio checked={checked === key} readOnly />\n                  </ListItemMeta>\n                </ListItem>\n              ))}\n            </List>\n          );\n        }}\n      </DocsExample>\n\n      <DocProps\n        src={propsSrc}\n        components={[\n          List,\n          ListItem,\n          ListItemPrimaryText,\n          ListItemSecondaryText,\n          ListItemGraphic,\n          ListItemMeta,\n          ListDivider,\n          ListGroup,\n          ListGroupSubheader,\n          SimpleListItem\n        ]}\n      />\n    </Docs>\n  );\n}\n"],"sourceRoot":""}