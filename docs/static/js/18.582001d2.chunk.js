(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{798:function(e){e.exports=['<>\n  <IconButton icon="star" label="Rate this!" />\n\n  <IconButton icon="favorite" label="Favorite" disabled />\n\n  <IconButton\n    icon="images/icons/twitter.png"\n    aria-label="Tweet it!"\n    tag="a"\n    target="_blank"\n    href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(\n      \'You should definitely be using RMWC for your next project! https://jamesmfriedman.github.io/rmwc/\'\n    )}`}\n  />\n</>','<>\n  <IconButton icon="favorite_border" onIcon="favorite" />\n  <IconButton icon="favorite" onIcon="favorite" disabled />\n</>','function Controlled() {\n  const [isChecked, setIsChecked] = React.useState(false);\n  return (\n    <>\n      <IconButton\n        checked={isChecked}\n        onClick={() => setIsChecked(!isChecked)}\n        onIcon="star"\n        icon="star_border"\n      />\n\n      <IconButton\n        checked={isChecked}\n        onClick={() => setIsChecked(!isChecked)}\n        onIcon="images/icons/twitter.png"\n        icon="images/icons/facebook.png"\n      />\n    </>\n  );\n}',"<IconButton\n  onIcon={\n    <div\n      style={{\n        background: 'red',\n        width: '24px',\n        height: '24px'\n      }}\n    />\n  }\n  icon={\n    <div\n      style={{\n        background: 'green',\n        width: '24px',\n        height: '24px',\n        borderRadius: '50%'\n      }}\n    />\n  }\n/>"]},799:function(e){e.exports={npm:{},typescript:{IconButtonProps:{documentation:{contents:["<p>An IconButton component that can also be used as a toggle.</p>\n"],contentsRaw:"An IconButton component that can also be used as a toggle.",metadata:{}},fileName:"src/icon-button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"IconButtonProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/icon-button/index.tsx#L15",extends:["WithRippleProps"],methods:[],properties:[{documentation:{contents:["<p>DEPRECATED: pass an options object to the ripple prop <code>ripple={{accent: true}}</code></p>\n"],contentsRaw:"DEPRECATED: pass an options object to the ripple prop `ripple={{accent: true}}`",metadata:{}},fileName:"src/icon-button/node_modules/@rmwc/types/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"accent",inheritedFrom:"DeprecatedRippleProps.accent",type:"undefined | false | true"},{documentation:{contents:["<p>Controls the on / off state of the a toggleable button.</p>\n"],contentsRaw:"Controls the on / off state of the a toggleable button.",metadata:{}},fileName:"src/icon-button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"checked",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/icon-button/index.tsx#L17",type:"undefined | false | true"},{documentation:{contents:["<p>Makes the button disabled</p>\n"],contentsRaw:"Makes the button disabled",metadata:{}},fileName:"src/icon-button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"disabled",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/icon-button/index.tsx#L21",type:"undefined | false | true"},{documentation:{contents:["<p>Icon for the button</p>\n"],contentsRaw:"Icon for the button",metadata:{}},fileName:"src/icon-button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"icon",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/icon-button/index.tsx#L23",type:"RMWC.IconPropT"},{documentation:{contents:["<p>An onChange callback that receives a custom event. evt.detail = { isOn: boolean }</p>\n"],contentsRaw:"An onChange callback that receives a custom event. evt.detail = { isOn: boolean }",metadata:{}},fileName:"src/icon-button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"onChange",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/icon-button/index.tsx#L19",type:"undefined | (evt: IconButtonOnChangeEventT) => void"},{documentation:{contents:["<p>If specified, renders a toggle with this icon as the on state.</p>\n"],contentsRaw:"If specified, renders a toggle with this icon as the on state.",metadata:{}},fileName:"src/icon-button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"onIcon",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/icon-button/index.tsx#L25",type:"RMWC.IconPropT"},{documentation:{contents:["<p>Adds a ripple effect to the component</p>\n"],contentsRaw:"Adds a ripple effect to the component",metadata:{}},fileName:"src/icon-button/node_modules/@rmwc/types/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"ripple",inheritedFrom:"WithRippleProps.ripple",type:"RipplePropT"},{documentation:{contents:["<p>DEPRECATED: pass an options object to the ripple prop <code>ripple={{surface: true}}</code></p>\n"],contentsRaw:"DEPRECATED: pass an options object to the ripple prop `ripple={{surface: true}}`",metadata:{}},fileName:"src/icon-button/node_modules/@rmwc/types/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"surface",inheritedFrom:"DeprecatedRippleProps.surface",type:"undefined | false | true"},{documentation:{contents:["<p>DEPRECATED: pass an options object to the ripple prop <code>ripple={{unbounded: true}}</code></p>\n"],contentsRaw:"DEPRECATED: pass an options object to the ripple prop `ripple={{unbounded: true}}`",metadata:{}},fileName:"src/icon-button/node_modules/@rmwc/types/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"unbounded",inheritedFrom:"DeprecatedRippleProps.unbounded",type:"undefined | false | true"}]},DeprecatedIconButtonProps:{fileName:"src/icon-button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"interface",name:"DeprecatedIconButtonProps",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/icon-button/index.tsx#L28",methods:[],properties:[{documentation:{contents:["<p>DEPRECATED: Pass options directly to icon</p>\n"],contentsRaw:"DEPRECATED: Pass options directly to icon",metadata:{}},fileName:"src/icon-button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"iconOptions",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/icon-button/index.tsx#L30",type:"any"},{documentation:{contents:["<p>DEPRECATED: Pass options directly to onIcon</p>\n"],contentsRaw:"DEPRECATED: Pass options directly to onIcon",metadata:{}},fileName:"src/icon-button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!0,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"property",name:"onIconOptions",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/icon-button/index.tsx#L32",type:"any"}]},IconButtonOnChangeEventT:{fileName:"src/icon-button/index.tsx",flags:{isExported:!0,isExternal:!1,isOptional:!1,isPrivate:!1,isProtected:!1,isPublic:!1,isRest:!1,isStatic:!1},kind:"type alias",name:"IconButtonOnChangeEventT",sourceUrl:"https://github.com/jamesmfriedman/rmwc/blob/76326d1e5/src/icon-button/index.tsx#L12",type:"RMWC.CustomEventT<>"}}}},863:function(e,t,n){"use strict";n.r(t);var o=n(31),i=n(0),s=n.n(i),a=n(40),c=n(799),r=n(798),d=n(49);t.default=function(){return s.a.createElement(a.b,{title:"Icon Buttons",lead:"Icon buttons allow users to take actions, and make choices, with a single tap.",module:"@rmwc/icon-button",styles:["@material/icon-button/dist/mdc.icon-button.css"],docsLink:"https://material.io/develop/web/components/buttons/icon-buttons/",examples:r},s.a.createElement(a.f,null,"Basic Usage"),s.a.createElement(a.e,null,"`IconButton` inherits from the `Icon` component and can be passed icons in the same way."),s.a.createElement(a.c,{label:"Default"},s.a.createElement(s.a.Fragment,null,s.a.createElement(d.a,{icon:"star",label:"Rate this!"}),s.a.createElement(d.a,{icon:"favorite",label:"Favorite",disabled:!0}),s.a.createElement(d.a,{icon:"images/icons/twitter.png","aria-label":"Tweet it!",tag:"a",target:"_blank",href:"https://twitter.com/intent/tweet?text=".concat(encodeURIComponent("You should definitely be using RMWC for your next project! https://jamesmfriedman.github.io/rmwc/"))}))),s.a.createElement(a.f,null,"Usage as a Toggle"),s.a.createElement(a.e,null,"To use as a toggle, specify an additional toggled on state using 'onIcon'."),s.a.createElement(a.c,{label:"Uncontrolled"},s.a.createElement(s.a.Fragment,null,s.a.createElement(d.a,{icon:"favorite_border",onIcon:"favorite"}),s.a.createElement(d.a,{icon:"favorite",onIcon:"favorite",disabled:!0}))),s.a.createElement(a.c,{label:"Controlled"},function(){var e=s.a.useState(!1),t=Object(o.a)(e,2),n=t[0],i=t[1];return s.a.createElement(s.a.Fragment,null,s.a.createElement(d.a,{checked:n,onClick:function(){return i(!n)},onIcon:"star",icon:"star_border"}),s.a.createElement(d.a,{checked:n,onClick:function(){return i(!n)},onIcon:"images/icons/twitter.png",icon:"images/icons/facebook.png"}))}),s.a.createElement(a.c,{label:"Component as Icon"},s.a.createElement(d.a,{onIcon:s.a.createElement("div",{style:{background:"red",width:"24px",height:"24px"}}),icon:s.a.createElement("div",{style:{background:"green",width:"24px",height:"24px",borderRadius:"50%"}})})),s.a.createElement(a.a,{src:c,components:[d.a]}))}}}]);
//# sourceMappingURL=18.582001d2.chunk.js.map