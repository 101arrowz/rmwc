{"version":3,"sources":["../node_modules/@material/floating-label/constants.js","../node_modules/@material/floating-label/foundation.js","../node_modules/@material/notched-outline/constants.js","../node_modules/@material/notched-outline/foundation.js","../node_modules/@material/line-ripple/constants.js","../node_modules/@material/line-ripple/foundation.js","../node_modules/@material/textfield/constants.js","../node_modules/@material/textfield/foundation.js","../node_modules/@material/textfield/character-counter/constants.js","../node_modules/@material/textfield/character-counter/foundation.js","../node_modules/@material/textfield/icon/constants.js","../node_modules/@material/textfield/icon/foundation.js"],"names":["cssClasses","LABEL_FLOAT_ABOVE","LABEL_SHAKE","ROOT","__webpack_require__","d","__webpack_exports__","foundation_MDCFloatingLabelFoundation","_super","MDCFloatingLabelFoundation","adapter","_this","call","this","tslib_es6","defaultAdapter","shakeAnimationEndHandler_","handleShakeAnimationEnd_","Object","defineProperty","get","enumerable","configurable","addClass","removeClass","getWidth","registerInteractionHandler","deregisterInteractionHandler","prototype","init","adapter_","destroy","shake","shouldShake","float","shouldFloat","_a","foundation","strings","NOTCH_ELEMENT_SELECTOR","numbers","NOTCH_ELEMENT_PADDING","NO_LABEL","OUTLINE_NOTCHED","OUTLINE_UPGRADED","foundation_MDCNotchedOutlineFoundation","MDCNotchedOutlineFoundation","setNotchWidthProperty","removeNotchWidthProperty","notch","notchWidth","closeNotch","LINE_RIPPLE_ACTIVE","LINE_RIPPLE_DEACTIVATING","foundation_MDCLineRippleFoundation","MDCLineRippleFoundation","transitionEndHandler_","evt","handleTransitionEnd","hasClass","setStyle","registerEventHandler","deregisterEventHandler","activate","setRippleCenter","xCoordinate","deactivate","isDeactivating","propertyName","ARIA_CONTROLS","ICON_SELECTOR","INPUT_SELECTOR","LABEL_SELECTOR","LINE_RIPPLE_SELECTOR","OUTLINE_SELECTOR","DENSE","DISABLED","FOCUSED","HELPER_LINE","INVALID","OUTLINED","TEXTAREA","WITH_LEADING_ICON","DENSE_LABEL_SCALE","LABEL_SCALE","VALIDATION_ATTR_WHITELIST","ALWAYS_FLOAT_TYPES","foundation_MDCTextFieldFoundation","POINTERDOWN_EVENTS","INTERACTION_EVENTS","MDCTextFieldFoundation","foundationMap","isFocused_","receivedUserInput_","isValid_","useNativeValidation_","helperText_","helperText","characterCounter_","characterCounter","leadingIcon_","leadingIcon","trailingIcon_","trailingIcon","inputFocusHandler_","activateFocus","inputBlurHandler_","deactivateFocus","inputInputHandler_","handleInput","setPointerXOffset_","setTransformOrigin","textFieldInteractionHandler_","handleTextFieldInteraction","validationAttributeChangeHandler_","attributesList","handleValidationAttributeChange","isValid","Boolean","getValue","type","getNativeInput_","indexOf","shouldAlwaysFloat_","isBadInput_","registerTextFieldInteractionHandler","deregisterTextFieldInteractionHandler","registerInputInteractionHandler","deregisterInputInteractionHandler","registerValidationAttributeChangeHandler","MutationObserver","deregisterValidationAttributeChangeHandler","getNativeInput","isFocused","activateLineRipple","deactivateLineRipple","setLineRippleTransformOrigin","shakeLabel","floatLabel","hasLabel","getLabelWidth","hasOutline","notchOutline","closeOutline","forEach","evtType","validationObserver_","setCharacterCounter_","length","nativeInput","disabled","some","attributeName","styleValidity_","openNotch","labelScale","labelWidth","styleFocused_","showToScreenReader","touches","targetEvent","targetClientRect","target","getBoundingClientRect","normalizedX","clientX","left","autoCompleteFocus","value","setValue","isNativeInputValid_","setValid","setUseNativeValidation","useNativeValidation","isDisabled","setDisabled","styleDisabled_","setHelperTextContent","content","setContent","setLeadingIconAriaLabel","label","setAriaLabel","setLeadingIconContent","setTrailingIconAriaLabel","setTrailingIconContent","currentLength","maxLength","Error","setCounterValue","validity","badInput","valid","setValidity","ROOT_SELECTOR","foundation_MDCTextFieldCharacterCounterFoundation","MDCTextFieldCharacterCounterFoundation","Math","min","ICON_EVENT","ICON_ROLE","foundation_MDCTextFieldIconFoundation","MDCTextFieldIconFoundation","savedTabIndex_","interactionHandler_","handleInteraction","getAttr","setAttr","removeAttr","notifyIconAction","isEnterKey","key","keyCode"],"mappings":"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","file":"static/js/2.262ae786.chunk.js","sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport var cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',\n  LABEL_SHAKE: 'mdc-floating-label--shake',\n  ROOT: 'mdc-floating-label'\n};","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses } from './constants';\n\nvar MDCFloatingLabelFoundation =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCFloatingLabelFoundation, _super);\n\n  function MDCFloatingLabelFoundation(adapter) {\n    var _this = _super.call(this, tslib_1.__assign({}, MDCFloatingLabelFoundation.defaultAdapter, adapter)) || this;\n\n    _this.shakeAnimationEndHandler_ = function () {\n      return _this.handleShakeAnimationEnd_();\n    };\n\n    return _this;\n  }\n\n  Object.defineProperty(MDCFloatingLabelFoundation, \"cssClasses\", {\n    get: function get() {\n      return cssClasses;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCFloatingLabelFoundation, \"defaultAdapter\", {\n    /**\n     * See {@link MDCFloatingLabelAdapter} for typing information on parameters and return types.\n     */\n    get: function get() {\n      // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n      return {\n        addClass: function addClass() {\n          return undefined;\n        },\n        removeClass: function removeClass() {\n          return undefined;\n        },\n        getWidth: function getWidth() {\n          return 0;\n        },\n        registerInteractionHandler: function registerInteractionHandler() {\n          return undefined;\n        },\n        deregisterInteractionHandler: function deregisterInteractionHandler() {\n          return undefined;\n        }\n      }; // tslint:enable:object-literal-sort-keys\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCFloatingLabelFoundation.prototype.init = function () {\n    this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  };\n\n  MDCFloatingLabelFoundation.prototype.destroy = function () {\n    this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  };\n  /**\n   * Returns the width of the label element.\n   */\n\n\n  MDCFloatingLabelFoundation.prototype.getWidth = function () {\n    return this.adapter_.getWidth();\n  };\n  /**\n   * Styles the label to produce a shake animation to indicate an error.\n   * @param shouldShake If true, adds the shake CSS class; otherwise, removes shake class.\n   */\n\n\n  MDCFloatingLabelFoundation.prototype.shake = function (shouldShake) {\n    var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;\n\n    if (shouldShake) {\n      this.adapter_.addClass(LABEL_SHAKE);\n    } else {\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  };\n  /**\n   * Styles the label to float or dock.\n   * @param shouldFloat If true, adds the float CSS class; otherwise, removes float and shake classes to dock the label.\n   */\n\n\n  MDCFloatingLabelFoundation.prototype.float = function (shouldFloat) {\n    var _a = MDCFloatingLabelFoundation.cssClasses,\n        LABEL_FLOAT_ABOVE = _a.LABEL_FLOAT_ABOVE,\n        LABEL_SHAKE = _a.LABEL_SHAKE;\n\n    if (shouldFloat) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  };\n\n  MDCFloatingLabelFoundation.prototype.handleShakeAnimationEnd_ = function () {\n    var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;\n    this.adapter_.removeClass(LABEL_SHAKE);\n  };\n\n  return MDCFloatingLabelFoundation;\n}(MDCFoundation);\n\nexport { MDCFloatingLabelFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCFloatingLabelFoundation;","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar strings = {\n  NOTCH_ELEMENT_SELECTOR: '.mdc-notched-outline__notch'\n};\nvar numbers = {\n  // This should stay in sync with $mdc-notched-outline-padding * 2.\n  NOTCH_ELEMENT_PADDING: 8\n};\nvar cssClasses = {\n  NO_LABEL: 'mdc-notched-outline--no-label',\n  OUTLINE_NOTCHED: 'mdc-notched-outline--notched',\n  OUTLINE_UPGRADED: 'mdc-notched-outline--upgraded'\n};\nexport { cssClasses, numbers, strings };","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\n\nvar MDCNotchedOutlineFoundation =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCNotchedOutlineFoundation, _super);\n\n  function MDCNotchedOutlineFoundation(adapter) {\n    return _super.call(this, tslib_1.__assign({}, MDCNotchedOutlineFoundation.defaultAdapter, adapter)) || this;\n  }\n\n  Object.defineProperty(MDCNotchedOutlineFoundation, \"strings\", {\n    get: function get() {\n      return strings;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCNotchedOutlineFoundation, \"cssClasses\", {\n    get: function get() {\n      return cssClasses;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCNotchedOutlineFoundation, \"numbers\", {\n    get: function get() {\n      return numbers;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCNotchedOutlineFoundation, \"defaultAdapter\", {\n    /**\n     * See {@link MDCNotchedOutlineAdapter} for typing information on parameters and return types.\n     */\n    get: function get() {\n      // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n      return {\n        addClass: function addClass() {\n          return undefined;\n        },\n        removeClass: function removeClass() {\n          return undefined;\n        },\n        setNotchWidthProperty: function setNotchWidthProperty() {\n          return undefined;\n        },\n        removeNotchWidthProperty: function removeNotchWidthProperty() {\n          return undefined;\n        }\n      }; // tslint:enable:object-literal-sort-keys\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Adds the outline notched selector and updates the notch width calculated based off of notchWidth.\n   */\n\n  MDCNotchedOutlineFoundation.prototype.notch = function (notchWidth) {\n    var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;\n\n    if (notchWidth > 0) {\n      notchWidth += numbers.NOTCH_ELEMENT_PADDING; // Add padding from left/right.\n    }\n\n    this.adapter_.setNotchWidthProperty(notchWidth);\n    this.adapter_.addClass(OUTLINE_NOTCHED);\n  };\n  /**\n   * Removes notched outline selector to close the notch in the outline.\n   */\n\n\n  MDCNotchedOutlineFoundation.prototype.closeNotch = function () {\n    var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;\n    this.adapter_.removeClass(OUTLINE_NOTCHED);\n    this.adapter_.removeNotchWidthProperty();\n  };\n\n  return MDCNotchedOutlineFoundation;\n}(MDCFoundation);\n\nexport { MDCNotchedOutlineFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCNotchedOutlineFoundation;","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating'\n};\nexport { cssClasses };","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses } from './constants';\n\nvar MDCLineRippleFoundation =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCLineRippleFoundation, _super);\n\n  function MDCLineRippleFoundation(adapter) {\n    var _this = _super.call(this, tslib_1.__assign({}, MDCLineRippleFoundation.defaultAdapter, adapter)) || this;\n\n    _this.transitionEndHandler_ = function (evt) {\n      return _this.handleTransitionEnd(evt);\n    };\n\n    return _this;\n  }\n\n  Object.defineProperty(MDCLineRippleFoundation, \"cssClasses\", {\n    get: function get() {\n      return cssClasses;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCLineRippleFoundation, \"defaultAdapter\", {\n    /**\n     * See {@link MDCLineRippleAdapter} for typing information on parameters and return types.\n     */\n    get: function get() {\n      // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n      return {\n        addClass: function addClass() {\n          return undefined;\n        },\n        removeClass: function removeClass() {\n          return undefined;\n        },\n        hasClass: function hasClass() {\n          return false;\n        },\n        setStyle: function setStyle() {\n          return undefined;\n        },\n        registerEventHandler: function registerEventHandler() {\n          return undefined;\n        },\n        deregisterEventHandler: function deregisterEventHandler() {\n          return undefined;\n        }\n      }; // tslint:enable:object-literal-sort-keys\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCLineRippleFoundation.prototype.init = function () {\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n  };\n\n  MDCLineRippleFoundation.prototype.destroy = function () {\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  };\n\n  MDCLineRippleFoundation.prototype.activate = function () {\n    this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  };\n\n  MDCLineRippleFoundation.prototype.setRippleCenter = function (xCoordinate) {\n    this.adapter_.setStyle('transform-origin', xCoordinate + \"px center\");\n  };\n\n  MDCLineRippleFoundation.prototype.deactivate = function () {\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  };\n\n  MDCLineRippleFoundation.prototype.handleTransitionEnd = function (evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    var isDeactivating = this.adapter_.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  };\n\n  return MDCLineRippleFoundation;\n}(MDCFoundation);\n\nexport { MDCLineRippleFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCLineRippleFoundation;","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  ICON_SELECTOR: '.mdc-text-field__icon',\n  INPUT_SELECTOR: '.mdc-text-field__input',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n  OUTLINE_SELECTOR: '.mdc-notched-outline'\n};\nvar cssClasses = {\n  DENSE: 'mdc-text-field--dense',\n  DISABLED: 'mdc-text-field--disabled',\n  FOCUSED: 'mdc-text-field--focused',\n  HELPER_LINE: 'mdc-text-field-helper-line',\n  INVALID: 'mdc-text-field--invalid',\n  OUTLINED: 'mdc-text-field--outlined',\n  ROOT: 'mdc-text-field',\n  TEXTAREA: 'mdc-text-field--textarea',\n  WITH_LEADING_ICON: 'mdc-text-field--with-leading-icon'\n};\nvar numbers = {\n  DENSE_LABEL_SCALE: 0.923,\n  LABEL_SCALE: 0.75\n};\n/**\n * Whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n * under the \"Validation-related attributes\" section.\n */\n\nvar VALIDATION_ATTR_WHITELIST = ['pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength'];\n/**\n * Label should always float for these types as they show some UI even if value is empty.\n */\n\nvar ALWAYS_FLOAT_TYPES = ['color', 'date', 'datetime-local', 'month', 'range', 'time', 'week'];\nexport { cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST, ALWAYS_FLOAT_TYPES };","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { ALWAYS_FLOAT_TYPES, cssClasses, numbers, strings, VALIDATION_ATTR_WHITELIST } from './constants';\nvar POINTERDOWN_EVENTS = ['mousedown', 'touchstart'];\nvar INTERACTION_EVENTS = ['click', 'keydown'];\n\nvar MDCTextFieldFoundation =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCTextFieldFoundation, _super);\n  /**\n   * @param adapter\n   * @param foundationMap Map from subcomponent names to their subfoundations.\n   */\n\n\n  function MDCTextFieldFoundation(adapter, foundationMap) {\n    if (foundationMap === void 0) {\n      foundationMap = {};\n    }\n\n    var _this = _super.call(this, tslib_1.__assign({}, MDCTextFieldFoundation.defaultAdapter, adapter)) || this;\n\n    _this.isFocused_ = false;\n    _this.receivedUserInput_ = false;\n    _this.isValid_ = true;\n    _this.useNativeValidation_ = true;\n    _this.helperText_ = foundationMap.helperText;\n    _this.characterCounter_ = foundationMap.characterCounter;\n    _this.leadingIcon_ = foundationMap.leadingIcon;\n    _this.trailingIcon_ = foundationMap.trailingIcon;\n\n    _this.inputFocusHandler_ = function () {\n      return _this.activateFocus();\n    };\n\n    _this.inputBlurHandler_ = function () {\n      return _this.deactivateFocus();\n    };\n\n    _this.inputInputHandler_ = function () {\n      return _this.handleInput();\n    };\n\n    _this.setPointerXOffset_ = function (evt) {\n      return _this.setTransformOrigin(evt);\n    };\n\n    _this.textFieldInteractionHandler_ = function () {\n      return _this.handleTextFieldInteraction();\n    };\n\n    _this.validationAttributeChangeHandler_ = function (attributesList) {\n      return _this.handleValidationAttributeChange(attributesList);\n    };\n\n    return _this;\n  }\n\n  Object.defineProperty(MDCTextFieldFoundation, \"cssClasses\", {\n    get: function get() {\n      return cssClasses;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextFieldFoundation, \"strings\", {\n    get: function get() {\n      return strings;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextFieldFoundation, \"numbers\", {\n    get: function get() {\n      return numbers;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextFieldFoundation.prototype, \"shouldShake\", {\n    get: function get() {\n      return !this.isFocused_ && !this.isValid() && Boolean(this.getValue());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextFieldFoundation.prototype, \"shouldAlwaysFloat_\", {\n    get: function get() {\n      var type = this.getNativeInput_().type;\n      return ALWAYS_FLOAT_TYPES.indexOf(type) >= 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextFieldFoundation.prototype, \"shouldFloat\", {\n    get: function get() {\n      return this.shouldAlwaysFloat_ || this.isFocused_ || Boolean(this.getValue()) || this.isBadInput_();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextFieldFoundation, \"defaultAdapter\", {\n    /**\n     * See {@link MDCTextFieldAdapter} for typing information on parameters and return types.\n     */\n    get: function get() {\n      // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n      return {\n        addClass: function addClass() {\n          return undefined;\n        },\n        removeClass: function removeClass() {\n          return undefined;\n        },\n        hasClass: function hasClass() {\n          return true;\n        },\n        registerTextFieldInteractionHandler: function registerTextFieldInteractionHandler() {\n          return undefined;\n        },\n        deregisterTextFieldInteractionHandler: function deregisterTextFieldInteractionHandler() {\n          return undefined;\n        },\n        registerInputInteractionHandler: function registerInputInteractionHandler() {\n          return undefined;\n        },\n        deregisterInputInteractionHandler: function deregisterInputInteractionHandler() {\n          return undefined;\n        },\n        registerValidationAttributeChangeHandler: function registerValidationAttributeChangeHandler() {\n          return new MutationObserver(function () {\n            return undefined;\n          });\n        },\n        deregisterValidationAttributeChangeHandler: function deregisterValidationAttributeChangeHandler() {\n          return undefined;\n        },\n        getNativeInput: function getNativeInput() {\n          return null;\n        },\n        isFocused: function isFocused() {\n          return false;\n        },\n        activateLineRipple: function activateLineRipple() {\n          return undefined;\n        },\n        deactivateLineRipple: function deactivateLineRipple() {\n          return undefined;\n        },\n        setLineRippleTransformOrigin: function setLineRippleTransformOrigin() {\n          return undefined;\n        },\n        shakeLabel: function shakeLabel() {\n          return undefined;\n        },\n        floatLabel: function floatLabel() {\n          return undefined;\n        },\n        hasLabel: function hasLabel() {\n          return false;\n        },\n        getLabelWidth: function getLabelWidth() {\n          return 0;\n        },\n        hasOutline: function hasOutline() {\n          return false;\n        },\n        notchOutline: function notchOutline() {\n          return undefined;\n        },\n        closeOutline: function closeOutline() {\n          return undefined;\n        }\n      }; // tslint:enable:object-literal-sort-keys\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCTextFieldFoundation.prototype.init = function () {\n    var _this = this;\n\n    if (this.adapter_.isFocused()) {\n      this.inputFocusHandler_();\n    } else if (this.adapter_.hasLabel() && this.shouldFloat) {\n      this.notchOutline(true);\n      this.adapter_.floatLabel(true);\n    }\n\n    this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);\n    POINTERDOWN_EVENTS.forEach(function (evtType) {\n      _this.adapter_.registerInputInteractionHandler(evtType, _this.setPointerXOffset_);\n    });\n    INTERACTION_EVENTS.forEach(function (evtType) {\n      _this.adapter_.registerTextFieldInteractionHandler(evtType, _this.textFieldInteractionHandler_);\n    });\n    this.validationObserver_ = this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);\n    this.setCharacterCounter_(this.getValue().length);\n  };\n\n  MDCTextFieldFoundation.prototype.destroy = function () {\n    var _this = this;\n\n    this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n    POINTERDOWN_EVENTS.forEach(function (evtType) {\n      _this.adapter_.deregisterInputInteractionHandler(evtType, _this.setPointerXOffset_);\n    });\n    INTERACTION_EVENTS.forEach(function (evtType) {\n      _this.adapter_.deregisterTextFieldInteractionHandler(evtType, _this.textFieldInteractionHandler_);\n    });\n    this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);\n  };\n  /**\n   * Handles user interactions with the Text Field.\n   */\n\n\n  MDCTextFieldFoundation.prototype.handleTextFieldInteraction = function () {\n    var nativeInput = this.adapter_.getNativeInput();\n\n    if (nativeInput && nativeInput.disabled) {\n      return;\n    }\n\n    this.receivedUserInput_ = true;\n  };\n  /**\n   * Handles validation attribute changes\n   */\n\n\n  MDCTextFieldFoundation.prototype.handleValidationAttributeChange = function (attributesList) {\n    var _this = this;\n\n    attributesList.some(function (attributeName) {\n      if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {\n        _this.styleValidity_(true);\n\n        return true;\n      }\n\n      return false;\n    });\n\n    if (attributesList.indexOf('maxlength') > -1) {\n      this.setCharacterCounter_(this.getValue().length);\n    }\n  };\n  /**\n   * Opens/closes the notched outline.\n   */\n\n\n  MDCTextFieldFoundation.prototype.notchOutline = function (openNotch) {\n    if (!this.adapter_.hasOutline()) {\n      return;\n    }\n\n    if (openNotch) {\n      var isDense = this.adapter_.hasClass(cssClasses.DENSE);\n      var labelScale = isDense ? numbers.DENSE_LABEL_SCALE : numbers.LABEL_SCALE;\n      var labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      this.adapter_.notchOutline(labelWidth);\n    } else {\n      this.adapter_.closeOutline();\n    }\n  };\n  /**\n   * Activates the text field focus state.\n   */\n\n\n  MDCTextFieldFoundation.prototype.activateFocus = function () {\n    this.isFocused_ = true;\n    this.styleFocused_(this.isFocused_);\n    this.adapter_.activateLineRipple();\n\n    if (this.adapter_.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  };\n  /**\n   * Sets the line ripple's transform origin, so that the line ripple activate\n   * animation will animate out from the user's click location.\n   */\n\n\n  MDCTextFieldFoundation.prototype.setTransformOrigin = function (evt) {\n    var touches = evt.touches;\n    var targetEvent = touches ? touches[0] : evt;\n    var targetClientRect = targetEvent.target.getBoundingClientRect();\n    var normalizedX = targetEvent.clientX - targetClientRect.left;\n    this.adapter_.setLineRippleTransformOrigin(normalizedX);\n  };\n  /**\n   * Handles input change of text input and text area.\n   */\n\n\n  MDCTextFieldFoundation.prototype.handleInput = function () {\n    this.autoCompleteFocus();\n    this.setCharacterCounter_(this.getValue().length);\n  };\n  /**\n   * Activates the Text Field's focus state in cases when the input value\n   * changes without user input (e.g. programmatically).\n   */\n\n\n  MDCTextFieldFoundation.prototype.autoCompleteFocus = function () {\n    if (!this.receivedUserInput_) {\n      this.activateFocus();\n    }\n  };\n  /**\n   * Deactivates the Text Field's focus state.\n   */\n\n\n  MDCTextFieldFoundation.prototype.deactivateFocus = function () {\n    this.isFocused_ = false;\n    this.adapter_.deactivateLineRipple();\n    var isValid = this.isValid();\n    this.styleValidity_(isValid);\n    this.styleFocused_(this.isFocused_);\n\n    if (this.adapter_.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n\n    if (!this.shouldFloat) {\n      this.receivedUserInput_ = false;\n    }\n  };\n\n  MDCTextFieldFoundation.prototype.getValue = function () {\n    return this.getNativeInput_().value;\n  };\n  /**\n   * @param value The value to set on the input Element.\n   */\n\n\n  MDCTextFieldFoundation.prototype.setValue = function (value) {\n    // Prevent Safari from moving the caret to the end of the input when the value has not changed.\n    if (this.getValue() !== value) {\n      this.getNativeInput_().value = value;\n    }\n\n    var isValid = this.isValid();\n    this.styleValidity_(isValid);\n\n    if (this.adapter_.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n  };\n  /**\n   * @return The custom validity state, if set; otherwise, the result of a native validity check.\n   */\n\n\n  MDCTextFieldFoundation.prototype.isValid = function () {\n    return this.useNativeValidation_ ? this.isNativeInputValid_() : this.isValid_;\n  };\n  /**\n   * @param isValid Sets the custom validity state of the Text Field.\n   */\n\n\n  MDCTextFieldFoundation.prototype.setValid = function (isValid) {\n    this.isValid_ = isValid;\n    this.styleValidity_(isValid);\n    var shouldShake = !isValid && !this.isFocused_;\n\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(shouldShake);\n    }\n  };\n  /**\n   * Enables or disables the use of native validation. Use this for custom validation.\n   * @param useNativeValidation Set this to false to ignore native input validation.\n   */\n\n\n  MDCTextFieldFoundation.prototype.setUseNativeValidation = function (useNativeValidation) {\n    this.useNativeValidation_ = useNativeValidation;\n  };\n\n  MDCTextFieldFoundation.prototype.isDisabled = function () {\n    return this.getNativeInput_().disabled;\n  };\n  /**\n   * @param disabled Sets the text-field disabled or enabled.\n   */\n\n\n  MDCTextFieldFoundation.prototype.setDisabled = function (disabled) {\n    this.getNativeInput_().disabled = disabled;\n    this.styleDisabled_(disabled);\n  };\n  /**\n   * @param content Sets the content of the helper text.\n   */\n\n\n  MDCTextFieldFoundation.prototype.setHelperTextContent = function (content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  };\n  /**\n   * Sets the aria label of the leading icon.\n   */\n\n\n  MDCTextFieldFoundation.prototype.setLeadingIconAriaLabel = function (label) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setAriaLabel(label);\n    }\n  };\n  /**\n   * Sets the text content of the leading icon.\n   */\n\n\n  MDCTextFieldFoundation.prototype.setLeadingIconContent = function (content) {\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setContent(content);\n    }\n  };\n  /**\n   * Sets the aria label of the trailing icon.\n   */\n\n\n  MDCTextFieldFoundation.prototype.setTrailingIconAriaLabel = function (label) {\n    if (this.trailingIcon_) {\n      this.trailingIcon_.setAriaLabel(label);\n    }\n  };\n  /**\n   * Sets the text content of the trailing icon.\n   */\n\n\n  MDCTextFieldFoundation.prototype.setTrailingIconContent = function (content) {\n    if (this.trailingIcon_) {\n      this.trailingIcon_.setContent(content);\n    }\n  };\n  /**\n   * Sets character counter values that shows characters used and the total character limit.\n   */\n\n\n  MDCTextFieldFoundation.prototype.setCharacterCounter_ = function (currentLength) {\n    if (!this.characterCounter_) return;\n    var maxLength = this.getNativeInput_().maxLength;\n\n    if (maxLength === -1) {\n      throw new Error('MDCTextFieldFoundation: Expected maxlength html property on text input or textarea.');\n    }\n\n    this.characterCounter_.setCounterValue(currentLength, maxLength);\n  };\n  /**\n   * @return True if the Text Field input fails in converting the user-supplied value.\n   */\n\n\n  MDCTextFieldFoundation.prototype.isBadInput_ = function () {\n    // The badInput property is not supported in IE 11 💩.\n    return this.getNativeInput_().validity.badInput || false;\n  };\n  /**\n   * @return The result of native validity checking (ValidityState.valid).\n   */\n\n\n  MDCTextFieldFoundation.prototype.isNativeInputValid_ = function () {\n    return this.getNativeInput_().validity.valid;\n  };\n  /**\n   * Styles the component based on the validity state.\n   */\n\n\n  MDCTextFieldFoundation.prototype.styleValidity_ = function (isValid) {\n    var INVALID = MDCTextFieldFoundation.cssClasses.INVALID;\n\n    if (isValid) {\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.addClass(INVALID);\n    }\n\n    if (this.helperText_) {\n      this.helperText_.setValidity(isValid);\n    }\n  };\n  /**\n   * Styles the component based on the focused state.\n   */\n\n\n  MDCTextFieldFoundation.prototype.styleFocused_ = function (isFocused) {\n    var FOCUSED = MDCTextFieldFoundation.cssClasses.FOCUSED;\n\n    if (isFocused) {\n      this.adapter_.addClass(FOCUSED);\n    } else {\n      this.adapter_.removeClass(FOCUSED);\n    }\n  };\n  /**\n   * Styles the component based on the disabled state.\n   */\n\n\n  MDCTextFieldFoundation.prototype.styleDisabled_ = function (isDisabled) {\n    var _a = MDCTextFieldFoundation.cssClasses,\n        DISABLED = _a.DISABLED,\n        INVALID = _a.INVALID;\n\n    if (isDisabled) {\n      this.adapter_.addClass(DISABLED);\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n\n    if (this.leadingIcon_) {\n      this.leadingIcon_.setDisabled(isDisabled);\n    }\n\n    if (this.trailingIcon_) {\n      this.trailingIcon_.setDisabled(isDisabled);\n    }\n  };\n  /**\n   * @return The native text input element from the host environment, or an object with the same shape for unit tests.\n   */\n\n\n  MDCTextFieldFoundation.prototype.getNativeInput_ = function () {\n    // this.adapter_ may be undefined in foundation unit tests. This happens when testdouble is creating a mock object\n    // and invokes the shouldShake/shouldFloat getters (which in turn call getValue(), which calls this method) before\n    // init() has been called from the MDCTextField constructor. To work around that issue, we return a dummy object.\n    var nativeInput = this.adapter_ ? this.adapter_.getNativeInput() : null;\n    return nativeInput || {\n      disabled: false,\n      maxLength: -1,\n      type: 'input',\n      validity: {\n        badInput: false,\n        valid: true\n      },\n      value: ''\n    };\n  };\n\n  return MDCTextFieldFoundation;\n}(MDCFoundation);\n\nexport { MDCTextFieldFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCTextFieldFoundation;","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n  ROOT: 'mdc-text-field-character-counter'\n};\nvar strings = {\n  ROOT_SELECTOR: \".\" + cssClasses.ROOT\n};\nexport { strings, cssClasses };","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\n\nvar MDCTextFieldCharacterCounterFoundation =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCTextFieldCharacterCounterFoundation, _super);\n\n  function MDCTextFieldCharacterCounterFoundation(adapter) {\n    return _super.call(this, tslib_1.__assign({}, MDCTextFieldCharacterCounterFoundation.defaultAdapter, adapter)) || this;\n  }\n\n  Object.defineProperty(MDCTextFieldCharacterCounterFoundation, \"cssClasses\", {\n    get: function get() {\n      return cssClasses;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextFieldCharacterCounterFoundation, \"strings\", {\n    get: function get() {\n      return strings;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextFieldCharacterCounterFoundation, \"defaultAdapter\", {\n    /**\n     * See {@link MDCTextFieldCharacterCounterAdapter} for typing information on parameters and return types.\n     */\n    get: function get() {\n      return {\n        setContent: function setContent() {\n          return undefined;\n        }\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCTextFieldCharacterCounterFoundation.prototype.setCounterValue = function (currentLength, maxLength) {\n    currentLength = Math.min(currentLength, maxLength);\n    this.adapter_.setContent(currentLength + \" / \" + maxLength);\n  };\n\n  return MDCTextFieldCharacterCounterFoundation;\n}(MDCFoundation);\n\nexport { MDCTextFieldCharacterCounterFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCTextFieldCharacterCounterFoundation;","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar strings = {\n  ICON_EVENT: 'MDCTextField:icon',\n  ICON_ROLE: 'button'\n};\nexport { strings };","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { strings } from './constants';\nvar INTERACTION_EVENTS = ['click', 'keydown'];\n\nvar MDCTextFieldIconFoundation =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCTextFieldIconFoundation, _super);\n\n  function MDCTextFieldIconFoundation(adapter) {\n    var _this = _super.call(this, tslib_1.__assign({}, MDCTextFieldIconFoundation.defaultAdapter, adapter)) || this;\n\n    _this.savedTabIndex_ = null;\n\n    _this.interactionHandler_ = function (evt) {\n      return _this.handleInteraction(evt);\n    };\n\n    return _this;\n  }\n\n  Object.defineProperty(MDCTextFieldIconFoundation, \"strings\", {\n    get: function get() {\n      return strings;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCTextFieldIconFoundation, \"defaultAdapter\", {\n    /**\n     * See {@link MDCTextFieldIconAdapter} for typing information on parameters and return types.\n     */\n    get: function get() {\n      // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n      return {\n        getAttr: function getAttr() {\n          return null;\n        },\n        setAttr: function setAttr() {\n          return undefined;\n        },\n        removeAttr: function removeAttr() {\n          return undefined;\n        },\n        setContent: function setContent() {\n          return undefined;\n        },\n        registerInteractionHandler: function registerInteractionHandler() {\n          return undefined;\n        },\n        deregisterInteractionHandler: function deregisterInteractionHandler() {\n          return undefined;\n        },\n        notifyIconAction: function notifyIconAction() {\n          return undefined;\n        }\n      }; // tslint:enable:object-literal-sort-keys\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCTextFieldIconFoundation.prototype.init = function () {\n    var _this = this;\n\n    this.savedTabIndex_ = this.adapter_.getAttr('tabindex');\n    INTERACTION_EVENTS.forEach(function (evtType) {\n      _this.adapter_.registerInteractionHandler(evtType, _this.interactionHandler_);\n    });\n  };\n\n  MDCTextFieldIconFoundation.prototype.destroy = function () {\n    var _this = this;\n\n    INTERACTION_EVENTS.forEach(function (evtType) {\n      _this.adapter_.deregisterInteractionHandler(evtType, _this.interactionHandler_);\n    });\n  };\n\n  MDCTextFieldIconFoundation.prototype.setDisabled = function (disabled) {\n    if (!this.savedTabIndex_) {\n      return;\n    }\n\n    if (disabled) {\n      this.adapter_.setAttr('tabindex', '-1');\n      this.adapter_.removeAttr('role');\n    } else {\n      this.adapter_.setAttr('tabindex', this.savedTabIndex_);\n      this.adapter_.setAttr('role', strings.ICON_ROLE);\n    }\n  };\n\n  MDCTextFieldIconFoundation.prototype.setAriaLabel = function (label) {\n    this.adapter_.setAttr('aria-label', label);\n  };\n\n  MDCTextFieldIconFoundation.prototype.setContent = function (content) {\n    this.adapter_.setContent(content);\n  };\n\n  MDCTextFieldIconFoundation.prototype.handleInteraction = function (evt) {\n    var isEnterKey = evt.key === 'Enter' || evt.keyCode === 13;\n\n    if (evt.type === 'click' || isEnterKey) {\n      this.adapter_.notifyIconAction();\n    }\n  };\n\n  return MDCTextFieldIconFoundation;\n}(MDCFoundation);\n\nexport { MDCTextFieldIconFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCTextFieldIconFoundation;"],"sourceRoot":""}