{"version":3,"sources":["select/readme.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_doc_utils__WEBPACK_IMPORTED_MODULE_1__","_generated_props_json__WEBPACK_IMPORTED_MODULE_2__","_generated_examples_json__WEBPACK_IMPORTED_MODULE_3__","___WEBPACK_IMPORTED_MODULE_4__","a","createElement","title","lead","module","styles","docsLink","examples","label","options","outlined","enhanced","defaultValue","helpText","icon","required","invalid","disabled","value","aria-disabled","tabIndex","1","2","3","placeholder","src","propsSrc","components","Select"],"mappings":"ip1JAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAQeE,EAAA,mBACb,OACEE,EAAAM,EAAAC,cAACL,EAAA,EAAD,CACEM,MAAM,eACNC,KAAK,oEACLC,OAAO,eACPC,OAAQ,CACN,uCACA,uDACA,yDACA,iDACA,mCACA,mCACA,oDAEFC,SAAS,0EACTC,SAAUA,GAEVb,EAAAM,EAAAC,cAACL,EAAA,EAAD,sBACAF,EAAAM,EAAAC,cAACL,EAAA,EAAD,iFAIAF,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAaY,MAAM,YACjBd,EAAAM,EAAAC,cAACF,EAAA,EAAD,CAAQS,MAAM,WAAWC,QAAS,CAAC,UAAW,QAAS,eAGzDf,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAaY,MAAM,YACjBd,EAAAM,EAAAC,cAACF,EAAA,EAAD,CACES,MAAM,WACNE,UAAQ,EACRD,QAAS,CAAC,UAAW,QAAS,eAIlCf,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAaY,MAAM,YACjBd,EAAAM,EAAAC,cAACF,EAAA,EAAD,CACES,MAAM,WACNG,UAAQ,EACRF,QAAS,CAAC,UAAW,QAAS,eAIlCf,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAaY,MAAM,gBACjBd,EAAAM,EAAAC,cAACF,EAAA,EAAD,CACES,MAAM,YACNI,aAAa,QACbC,SAAS,gCACTC,KAAK,WACLL,QAAS,CAAC,UAAW,QAAS,eAIlCf,EAAAM,EAAAC,cAACL,EAAA,EAAD,mBACAF,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAaY,MAAM,YACjBd,EAAAM,EAAAC,cAACF,EAAA,EAAD,CACES,MAAM,WACNO,UAAQ,EACRN,QAAS,CAAC,UAAW,QAAS,eAGlCf,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAaY,MAAM,WACjBd,EAAAM,EAAAC,cAACF,EAAA,EAAD,CACES,MAAM,UACNQ,SAAO,EACPP,QAAS,CAAC,UAAW,QAAS,eAGlCf,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAaY,MAAM,YACjBd,EAAAM,EAAAC,cAACF,EAAA,EAAD,CACES,MAAM,WACNS,UAAQ,EACRR,QAAS,CAAC,UAAW,QAAS,eAIlCf,EAAAM,EAAAC,cAACL,EAAA,EAAD,4BACAF,EAAAM,EAAAC,cAACL,EAAA,EAAD,mUAQAF,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAaY,MAAM,qBAChB,WAqBC,OAAOd,EAAAM,EAAAC,cAACF,EAAA,EAAD,CAAQS,MAAM,QAAQC,QAnBb,CACd,CACED,MAAO,UACPU,MAAO,KAET,CACEV,MAAO,QACPU,MAAO,IAGPC,iBAAiB,EACjBC,UAAW,GAEb,CACEZ,MAAO,WACPU,MAAO,UAQfxB,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAaY,MAAM,sBACjBd,EAAAM,EAAAC,cAACF,EAAA,EAAD,CACES,MAAM,aACNC,QAAS,CAAEY,EAAK,UAAWC,EAAK,QAASC,EAAK,eAIlD7B,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAaY,MAAM,SACjBd,EAAAM,EAAAC,cAACF,EAAA,EAAD,CACES,MAAM,eACNgB,YAAY,mBACZf,QAAS,CAAC,UAAW,QAAS,eAIlCf,EAAAM,EAAAC,cAACL,EAAA,EAAD,mCACAF,EAAAM,EAAAC,cAACL,EAAA,EAAD,uGAKAF,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAaY,MAAM,kBACjBd,EAAAM,EAAAC,cAACF,EAAA,EAAD,CAAQS,MAAM,SAASI,aAAa,WAClClB,EAAAM,EAAAC,cAAA,UAAQiB,MAAM,WAAd,WACAxB,EAAAM,EAAAC,cAAA,UAAQiB,MAAM,SAAd,SACAxB,EAAAM,EAAAC,cAAA,UAAQiB,MAAM,YAAd,cAIJxB,EAAAM,EAAAC,cAACL,EAAA,EAAD,sBACAF,EAAAM,EAAAC,cAACL,EAAA,EAAD,sHAKAF,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAaY,MAAM,4BACjBd,EAAAM,EAAAC,cAACF,EAAA,EAAD,CACES,MAAM,YACNG,UAAQ,EACRF,QAAS,CACP,CACED,MAAO,SACPC,QAAS,CACP,CACED,MAAO,QACPU,MAAO,OAIb,CACEV,MAAO,UACPC,QAAS,CACP,CACED,MAAO,UACPU,MAAO,KAGT,CACEV,MAAO,WACPU,MAAO,WAOnBxB,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAaY,MAAM,kCACjBd,EAAAM,EAAAC,cAACF,EAAA,EAAD,CAAQS,MAAM,kBACZd,EAAAM,EAAAC,cAAA,YAAUO,MAAM,UACdd,EAAAM,EAAAC,cAAA,UAAQiB,MAAM,SAAd,UAEFxB,EAAAM,EAAAC,cAAA,YAAUO,MAAM,WACdd,EAAAM,EAAAC,cAAA,UAAQiB,MAAM,WAAd,WACAxB,EAAAM,EAAAC,cAAA,UAAQiB,MAAM,YAAd,eAKNxB,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAU6B,IAAKC,EAAUC,WAAY,CAACC","file":"static/js/27.07aab23f.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Docs, DocsExample, DocProps, DocsSubtitle, DocsP } from '@doc-utils';\nimport propsSrc from './generated-props.json';\nimport examples from './generated-examples.json';\n\nimport { Select } from '.';\n\nexport default function() {\n  return (\n    <Docs\n      title=\"Select Menus\"\n      lead=\"Menus display a list of choices on a transient sheet of material.\"\n      module=\"@rmwc/select\"\n      styles={[\n        '@material/select/dist/mdc.select.css',\n        '@material/floating-label/dist/mdc.floating-label.css',\n        '@material/notched-outline/dist/mdc.notched-outline.css',\n        '@material/line-ripple/dist/mdc.line-ripple.css',\n        '@material/list/dist/mdc.list.css',\n        '@material/menu/dist/mdc.menu.css',\n        '@material/menu-surface/dist/mdc.menu-surface.css'\n      ]}\n      docsLink=\"https://material.io/develop/web/components/input-controls/select-menus/\"\n      examples={examples}\n    >\n      <DocsSubtitle>Select Styles</DocsSubtitle>\n      <DocsP>\n        Selects come in three different styles: standard,outlined, and enhanced.\n      </DocsP>\n\n      <DocsExample label=\"Standard\">\n        <Select label=\"Standard\" options={['Cookies', 'Pizza', 'Icecream']} />\n      </DocsExample>\n\n      <DocsExample label=\"Outlined\">\n        <Select\n          label=\"Outlined\"\n          outlined\n          options={['Cookies', 'Pizza', 'Icecream']}\n        />\n      </DocsExample>\n\n      <DocsExample label=\"Enhanced\">\n        <Select\n          label=\"Enhanced\"\n          enhanced\n          options={['Cookies', 'Pizza', 'Icecream']}\n        />\n      </DocsExample>\n\n      <DocsExample label=\"With Options\">\n        <Select\n          label=\"With Icon\"\n          defaultValue=\"Pizza\"\n          helpText=\"Choose your favorite snack...\"\n          icon=\"favorite\"\n          options={['Cookies', 'Pizza', 'Icecream']}\n        />\n      </DocsExample>\n\n      <DocsSubtitle>Validation</DocsSubtitle>\n      <DocsExample label=\"Required\">\n        <Select\n          label=\"Required\"\n          required\n          options={['Cookies', 'Pizza', 'Icecream']}\n        />\n      </DocsExample>\n      <DocsExample label=\"Invalid\">\n        <Select\n          label=\"Invalid\"\n          invalid\n          options={['Cookies', 'Pizza', 'Icecream']}\n        />\n      </DocsExample>\n      <DocsExample label=\"Disabled\">\n        <Select\n          label=\"Disabled\"\n          disabled\n          options={['Cookies', 'Pizza', 'Icecream']}\n        />\n      </DocsExample>\n\n      <DocsSubtitle>Data Driven Selects</DocsSubtitle>\n      <DocsP>\n        To fit common use cases, RMWC Select provides a data driven method for\n        rendering select menus. There are multiple formats you can pass data in,\n        use the one that best fits your requirements. To make your label not\n        float by default and to have an unselected blank value, set the\n        `placeholder` prop to a blank string.\n      </DocsP>\n\n      <DocsExample label=\"Formatted Options\">\n        {function Example() {\n          // A controlled select Using a formatted array of options\n          const options = [\n            {\n              label: 'Cookies',\n              value: '1'\n            },\n            {\n              label: 'Pizza',\n              value: '2',\n              /** Any additional items will be passed to the\n                 child ListItem as props */\n              'aria-disabled': true,\n              tabIndex: -1\n            },\n            {\n              label: 'Icecream',\n              value: '3'\n            }\n          ];\n\n          return <Select label=\"Array\" options={options} />;\n        }}\n      </DocsExample>\n\n      <DocsExample label=\"Value => Label Map\">\n        <Select\n          label=\"Object map\"\n          options={{ '1': 'Cookies', '2': 'Pizza', '3': 'Icecream' }}\n        />\n      </DocsExample>\n\n      <DocsExample label=\"Array\">\n        <Select\n          label=\"Simple Array\"\n          placeholder=\"-- Select One --\"\n          options={['Cookies', 'Pizza', 'Icecream']}\n        />\n      </DocsExample>\n\n      <DocsSubtitle>Manually Building the List</DocsSubtitle>\n      <DocsP>\n        If you want full control over the child `ListItems`, you can manually\n        build the list yourself.\n      </DocsP>\n\n      <DocsExample label=\"Manually Built\">\n        <Select label=\"Manual\" defaultValue=\"Cookies\">\n          <option value=\"Cookies\">Cookies</option>\n          <option value=\"Pizza\">Pizza</option>\n          <option value=\"Icecream\">Icecream</option>\n        </Select>\n      </DocsExample>\n\n      <DocsSubtitle>Option Groups</DocsSubtitle>\n      <DocsP>\n        Both native and enhanced Selects can contain option groups. Just nest\n        additional options arrays in your data.\n      </DocsP>\n\n      <DocsExample label=\"Option Groups: Formatted\">\n        <Select\n          label=\"Formatted\"\n          enhanced\n          options={[\n            {\n              label: 'Dinner',\n              options: [\n                {\n                  label: 'Pizza',\n                  value: '2'\n                }\n              ]\n            },\n            {\n              label: 'Dessert',\n              options: [\n                {\n                  label: 'Cookies',\n                  value: '1'\n                },\n\n                {\n                  label: 'Icecream',\n                  value: '3'\n                }\n              ]\n            }\n          ]}\n        />\n      </DocsExample>\n      <DocsExample label=\"Options Groups: Manually Built\">\n        <Select label=\"Manually Built\">\n          <optgroup label=\"Dinner\">\n            <option value=\"Pizza\">Pizza</option>\n          </optgroup>\n          <optgroup label=\"Dessert\">\n            <option value=\"Cookies\">Cookies</option>\n            <option value=\"Icecream\">Icecream</option>\n          </optgroup>\n        </Select>\n      </DocsExample>\n\n      <DocProps src={propsSrc} components={[Select]} />\n    </Docs>\n  );\n}\n"],"sourceRoot":""}